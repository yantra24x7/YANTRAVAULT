{"version":3,"sources":["src/app/Components/filepath/edit.html","src/app/Components/filepath/filepath.component.html","src/app/Components/filepath/popup.html","src/app/Components/filepath/filepath.component.scss","src/app/Components/filepath/filepath.component.ts","src/app/Components/filepath/filepath.module.ts","src/app/Service/app/filepath.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"modal_sec\\\">\\r\\n    <mat-toolbar class=\\\"forum\\\">\\r\\n        <h3>File Path Registration</h3>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onNoClick()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">×</span>\\r\\n        </button>\\r\\n    </mat-toolbar>\\r\\n    <div class=\\\"dialog-form\\\">\\r\\n        <div class=\\\"filter_sec\\\">\\r\\n            <form [formGroup]=\\\"login\\\" class=\\\"form_sec\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Ip</mat-label>\\r\\n                    <input matInput formControlName=\\\"ip\\\"  \\r\\n                     type=\\\"text\\\">\\r\\n                </mat-form-field>\\r\\n                <div class=\\\"row_sec\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>User Name</mat-label>\\r\\n                        <input matInput formControlName=\\\"user_name\\\" type=\\\"text\\\">\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>Password</mat-label>\\r\\n                        <input matInput formControlName=\\\"pass\\\" [type]=\\\" hide ? 'password' : 'text'\\\">\\r\\n                        <mat-icon class=\\\"eye\\\" matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility_off' : 'visibility'}}\\r\\n                        </mat-icon>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <p>File Location</p>\\r\\n\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <!-- <mat-label>Master Location</mat-label> -->\\r\\n                    <input matInput formControlName=\\\"master_location\\\" [readonly]=\\\"true\\\" placeholder=\\\"/home/part_program\\\" type=\\\"text\\\">\\r\\n                </mat-form-field>\\r\\n<!-- \\r\\n                <mat-form-field>\\r\\n                    <mat-label>Slave</mat-label>\\r\\n                    <input matInput formControlName=\\\"slave_location\\\" type=\\\"text\\\">\\r\\n                </mat-form-field> -->\\r\\n\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-select placeholder=\\\"Select Machine\\\" matNativeControl required formControlName=\\\"machine_id\\\">\\r\\n                        <mat-option *ngFor=\\\"let file of filepath_response\\\" [value]=\\\"file.id\\\">{{file.machine_name}}\\r\\n                        </mat-option>\\r\\n\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <div class=\\\"form-button text-right\\\">\\r\\n                    <button mat-raised-button [disabled]=\\\"login.invalid\\\" (click)=\\\"logintest()\\\"\\r\\n                        class=\\\"filter_btn btn_orange\\\">\\r\\n                        Save</button>\\r\\n                    <button mat-raised-button (click)=\\\"onNoClick()\\\" class=\\\"filter_btn btn_default ml-16\\\">Close</button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<section class=\\\"page\\\">\\n  <div *ngIf=\\\"myLoader\\\" class=\\\"spinner\\\">\\n    <img src=\\\"assets/images/spinner.gif\\\">\\n  </div>\\n  <div class=\\\"section_top_padding\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"page_title_sec\\\">\\n        <h2 class=\\\"sub_title\\\">\\n          <mat-icon class=\\\"v-align-middle display\\\">file_copy</mat-icon>\\n          <span class=\\\"v-align-middle\\\">FilePath Registration</span>\\n        </h2>\\n        <div class=\\\"add_new\\\">\\n          <mat-icon class=\\\"circle\\\" (click)=\\\"openDialog()\\\">add</mat-icon>\\n        </div>\\n      </div>\\n      <mat-card class=\\\"card_sec\\\">\\n        <mat-card-content class=\\\"table-responsive\\\">\\n          <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z0\\\">\\n            <!-- Position Column -->\\n            <ng-container matColumnDef=\\\"position\\\">\\n              <th mat-header-cell *matHeaderCellDef>#</th>\\n              <td mat-cell *matCellDef = \\\"let i=index;\\\"> {{i+1}} </td>\\n            </ng-container>\\n\\n            <!-- Name Column -->\\n            <ng-container matColumnDef=\\\"machine_name\\\">\\n              <th mat-header-cell *matHeaderCellDef> Machine Name </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.machine.machine_name || '---'}} </td>\\n            </ng-container>\\n\\n            <!-- Weight Column -->\\n            <ng-container matColumnDef=\\\"master_location\\\">\\n              <th mat-header-cell *matHeaderCellDef> Master Path </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.master_location || '---'}} </td>\\n            </ng-container>\\n\\n            <!-- Symbol Column -->\\n            <ng-container matColumnDef=\\\"slave_location\\\">\\n              <th mat-header-cell *matHeaderCellDef> Slave Path </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.slave_location || '---'}} </td>\\n            </ng-container>\\n\\n\\n            <ng-container matColumnDef=\\\"action\\\">\\n              <!-- <mat-header-cell *matHeaderCellDef> Action </mat-header-cell> -->\\n\\n              <th mat-header-cell *matHeaderCellDef> Action </th>\\n              <ul *matCellDef=\\\"let element\\\" class=\\\"table_action\\\">\\n                <li>\\n                  <mat-icon mat-button aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\" (click)=\\\"filepath_edit(element,element.id)\\\"\\n                    mattooltip=\\\"Edit\\\">edit\\n                  </mat-icon>\\n                </li>\\n                <li>\\n                  <mat-icon mat-button aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\" (click)=\\\"filepath_delete(element.id)\\\"\\n                    mattooltip=\\\"Delete\\\">delete\\n                  </mat-icon>\\n                </li>\\n              </ul>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n          </table>\\n         \\n        </mat-card-content>\\n        <mat-card-content *ngIf=\\\"result.length==0\\\" class=\\\"no_data_found\\\">\\n          <h2>No data found</h2>\\n        </mat-card-content> \\n      </mat-card>\\n    </div>\\n  </div>\\n</section>\"","export default \"<div class=\\\"modal_sec\\\">\\r\\n    <mat-toolbar class=\\\"forum\\\">\\r\\n        <h3>File Path Registration</h3>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onNoClick()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">×</span>\\r\\n        </button>\\r\\n    </mat-toolbar>\\r\\n    <div class=\\\"dialog-form\\\">\\r\\n        <div class=\\\"filter_sec\\\">\\r\\n            <form [formGroup]=\\\"login\\\" class=\\\"form_sec\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Ip</mat-label>\\r\\n                    <input matInput formControlName=\\\"ip\\\" \\r\\n                     type=\\\"text\\\">\\r\\n                </mat-form-field>\\r\\n                <div class=\\\"row_sec\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>User Name</mat-label>\\r\\n                        <input matInput formControlName=\\\"user_name\\\" type=\\\"text\\\">\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>Password</mat-label>\\r\\n                        <input matInput formControlName=\\\"pass\\\" [type]=\\\" hide ? 'password' : 'text'\\\">\\r\\n                        <mat-icon class=\\\"eye\\\" matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility_off' : 'visibility'}}\\r\\n                        </mat-icon>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <p>File Location</p>\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <!-- <mat-label>Master Location</mat-label> -->\\r\\n                    <input matInput formControlName=\\\"master_location\\\"  [readonly]=\\\"true\\\" placeholder=\\\"/home/part_program\\\" >\\r\\n                </mat-form-field>\\r\\n\\r\\n                <!-- <mat-form-field>\\r\\n                    <mat-label>Slave</mat-label>\\r\\n                    <input matInput formControlName=\\\"slave_location\\\" type=\\\"text\\\">\\r\\n                </mat-form-field> -->\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-select placeholder=\\\"Select Machine\\\" matNativeControl required formControlName=\\\"machine_id\\\">\\r\\n                        <mat-option *ngFor=\\\"let file of filepath_response\\\" [value]=\\\"file.id\\\">{{file.machine_name}}\\r\\n                        </mat-option>\\r\\n\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                <div class=\\\"form-button text-right\\\">\\r\\n                    <button mat-raised-button  (click)=\\\"loginform()\\\"\\r\\n                        class=\\\"filter_btn btn_orange\\\">\\r\\n                        Save</button>\\r\\n                    <button mat-raised-button (click)=\\\"onNoClick()\\\" class=\\\"filter_btn btn_default ml-16\\\">Close</button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \".row_sec {\\n  display: -webkit-box;\\n  display: flex;\\n  flex-wrap: wrap; }\\n  .row_sec .mat-form-field {\\n    width: 48%; }\\n  .row_sec .mat-form-field:first-child {\\n      margin-right: 16px; }\\n  .spinner {\\n  background: #262932;\\n  height: 100vh;\\n  opacity: 0.9;\\n  position: fixed;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  width: auto;\\n  z-index: 999; }\\n  .spinner img {\\n  width: 90px;\\n  margin-top: -130px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FsdGl1cy9Qcml5YS95YW50cmFfdmF1bHRfZnJvbnRlbmQvc3JjL2FwcC9Db21wb25lbnRzL2ZpbGVwYXRoL2ZpbGVwYXRoLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksb0JBQWE7RUFBYixhQUFhO0VBQ2IsZUFBZSxFQUFBO0VBRm5CO0lBSUksVUFBVSxFQUFBO0VBSmQ7TUFNUSxrQkFBa0IsRUFBQTtFQUkxQjtFQUNJLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2IsWUFBWTtFQUNaLGVBQWU7RUFDZixvQkFBYTtFQUFiLGFBQWE7RUFDYix5QkFBbUI7VUFBbkIsbUJBQW1CO0VBQ25CLHdCQUF1QjtVQUF2Qix1QkFBdUI7RUFDdkIsTUFBTTtFQUNOLE9BQU87RUFDUCxRQUFRO0VBQ1IsV0FBVztFQUNYLFlBQVksRUFBQTtFQUdkO0VBQ0UsV0FBVztFQUNYLGtCQUFrQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvQ29tcG9uZW50cy9maWxlcGF0aC9maWxlcGF0aC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yb3dfc2Vje1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuLm1hdC1mb3JtLWZpZWxkIHtcclxuICAgIHdpZHRoOiA0OCU7XHJcbiAgICAmOmZpcnN0LWNoaWxke1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMTZweDtcclxuICAgIH1cclxuICAgIH1cclxufVxyXG4uc3Bpbm5lciB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMjYyOTMyO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIG9wYWNpdHk6IDAuOTtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIHotaW5kZXg6IDk5OTtcclxuICB9XHJcbiAgXHJcbiAgLnNwaW5uZXIgaW1nIHtcclxuICAgIHdpZHRoOiA5MHB4O1xyXG4gICAgbWFyZ2luLXRvcDogLTEzMHB4O1xyXG4gIH0iXX0= */\"","import { Component, OnInit,Inject} from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { FormControl, FormGroup, Validators,FormBuilder } from '@angular/forms';\nimport { NavbarService} from '../../Nav/navbar.service';\nimport Swal from 'sweetalert2'\nimport { FilepathService } from 'src/app/Service/app/filepath.service';\nimport { HttpHeaders } from '@angular/common/http';\nimport { MatTableDataSource } from '@angular/material';\nimport { untilDestroyed } from 'ngx-take-until-destroy';\n@Component({\n  selector: 'app-filepath',\n  templateUrl: './filepath.component.html',\n  styleUrls: ['./filepath.component.scss']\n})\nexport class FilepathComponent implements OnInit {\n  displayedColumns: string[] = ['position', 'machine_name', 'master_location', 'slave_location','action'];\n  dataSource = new MatTableDataSource();\n  tenant: any;\n  result: any;\n  myLoader = false;\n  constructor(public dialog: MatDialog,private fb:FormBuilder,private nav:NavbarService,private service:FilepathService) {\n    this.nav.show();\n    this.tenant=localStorage.getItem('tenant_id')\n\n   }\n  openDialog(): void {\n    const dialogRef = this.dialog.open(Popup, {\n      width: '450px',\n       data: { new: 'new' }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.ngOnInit();\n\n    });\n  }\n  filepath_edit(shift, id): void{\n\n    const dialogRef = this.dialog.open(Edit, {\n      width: '450px',\n      data: { edit_shift: shift, shift_id: id }\n\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.ngOnInit();\n\n    });\n  }\n  ngOnInit() {\n    this.myLoader = true;\nthis.service.show_filepath(this.tenant).pipe(untilDestroyed(this)).subscribe(res =>{\n  this.myLoader = false;\n  this.result = res;\n  this.dataSource = new MatTableDataSource(this.result);\n})\n\n  }\n  filepath_delete(id){\n    Swal.fire({\n      title: 'Are you sure want to delete?',\n      // type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n        Swal.fire({\n          title: 'Please Confirm'\n        }).then((destroy) => {\n          if (destroy.value) {\n            this.service.delete_row(id).pipe(untilDestroyed(this)).subscribe(res => {\n              if(res === true)\n              {\n                Swal.fire(\"Deleted Succesfully !\")\n              }\n              else{\n                Swal.fire(\"Delete Succesfully\")\n              }\n              this.ngOnInit()\n            })\n          }\n        })\n      }\n    })\n    \n  }\n  ngOnDestroy(){\n\n  }\n}\n@Component({\n  selector: 'popup-page',\n  templateUrl: 'popup.html',\n  styleUrls: ['./filepath.component.scss']\n\n})\nexport class Popup {\n  login:FormGroup;\n  http: any;\n  machinesArray: any;\n  tenant_id: string;\n  headers: string;\n  filepath_response:any;\n  tenant: any;\n  value:any;\n  status:any\n  hide: boolean = true;\n\n  constructor(private service:FilepathService,public dialogRef: MatDialogRef<Popup>,@Inject(MAT_DIALOG_DATA) public data: Popup,private fb:FormBuilder, private filepath: FilepathService) {\n  //  this.value = data;\n    this.tenant=localStorage.getItem('tenant_id')\n  \n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  ngOnInit() {\n\n\n  // if (this.value.new) {\n  //     this.login = this.fb.group({\n  //       ip: [\"\",Validators.required],\n  //       user_name: [\"\",Validators.required],\n  //       pass: [\"\",Validators.required],\n  //       master_location: [\"\",Validators.required],\n  //       slave_location: [\"\",Validators.required],\n  //       machine_id:[\"\",Validators.required]\n  //     })\n  //   } else {\n  //     this.login = this.fb.group({\n  //       ip: [this.value.edit_shift.ip,],\n  //       user_name: [this.value.edit_shift.user_name,],\n  //       pass: [this.value.edit_shift.pass,],\n  //       master_location: [this.value.edit_shift.master_location,],\n  //       slave_location: [this.value.edit_shift.slave_location,],\n  //       machine_id:[this.value.edit_shift.machine.machine_name,]\n\n  //     })\n  //   }\n  \n  this.login = this.fb.group({\n    ip:[\"\",Validators.pattern('^[0-9]{10}$')],\n    user_name:[\"\",],\n    pass:[\"\",],\n    master_location:[\"\",],\n    machine_id:[\"\",]\n  })\n  this.filepath.tenant_id().pipe(untilDestroyed(this)).subscribe(res => {\n      this.filepath_response=res;\n     });\n\n      this.service.machine(this.tenant).pipe(untilDestroyed(this)).subscribe(res =>{\n  })\n  }\n  onSelect(id: any) {\n    throw new Error(\"Method not implemented.\");\n  }\n  \n  loginform() {\n\n    let scotch ={\n      \"ip\": this.login.value.ip,\n      \"user_name\":this.login.value.user_name,\n      \"pass\": this.login.value.pass,\n      \"machine_id\": this.login.value.machine_id,\n      \"master_location\":\"/home/part_program\",\n      \"slave_location\":\"/home/part_program\"\n    }\n    this.filepath.popup(scotch).pipe(untilDestroyed(this)).subscribe(res => {\n       Swal.fire(res['status'])\n      \n      this.dialogRef.close();\n  })\n\n    //if (this.value.new) {\n      //this.myLoader = true;\n\n      //this.filepath.popup(this.login.value).pipe(untilDestroyed(this)).subscribe(res => {\n        //this.myLoader = false;\n\n        //this.toast.success('Created Successfully')\n        //this.dialogRef.close();\n      //})\n    //} else {\n      \n       \n      //this.filepath.edit_filepath(this.value.shift_id,data).\n      //pipe(untilDestroyed(t his)).subscribe( res => {\n        //this.myLoader = false;\n\n        //this.toast.success('Updated Successfully')\n        //this.dialogRef.close();\n      //})\n    //}\n  }\n  keyPress(event: any) {\n    const pattern = /[0-9\\+\\-\\ ]/;\n    let inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode != 8 && !pattern.test(inputChar)) {\n    event.preventDefault();\n    }\n   }\n\n   output(ipaddress)\n   {\n    if (/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ipaddress)) {  \n      return (true)  \n    }  \n    alert(\"You have entered an invalid IP address!\")  \n    return (false)  \n   }\n   ngOnDestroy(){\n\n  }\n  \n}\n\n\n\n@Component({\n  selector: 'edit-page',\n  templateUrl: 'edit.html',\n  styleUrls: ['./filepath.component.scss']\n\n})\nexport class Edit {\n  login:FormGroup;\n  http: any;\n  machinesArray: any;\n  tenant_id: string;\n  headers: string;\n  tenant: any;\n  value:any;\n  status:any\n  filepath_response: any;\n  add_val: any;\n  hide: boolean = true;\n\n  constructor(private service:FilepathService,public dialogRef: MatDialogRef<Edit>,@Inject(MAT_DIALOG_DATA) public data: Edit,private fb:FormBuilder, private filepath: FilepathService) {\n   this.value = data;\n    this.tenant=localStorage.getItem('tenant_id')\n  \n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  output(ipaddress)\n   {\n    if (/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ipaddress)) {  \n      return (true)  \n    }  \n    alert(\"You have entered an invalid IP address!\")  \n    return (false)  \n   }\n  ngOnInit() {\n\n\n  this.login = this.fb.group({\n    ip:[this.value.edit_shift.ip],\n    user_name:[this.value.edit_shift.user_name],\n    pass:[this.value.edit_shift.pass],\n    master_location:[\"/home/part_program\"],\n    machine_id:[this.value.edit_shift.machine.id]\n  })\n  this.filepath.tenant_id().pipe(untilDestroyed(this)).subscribe(res => {\n      this.filepath_response=res;\n     });\n\n      this.service.machine(this.tenant).pipe(untilDestroyed(this)).subscribe(res =>{\n  })\n  }\n  onSelect(id: any) {\n    throw new Error(\"Method not implemented.\");\n  }\n  \n  logintest() {\n\n    this.add_val = this.login.value \n    this.add_val[\"slave_location\"] =  \"/home/part_program\";\n    this.filepath.edit(this.value.edit_shift.id,this.add_val).pipe(untilDestroyed(this)).subscribe(res => {\n       Swal.fire(\"Updated Successfully!\")\n      \n      this.dialogRef.close();\n  })\n\n    //if (this.value.new) {\n      //this.myLoader = true;\n\n      //this.filepath.popup(this.login.value).pipe(untilDestroyed(this)).subscribe(res => {\n        //this.myLoader = false;\n\n        //this.toast.success('Created Successfully')\n        //this.dialogRef.close();\n      //})\n    //} else {\n      \n       \n      //this.filepath.edit_filepath(this.value.shift_id,data).\n      //pipe(untilDestroyed(t his)).subscribe( res => {\n        //this.myLoader = false;\n\n        //this.toast.success('Updated Successfully')\n        //this.dialogRef.close();\n      //})\n    //}\n  }\n  keyPress(event: any) {\n    const pattern = /[0-9\\+\\-\\ ]/;\n    let inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode != 8 && !pattern.test(inputChar)) {\n    event.preventDefault();\n    }\n   }\n   ngOnDestroy(){\n\n  }\n  \n}\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FilepathComponent,Popup,Edit} from './filepath.component';\nimport { SharedModule} from '../shared/shared.module';\nimport { FilepathService} from '../../Service/app/filepath.service';\nconst routes: Routes = [{ path: '', component: FilepathComponent }];\n \n@NgModule({\n  declarations: [FilepathComponent,Popup,Edit],\n  imports: [RouterModule.forChild(routes),\n  CommonModule,SharedModule\n  ],\n  entryComponents:[Popup,Edit],\n  providers:[FilepathService]\n\n})\nexport class FilepathModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment} from '../../../environments/environment';\nimport { TokenService} from '../core/authentication/token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilepathService {\n\n  token1: any;\n  headers: any;\n  options: any;\n\n  constructor(private http:HttpClient, private token: TokenService ) { \n    this.token1 = localStorage.getItem('token');\n    let headers1: HttpHeaders = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${this.token1}`\n    });\n  }\n  // url = environment.serverUrl;\n  tenantId = this.token.getTenantID();\n \n  tenant_id() {\n    return this.http.get('machines?tenant_id='+this.tenantId, this.headers);\n  }\n \n  popup(params)\n  {\n   return this.http.post('/program_confs',params)\n  }\n  edit(id,value)\n  {\n    return this.http.put('program_confs/'+id,value)\n  }\n  machine(tenantid):Observable<any>{\n     return this.http.get('/machines?tenant_id='+tenantid)\n  }\n  show_filepath(tenantId):Observable<any>{\n    return this.http.get('program_confs?tenant_id='+tenantId)\n  }\n  delete_row(id):Observable<any>{\n    return this.http.delete('program_confs/'+id)\n  }\n  file_list(id):Observable<any>{\n    return this.http.get('file_list?id='+id)\n  }\n}\n\n"],"sourceRoot":"webpack:///","file":"Components-filepath-filepath-module-es5.js"}