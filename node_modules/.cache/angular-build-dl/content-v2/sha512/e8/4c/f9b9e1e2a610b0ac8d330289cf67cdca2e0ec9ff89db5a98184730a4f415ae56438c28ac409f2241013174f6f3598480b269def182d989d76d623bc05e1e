{"version":3,"sources":["./src/app/Components/machine-registration/add.html","./src/app/Components/machine-registration/edit.html","./src/app/Components/machine-registration/machine-registration.component.html","./src/app/Components/machine-registration/settings.html","./src/app/Components/machine-registration/machine-registration.component.scss","./src/app/Components/machine-registration/machine-registration.component.ts","./src/app/Components/machine-registration/machine-registration.module.ts","./src/app/Service/app/machine.service.ts"],"names":[],"mappings":"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","file":"Components-machine-registration-machine-registration-module-es2015.js","sourcesContent":["export default \"<div class=\\\"modal_sec two_form\\\">\\r\\n    <mat-toolbar>\\r\\n        <h3>Machine Registration</h3>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onNoClick()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">×</span>\\r\\n        </button>\\r\\n    </mat-toolbar>\\r\\n\\r\\n    <div class=\\\"row_sec\\\">\\r\\n        <form [formGroup]=\\\"login\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Machine Name</mat-label>\\r\\n                <input matInput formControlName=\\\"machine_type\\\" type=\\\"text\\\" required>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Machine Type</mat-label>\\r\\n                <input matInput formControlName=\\\"machine_name\\\" type=\\\"text\\\" required>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Controller Model Number</mat-label>\\r\\n                <input matInput formControlName=\\\"machine_model\\\" type=\\\"text\\\" required>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Machine Serial Number</mat-label>\\r\\n                <input matInput formControlName=\\\"machine_serial_no\\\" type=\\\"text\\\" required>\\r\\n            </mat-form-field>\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Machine IP</mat-label>\\r\\n                    <input matInput formControlName=\\\"machine_ip\\\" type=\\\"text\\\" required>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Select Unit</mat-label>\\r\\n                    <mat-select matNativeControl required formControlName=\\\"unit\\\" required>\\r\\n                        <mat-option value=\\\"Select unit\\\" disabled>Select Unit</mat-option>\\r\\n                        <mat-option value=\\\"Unit - 1\\\">Unit1</mat-option>\\r\\n                        <mat-option value=\\\"Unit - 2\\\">Unit2</mat-option>\\r\\n                        <mat-option value=\\\"Unit - 3\\\">Unit3</mat-option>\\r\\n                        <mat-option value=\\\"Unit - 4\\\">Unit4</mat-option>\\r\\n                        <mat-option value=\\\"Unit - 5\\\">Unit5</mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Device ip (Eg:GTA-Y001-0001)</mat-label>\\r\\n                <input matInput formControlName=\\\"device_id\\\" type=\\\"text\\\" required>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Machine Type</mat-label>\\r\\n                <mat-select matNativeControl required formControlName=\\\"controller_type\\\">\\r\\n                    <mat-option value=\\\"Select Machine\\\" disabled>Select Machine</mat-option>\\r\\n                    <mat-option value=\\\"Ethernet\\\" (click)=\\\"machineSelect('Ethernet')\\\">Ethernet</mat-option>\\r\\n                    <mat-option value=\\\"RS232\\\" (click)=\\\"machineSelect('RS232')\\\">RS232</mat-option>\\r\\n                    <!-- <mat-option value=\\\"CT&PT\\\" (click)=\\\"machineSelect('CT&PT')\\\">CT&PT</mat-option> -->\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\"  *ngIf=\\\"login.value.controller_type === 'RS232' \\\">\\r\\n                <mat-label>Border Rate</mat-label>\\r\\n                <input matInput formControlName=\\\"border_rate\\\" type=\\\"text\\\" required> \\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"login.value.controller_type === 'RS232' \\\">\\r\\n                <mat-label>T1 IP</mat-label>\\r\\n                <input matInput formControlName=\\\"t1_ip\\\" type=\\\"text\\\" required> \\r\\n            </mat-form-field>\\r\\n\\r\\n            <div class=\\\"form-button text-right\\\">\\r\\n                <button mat-raised-button (click)=\\\"form()\\\" [disabled]=\\\"login.invalid\\\" class=\\\"filter_btn btn_orange\\\">\\r\\n                    Save</button>\\r\\n                <button mat-raised-button (click)=\\\"onNoClick()\\\" (click)=\\\"cancel()\\\"\\r\\n                    class=\\\"filter_btn btn_default ml-16\\\">Close</button>\\r\\n            </div>\\r\\n\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"modal_sec two_form\\\">\\r\\n    <mat-toolbar>\\r\\n        <h3>Machine Registration</h3>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onNoClick()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">×</span>\\r\\n        </button>\\r\\n    </mat-toolbar>\\r\\n    <!-- class=\\\"dialog-form\\\" -->\\r\\n    <div class=\\\"row_sec\\\">\\r\\n        <form [formGroup]=\\\"login\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Machine Name</mat-label>\\r\\n                <input matInput formControlName=\\\"machine_type\\\" type=\\\"text\\\" required>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Machine Type</mat-label>\\r\\n                <input matInput formControlName=\\\"machine_name\\\" type=\\\"text\\\" required>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Controller Model Number</mat-label>\\r\\n                <input matInput formControlName=\\\"machine_model\\\" type=\\\"text\\\" required>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Machine Serial Number</mat-label>\\r\\n                <input matInput formControlName=\\\"machine_serial_no\\\" type=\\\"text\\\" required>\\r\\n            </mat-form-field>\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Machine IP</mat-label>\\r\\n                    <input matInput formControlName=\\\"machine_ip\\\" type=\\\"text\\\" required>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Select Unit</mat-label>\\r\\n                    <mat-select matNativeControl required formControlName=\\\"unit\\\" required>\\r\\n                        <mat-option value=\\\"Select unit\\\" disabled>Select Unit</mat-option>\\r\\n                        <mat-option value=\\\"Unit - 1\\\">Unit1</mat-option>\\r\\n                        <mat-option value=\\\"Unit - 2\\\">Unit2</mat-option>\\r\\n                        <mat-option value=\\\"Unit - 3\\\">Unit3</mat-option>\\r\\n                        <mat-option value=\\\"Unit - 4\\\">Unit4</mat-option>\\r\\n                        <mat-option value=\\\"Unit - 5\\\">Unit5</mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Device ip (Eg:GTA-Y001-0001)</mat-label>\\r\\n                <input matInput formControlName=\\\"device_id\\\" type=\\\"text\\\" required>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>Machine Type</mat-label>\\r\\n                <mat-select matNativeControl required formControlName=\\\"controller_type\\\">\\r\\n                    <mat-option value=\\\"Select Machine\\\" disabled>Select Machine</mat-option>\\r\\n                    <mat-option value=\\\"Ethernet\\\" >Ethernet</mat-option>\\r\\n                    <mat-option value=\\\"RS232\\\" >RS232</mat-option>\\r\\n                    <!-- <mat-option value=\\\"CT&PT\\\" >CT&PT</mat-option> -->\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\"  *ngIf=\\\"login.value.controller_type === 'RS232' \\\">\\r\\n                <mat-label>Border Rate</mat-label>\\r\\n                <input matInput formControlName=\\\"border_rate\\\" type=\\\"text\\\" required> \\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"login.value.controller_type === 'RS232' \\\">\\r\\n                <mat-label>T1 IP</mat-label>\\r\\n                <input matInput formControlName=\\\"t1_ip\\\" type=\\\"text\\\" required> \\r\\n            </mat-form-field>\\r\\n            <div class=\\\"form-button text-right\\\">\\r\\n                <button mat-raised-button (click)=\\\"loginforum()\\\" [disabled]=\\\"login.invalid\\\" class=\\\"filter_btn btn_orange\\\">\\r\\n                    Save</button>\\r\\n                <button mat-raised-button (click)=\\\"onNoClick()\\\" (click)=\\\"cancel()\\\"\\r\\n                    class=\\\"filter_btn btn_default ml-16\\\">Close</button>\\r\\n            </div>\\r\\n\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"","export default \"<section class=\\\"page\\\">\\r\\n    <div *ngIf=\\\"myLoader\\\" class=\\\"spinner\\\">\\r\\n        <img src=\\\"assets/images/spinner.gif\\\">\\r\\n      </div>\\r\\n    <div class=\\\"section_top_padding\\\">\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n            <div class=\\\"page_title_sec\\\">\\r\\n                <h2 class=\\\"sub_title\\\">\\r\\n                    <mat-icon class=\\\"v-align-middle display\\\">laptop</mat-icon>\\r\\n                    <span class=\\\"v-align-middle\\\"> Machine Registration</span>\\r\\n                </h2>\\r\\n            <div class=\\\"add_new\\\">\\r\\n                <mat-icon class=\\\"circle\\\" (click)=\\\"add_registartion()\\\">add</mat-icon>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"cards_collections\\\">\\r\\n                <div class=\\\"px-16\\\">\\r\\n                    <mat-card class=\\\"example-card\\\" *ngFor=\\\"let machine of machine_response ;let i=index\\\">\\r\\n                        <mat-card-content>\\r\\n                            <div class=\\\"switch_holder\\\">\\r\\n                                <!-- <div class=\\\"action_menus\\\">\\r\\n                                    <mat-icon (click)=\\\"setting_view(machine)\\\" class=\\\"v-align-middle edit\\\" matTooltip=\\\"Status Update\\\">\\r\\n                                        settings</mat-icon>\\r\\n                                    <mat-icon (click)=\\\"edit_view(machine)\\\" class=\\\"v-align-middle edit\\\" matTooltip=\\\"Edit\\\">\\r\\n                                        edit</mat-icon>\\r\\n                                    <mat-icon (click)=\\\"delete_view(machine.id)\\\" class=\\\"v-align-middle edit\\\" matTooltip=\\\"Delete\\\">\\r\\n                                        delete</mat-icon>\\r\\n                                </div> -->\\r\\n                            </div>\\r\\n                            <div class=\\\"action_menus\\\">\\r\\n                                <a [matMenuTriggerFor]=\\\"menu\\\" class=\\\"menu_open\\\">\\r\\n                                    <i class=\\\"material-icons\\\">\\r\\n                                        menu_open\\r\\n                                    </i>\\r\\n                                </a>\\r\\n                                <mat-menu #menu=\\\"matMenu\\\" class=\\\"actions\\\">\\r\\n                                    <button mat-menu-item (click)=\\\"edit_view(machine)\\\">\\r\\n                                        <!-- <i class=\\\"material-icons\\\">\\r\\n                                            edit\\r\\n                                        </i> -->\\r\\n                                        Edit\\r\\n                                    </button>\\r\\n                                    <button mat-menu-item (click)=\\\"delete_view(machine.id)\\\">\\r\\n                                        <!-- <i class=\\\"material-icons\\\">\\r\\n                                            delete\\r\\n                                        </i> -->\\r\\n                                        Delete\\r\\n                                    </button>\\r\\n                                    <!-- <button mat-menu-item  (click)=\\\"setting_view(machine)\\\" >\\r\\n                                       \\r\\n                                        Setting</button> -->\\r\\n                                </mat-menu>\\r\\n                            </div>\\r\\n\\r\\n                            <h2>{{machine.machine_name}}</h2>\\r\\n                            <h3>{{machine.machine_type}}</h3>\\r\\n                            <div class=\\\"content\\\">\\r\\n                                <div class=\\\"count\\\" >{{i+1}}</div>\\r\\n                                <div class=\\\"full_date\\\">\\r\\n                                    <p>\\r\\n                                        Controller  :\\r\\n                                        <span>{{machine.controller_type}}</span>\\r\\n                                    </p>\\r\\n                                \\r\\n                                    <p>\\r\\n                                        Model  :\\r\\n                                        <span>{{machine.machine_serial_no}}</span>\\r\\n                                    </p>\\r\\n                                    <p>\\r\\n                                        IP :\\r\\n                                        <span> {{machine.machine_ip}}</span>\\r\\n                                    </p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </mat-card-content>\\r\\n                    </mat-card>\\r\\n                </div>\\r\\n                <!-- <div class=\\\"px-16\\\">\\r\\n                    <mat-card class=\\\"example-card\\\">\\r\\n                        <mat-card-content>\\r\\n                            <div class=\\\"switch_holder\\\">\\r\\n                                <mat-slide-toggle class=\\\"status\\\"></mat-slide-toggle>\\r\\n                                <div class=\\\"action_menus\\\">\\r\\n                                    <mat-icon (click)=\\\"edit_view()\\\" class=\\\"v-align-middle edit\\\" matTooltip=\\\"Edit\\\">\\r\\n                                        edit</mat-icon>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <h2>RIPL/VMC/HW/EM-C22</h2>\\r\\n                            <div class=\\\"content\\\">\\r\\n                                <div class=\\\"count\\\">2</div>\\r\\n                                <div class=\\\"full_date\\\">\\r\\n                                    <p>\\r\\n                                        timeintervel :\\r\\n                                        <span>10</span>\\r\\n\\r\\n                                    </p>\\r\\n                                    <p>\\r\\n                                        Reason :\\r\\n                                        <span class=\\\"reason\\\"> idle</span>\\r\\n                                    </p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </mat-card-content>\\r\\n                    </mat-card>\\r\\n                </div>\\r\\n                <div class=\\\"px-16\\\">\\r\\n                    <mat-card class=\\\"example-card\\\">\\r\\n                        <mat-card-content>\\r\\n                            <div class=\\\"switch_holder\\\">\\r\\n                                <mat-slide-toggle class=\\\"status\\\"></mat-slide-toggle>\\r\\n                                <div class=\\\"action_menus\\\">\\r\\n                                    <mat-icon (click)=\\\"edit_view()\\\" class=\\\"v-align-middle edit\\\" matTooltip=\\\"Edit\\\">\\r\\n                                        edit</mat-icon>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <h2>RIPL/VMC/HW/EM-C22</h2>\\r\\n                            <div class=\\\"content\\\">\\r\\n                                <div class=\\\"count\\\">3</div>\\r\\n                                <div class=\\\"full_date\\\">\\r\\n                                    <p>\\r\\n                                        timeintervel :\\r\\n                                        <span>10</span>\\r\\n\\r\\n                                    </p>\\r\\n                                    <p>\\r\\n                                        Reason :\\r\\n                                        <span class=\\\"reason\\\"> idle</span>\\r\\n                                    </p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </mat-card-content>\\r\\n                    </mat-card>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"px-16 pr-0\\\">\\r\\n                    <mat-card class=\\\"example-card\\\">\\r\\n                        <mat-card-content>\\r\\n                            <div class=\\\"switch_holder\\\">\\r\\n                                <mat-slide-toggle class=\\\"status\\\"></mat-slide-toggle>\\r\\n                                <div class=\\\"action_menus\\\">\\r\\n                                    <mat-icon (click)=\\\"edit_view()\\\" class=\\\"v-align-middle edit\\\" matTooltip=\\\"Edit\\\">\\r\\n                                        edit</mat-icon>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <h2>RIPL/VMC/HW/EM-C22</h2>\\r\\n                            <div class=\\\"content\\\">\\r\\n                                <div class=\\\"count\\\">4</div>\\r\\n                                <div class=\\\"full_date\\\">\\r\\n                                    <p>\\r\\n                                        timeintervel :\\r\\n                                        <span>10</span>\\r\\n\\r\\n                                    </p>\\r\\n                                    <p>\\r\\n                                        Reason :\\r\\n                                        <span class=\\\"reason\\\"> idle</span>\\r\\n                                    </p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </mat-card-content>\\r\\n                    </mat-card>\\r\\n                </div> -->\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\"","export default \"<div class=\\\"modal_sec\\\">\\r\\n    <mat-toolbar class=\\\"forum\\\">\\r\\n        <h3>Axis Values</h3>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onNoClick()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">×</span>\\r\\n        </button>\\r\\n    </mat-toolbar>\\r\\n    <div class=\\\"dialog-form\\\">\\r\\n        <div class=\\\"filter\\\" *ngFor=\\\"let s of status\\\">\\r\\n           <p>{{s.setting_name}}</p>\\r\\n     <mat-slide-toggle  [checked] = \\\"s.is_active == true\\\" (change)=\\\"notify($event,s)\\\"></mat-slide-toggle> \\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \".row_sec {\\n  display: -webkit-box;\\n  display: flex;\\n  flex-wrap: wrap; }\\n  .row_sec .mat-form-field {\\n    width: 48% !important; }\\n  .row_sec .mat-form-field:nth-child(odd) {\\n      margin-right: 14px; }\\n  .cards_collections {\\n  margin-top: 24px; }\\n  .cards_collections .px-16 {\\n    display: -webkit-box;\\n    display: flex;\\n    flex-wrap: wrap; }\\n  .cards_collections .example-card {\\n    position: relative;\\n    width: 21%;\\n    margin: 15px 10px 15px 0; }\\n  .cards_collections .example-card h2 {\\n      margin-top: 16px;\\n      color: #000;\\n      font-size: 1.3rem;\\n      text-align: center;\\n      margin-bottom: 0;\\n      text-transform: capitalize; }\\n  .cards_collections .example-card h3 {\\n      color: #898888 !important;\\n      margin-bottom: 18px;\\n      text-align: center;\\n      margin-top: 8px;\\n      font-size: 18px;\\n      font-weight: 500;\\n      text-transform: capitalize; }\\n  .cards_collections .example-card .content .count {\\n      width: 40px;\\n      height: 40px;\\n      margin: 0 auto;\\n      background: #f7941e;\\n      border-radius: 50%;\\n      color: #fff;\\n      text-align: center;\\n      line-height: 40px;\\n      position: absolute;\\n      top: 0;\\n      left: 50%;\\n      -webkit-transform: translate(-50%, -50%);\\n              transform: translate(-50%, -50%); }\\n  .cards_collections .example-card .content .full_date {\\n      text-align: center; }\\n  .cards_collections .example-card .content .full_date p {\\n        color: #c7c7c7;\\n        margin: 5px 0;\\n        font-size: 16px; }\\n  .cards_collections .example-card .content .full_date p span {\\n          text-transform: lowercase;\\n          font-size: 16px;\\n          color: #8c8a8a; }\\n  .cards_collections .example-card .content .switch_holder .status {\\n      line-height: 25px;\\n      color: #c7c7c7;\\n      font-size: 11px; }\\n  .cards_collections .example-card .content .switch_holder .actions {\\n      float: right; }\\n  .cards_collections .example-card .content .switch_holder .actions mat-icon {\\n        font-size: 24px;\\n        cursor: pointer; }\\n  .cards_collections .example-card .content .switch_holder .actions mat-icon.edit {\\n          color: #c1c1c1; }\\n  .cards_collections .example-card .content .switch_holder .actions mat-icon.setting {\\n          color: #909090; }\\n  .cards_collections .example-card .content .switch_holder .actions mat-icon.delete {\\n          color: #e03434; }\\n  .cards_collections .example-card .action_menus {\\n      text-align: right;\\n      cursor: pointer; }\\n  .filter_sec .setting_sec {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center; }\\n  .dialog-form {\\n  display: -webkit-box;\\n  display: flex; }\\n  .dialog-form .filter {\\n    margin: 0 12px 0 0;\\n    padding: 0 16px; }\\n  .dialog-form .filter p {\\n      margin-bottom: 5px; }\\n  .spinner {\\n  background: #262932;\\n  height: 100vh;\\n  opacity: 0.9;\\n  position: fixed;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  width: auto;\\n  z-index: 999; }\\n  .spinner img {\\n  width: 90px;\\n  margin-top: -130px; }\\n  .two_form.modal_sec .mat-form-field {\\n  width: 100%;\\n  margin-right: 0; }\\n  @media only screen and (max-width: 600px) {\\n  .cards_collections .example-card {\\n    position: relative;\\n    width: 21%;\\n    margin: 15px 10px 15px 0; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FsdGl1cy9Qcml5YS95YW50cmFfdmF1bHRfZnJvbnRlbmQvc3JjL2FwcC9Db21wb25lbnRzL21hY2hpbmUtcmVnaXN0cmF0aW9uL21hY2hpbmUtcmVnaXN0cmF0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0JBQWE7RUFBYixhQUFhO0VBQ1QsZUFBZSxFQUFBO0VBRnJCO0lBSU0scUJBQW9CLEVBQUE7RUFKMUI7TUFNVSxrQkFBa0IsRUFBQTtFQUk1QjtFQUNFLGdCQUFnQixFQUFBO0VBRGxCO0lBR0ksb0JBQWE7SUFBYixhQUFhO0lBQ2IsZUFBZSxFQUFBO0VBSm5CO0lBT0Usa0JBQWtCO0lBQ2xCLFVBQVU7SUFDVix3QkFBd0IsRUFBQTtFQVQxQjtNQVdJLGdCQUFnQjtNQUNoQixXQUFXO01BQ1gsaUJBQWlCO01BQ2pCLGtCQUFrQjtNQUNsQixnQkFBZ0I7TUFDaEIsMEJBQTBCLEVBQUE7RUFoQjlCO01Bc0JJLHlCQUF3QjtNQUN4QixtQkFBbUI7TUFDbkIsa0JBQWtCO01BQ2xCLGVBQWU7TUFDZixlQUFlO01BQ2YsZ0JBQWdCO01BQ2hCLDBCQUEwQixFQUFBO0VBNUI5QjtNQWdDSSxXQUFXO01BQ1gsWUFBWTtNQUNaLGNBQWM7TUFDZCxtQkFBbUI7TUFDbkIsa0JBQWtCO01BQ2xCLFdBQVc7TUFDWCxrQkFBa0I7TUFDbEIsaUJBQWlCO01BQ2pCLGtCQUFrQjtNQUNsQixNQUFNO01BQ04sU0FBUztNQUNULHdDQUErQjtjQUEvQixnQ0FBK0IsRUFBQTtFQTNDbkM7TUE4Q00sa0JBQWtCLEVBQUE7RUE5Q3hCO1FBZ0RRLGNBQWM7UUFDZCxhQUFhO1FBQ2IsZUFBZSxFQUFBO0VBbER2QjtVQW9EVSx5QkFBeUI7VUFDekIsZUFBZTtVQUNmLGNBQWMsRUFBQTtFQXREeEI7TUFxRVEsaUJBQWlCO01BQ2pCLGNBQWM7TUFDZCxlQUFlLEVBQUE7RUF2RXZCO01BMEVRLFlBQVksRUFBQTtFQTFFcEI7UUE0RVUsZUFBZTtRQUNmLGVBQWUsRUFBQTtFQTdFekI7VUErRVksY0FBYyxFQUFBO0VBL0UxQjtVQWtGWSxjQUFjLEVBQUE7RUFsRjFCO1VBcUZZLGNBQWMsRUFBQTtFQXJGMUI7TUErRkksaUJBQWlCO01BQ2pCLGVBQWUsRUFBQTtFQVFuQjtFQUVFLG9CQUFhO0VBQWIsYUFBYTtFQUNiLHlCQUFtQjtVQUFuQixtQkFBbUIsRUFBQTtFQVNyQjtFQUNFLG9CQUFhO0VBQWIsYUFBYSxFQUFBO0VBRGY7SUFHRSxrQkFBa0I7SUFDbEIsZUFBZSxFQUFBO0VBSmpCO01BTUcsa0JBQWtCLEVBQUE7RUFJckI7RUFDRSxtQkFBbUI7RUFDbkIsYUFBYTtFQUNiLFlBQVk7RUFDWixlQUFlO0VBQ2Ysb0JBQWE7RUFBYixhQUFhO0VBQ2IseUJBQW1CO1VBQW5CLG1CQUFtQjtFQUNuQix3QkFBdUI7VUFBdkIsdUJBQXVCO0VBQ3ZCLE1BQU07RUFDTixPQUFPO0VBQ1AsUUFBUTtFQUNSLFdBQVc7RUFDWCxZQUFZLEVBQUE7RUFHZDtFQUNFLFdBQVc7RUFDWCxrQkFBa0IsRUFBQTtFQVNwQjtFQUNFLFdBQVc7RUFDWCxlQUFlLEVBQUE7RUFRakI7RUFDRTtJQUVFLGtCQUFrQjtJQUNsQixVQUFVO0lBQ1Ysd0JBQXdCLEVBQUEsRUFDekIiLCJmaWxlIjoic3JjL2FwcC9Db21wb25lbnRzL21hY2hpbmUtcmVnaXN0cmF0aW9uL21hY2hpbmUtcmVnaXN0cmF0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJvd19zZWN7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gIC5tYXQtZm9ybS1maWVsZCB7XHJcbiAgICAgIHdpZHRoOiA0OCUhaW1wb3J0YW50O1xyXG4gICAgICAmOm50aC1jaGlsZChvZGQpe1xyXG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG4gICAgICB9XHJcbiAgICAgIH1cclxuICB9XHJcbi5jYXJkc19jb2xsZWN0aW9uc3tcclxuICBtYXJnaW4tdG9wOiAyNHB4O1xyXG4gIC5weC0xNntcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgfVxyXG4gLmV4YW1wbGUtY2FyZHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IDIxJTtcclxuICBtYXJnaW46IDE1cHggMTBweCAxNXB4IDA7XHJcbiAgaDJ7XHJcbiAgICBtYXJnaW4tdG9wOiAxNnB4O1xyXG4gICAgY29sb3I6ICMwMDA7XHJcbiAgICBmb250LXNpemU6IDEuM3JlbTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcclxuICAgIC8vIG1pbi1oZWlnaHQ6IDUwcHg7XHJcbiAgICAvLyBoZWlnaHQ6IDUycHg7XHJcbiAgICAvLyBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIH1cclxuICBoM3tcclxuICAgIGNvbG9yOiAjODk4ODg4IWltcG9ydGFudDtcclxuICAgIG1hcmdpbi1ib3R0b206IDE4cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tdG9wOiA4cHg7XHJcbiAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XHJcbiAgfVxyXG4gIC5jb250ZW50e1xyXG4gICAgLmNvdW50e1xyXG4gICAgd2lkdGg6IDQwcHg7XHJcbiAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIGJhY2tncm91bmQ6ICNmNzk0MWU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGxpbmUtaGVpZ2h0OiA0MHB4O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwtNTAlKTtcclxuICAgIH1cclxuICAgIC5mdWxsX2RhdGV7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgcHtcclxuICAgICAgICBjb2xvcjogI2M3YzdjNztcclxuICAgICAgICBtYXJnaW46IDVweCAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICBzcGFue1xyXG4gICAgICAgICAgdGV4dC10cmFuc2Zvcm06IGxvd2VyY2FzZTtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICAgIGNvbG9yOiAjOGM4YThhO1xyXG4gICAgICAgIH1cclxuICAgICBcclxuICAgIH1cclxuXHJcbiAgICB9XHJcbiAgIFxyXG4gICAgLnN3aXRjaF9ob2xkZXJ7XHJcbiAgICAgIC8vIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZGRkO1xyXG4gICAgICAvLyBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gICAgICAvLyBwYWRkaW5nOiAxMHB4IDA7XHJcbiAgICAgIC8vIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIC8vIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgIC8vIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgLnN0YXR1c3tcclxuICAgICAgICBsaW5lLWhlaWdodDogMjVweDtcclxuICAgICAgICBjb2xvcjogI2M3YzdjNztcclxuICAgICAgICBmb250LXNpemU6IDExcHg7XHJcbiAgICAgIH1cclxuICAgICAgLmFjdGlvbnN7XHJcbiAgICAgICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgICAgIG1hdC1pY29ue1xyXG4gICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAgJi5lZGl0e1xyXG4gICAgICAgICAgICBjb2xvcjogI2MxYzFjMTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgICYuc2V0dGluZ3tcclxuICAgICAgICAgICAgY29sb3I6ICM5MDkwOTA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAmLmRlbGV0ZXtcclxuICAgICAgICAgICAgY29sb3I6ICNlMDM0MzQ7XHJcblxyXG4gICAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIH1cclxuICAgIH1cclxuICAgXHJcbiAgfVxyXG4gIC5hY3Rpb25fbWVudXN7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbn1cclxufVxyXG5cclxuXHJcbi8vIHNldHRpbmcgbW9kYWwgc3R5bGVcclxuXHJcbi5maWx0ZXJfc2VjIHtcclxuICAuc2V0dGluZ19zZWN7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIC8vIC5kaWFsb2ctZm9ybXtcclxuICAvLyAgIG92ZXJmbG93LXk6IHNjcm9sbDtcclxuICAvLyAgIG1pbi1oZWlnaHQ6IDQ5M3B4IWltcG9ydGFudDtcclxuICAvLyAgIGhlaWdodDogNDAwcHg7XHJcbiAgLy8gICB9XHJcbiAgfVxyXG59XHJcblxyXG4uZGlhbG9nLWZvcm17XHJcbiAgZGlzcGxheTogZmxleDtcclxuLmZpbHRlcntcclxuICBtYXJnaW46IDAgMTJweCAwIDA7XHJcbiAgcGFkZGluZzogMCAxNnB4O1xyXG4gcHtcclxuICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gfVxyXG59XHJcbn1cclxuLnNwaW5uZXIge1xyXG4gIGJhY2tncm91bmQ6ICMyNjI5MzI7XHJcbiAgaGVpZ2h0OiAxMDB2aDtcclxuICBvcGFjaXR5OiAwLjk7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICByaWdodDogMDtcclxuICB3aWR0aDogYXV0bztcclxuICB6LWluZGV4OiA5OTk7XHJcbn1cclxuXHJcbi5zcGlubmVyIGltZyB7XHJcbiAgd2lkdGg6IDkwcHg7XHJcbiAgbWFyZ2luLXRvcDogLTEzMHB4O1xyXG59XHJcbi8vIC50d29fZm9ybS5tb2RhbF9zZWMgLm1hdC1mb3JtLWZpZWxkIHtcclxuLy8gICAgIHdpZHRoOiAxMDAlO1xyXG4vLyAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4vLyAgICY6bnRoLWNoaWxkKDJuKXtcclxuLy8gICAgIG1hcmdpbi1yaWdodDogMDtcclxuLy8gICB9XHJcbi8vIH1cclxuLnR3b19mb3JtLm1vZGFsX3NlYyAubWF0LWZvcm0tZmllbGQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1hcmdpbi1yaWdodDogMDtcclxufVxyXG5cclxuXHJcbi8vIFJlc3Bvc25pdmUgc3R5bGVzXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDo3NjhweCkge1xyXG5cclxufVxyXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NjAwcHgpIHtcclxuICAuY2FyZHNfY29sbGVjdGlvbnN7XHJcbiAgIC5leGFtcGxlLWNhcmR7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB3aWR0aDogMjElO1xyXG4gICAgbWFyZ2luOiAxNXB4IDEwcHggMTVweCAwO1xyXG4gIH1cclxuICB9XHJcbn1cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLWRldmljZS13aWR0aDogMzIwcHgpIFxyXG4gICAgICAgICAgICAgICAgICAgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiAxMDI0cHgpIFxyXG4gICAgICAgICAgICAgICAgICAgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgfVxyXG4iXX0= */\"","import { Component, OnInit,Inject } from '@angular/core';\nimport { NavbarService} from '../../Nav/navbar.service';\nimport Swal from 'sweetalert2'\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { MachineService} from '../../Service/app/machine.service';\nimport { untilDestroyed } from 'ngx-take-until-destroy';\n@Component({\n  selector: 'app-machine-registration',\n  templateUrl: './machine-registration.component.html',\n  styleUrls: ['./machine-registration.component.scss']\n})\nexport class MachineRegistrationComponent implements OnInit {\n  tenant:any;\n  myLoader = false;\n  machine_response: any;\n  constructor(private fb:FormBuilder,public dialog: MatDialog,private nav:NavbarService,private service:MachineService) {\n    this.nav.show()\n    this.tenant=localStorage.getItem('tenant_id')\n\n   }\n   add_registartion(): void {\n    const dialogRef = this.dialog.open(Add, {\n      width: '30%',\n      height:'auto',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.ngOnInit();\n    });\n  }\n  edit_view(data1): void {\n    const dialogRef = this.dialog.open(Edit, {\n      width: '30%',\n      height:'auto',\n      data:data1\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.ngOnInit();\n\n    });\n  }\n  setting_view(data): void {\n    const dialogRef = this.dialog.open(Settings, {\n      width: '30%',\n      height:'auto%',\n      data:data\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n \n      this.ngOnInit();\n\n    });\n  }\n\n  ngOnInit() {\n    this.myLoader = true;\n    this.service.card(this.tenant).pipe(untilDestroyed(this)).subscribe(res => {\n      this.myLoader = false;\n\n      this.machine_response=res;\n    })\n  }\n  \n  delete_view(id) {\n    Swal.fire({\n      title: 'Are you sure want to delete?',\n      // type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n        Swal.fire({\n          title: 'Please Confirm'\n        }).then((destroy) => {\n          if (destroy.value) {\n            this.service.delete_row(id).pipe(untilDestroyed(this)).subscribe(res => {\n               if(res === true)\n              {\n                Swal.fire(\"Deleted Succesfully !\")\n              }\n              else{\n                Swal.fire(\"Delete Failed\")\n              }\n              \n              this.ngOnInit()\n            })\n          }\n        })\n      }\n    })\n  }\n\n  ngOnDestroy(){\n\n  }\n}\n@Component({\n  selector: 'add-page',\n  templateUrl: 'add.html',\n  styleUrls: ['./machine-registration.component.scss']\n\n})\nexport class Add {\n  login: any;\n  add_val: any;\n  tenant: any;\n  controller_type:any;\n  \n  \n  constructor(public dialogRef: MatDialogRef<Add>,@Inject(MAT_DIALOG_DATA) public data: any,private fb:FormBuilder,private service:MachineService) {\n   this.tenant = localStorage.getItem('tenant_id') \n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  cancel() {\n    this.dialogRef.close();\n  }\n  ngOnInit()\n  {\n    this.login=this.fb.group({\n      machine_type:[\"\",Validators.required],\n      machine_name:[\"\",Validators.required],\n      machine_model:[\"\",Validators.required],\n      machine_serial_no:[\"\",Validators.required],\n      machine_ip:[\"\",Validators.required],\n      unit:[\"\",Validators.required],\n      device_id:[\"\",Validators.required],\n      controller_type:[\"\",Validators.required],\n      border_rate:[\"\",],\n      t1_ip:[\"\",]\n     \n    })\n   \n  }\n  form()\n  {\n     this.add_val = this.login.value;\n\n     this.add_val[\"tenant_id\"] = this.tenant\n     this.add_val[\"controller_type\"]=this.controller_type;\n\n    this.service.machine(this.login.value).pipe(untilDestroyed(this)).subscribe(res => {\n      alert('created successfully')\n      this.dialogRef.close();\n\n  })\n}\nmachineSelect(machine){\n     this.controller_type=machine\n}\n\nngOnDestroy(){\n\n}\n}\n@Component({\n  selector: 'edit-page',\n  templateUrl: 'edit.html',\n  styleUrls: ['./machine-registration.component.scss']\n\n})\nexport class Edit {\n  login: FormGroup;\n  edit_data:any;\n  tenant: any;\n  add_val: any;\n  edit_data1:any;\n  constructor(public dialogRef: MatDialogRef<Edit>,@Inject(MAT_DIALOG_DATA) public data1: any,private fb:FormBuilder,private service:MachineService) {\n     this.edit_data1 = data1;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  ngOnInit()\n  {  this.tenant = localStorage.getItem('tenant_id')\n\n    this.login=this.fb.group({\n      machine_type:[this.edit_data1.machine_type],\n      machine_name:[this.edit_data1.machine_name],\n      machine_model:[this.edit_data1.machine_model],\n      machine_serial_no:[this.edit_data1.machine_serial_no],\n      machine_ip:[this.edit_data1.machine_ip],\n      device_id:[this.edit_data1.device_id],\n      unit:[this.edit_data1.unit],\n      controller_type:[this.edit_data1.controller_type],\n      border_rate:[this.edit_data1.controller_type],\n      t1_ip:[this.edit_data1.controller_type]\n\n    })\n  }\n  loginforum()\n  {\n    this.add_val = this.login.value \n    this.add_val[\"tenant_id\"] = this.tenant;\n    this.service.edit(this.edit_data1.id,this.add_val).pipe(untilDestroyed(this)).subscribe(res => {\n      Swal.fire(\"Updated Successfully!\")\n      if(res === true){\n        Swal.fire(\"Updated Suceesfully\")\n      }\n      this.dialogRef.close();\n    })\n  }\n  cancel() {\n    this.dialogRef.close();\n  }\n \n  ngOnDestroy(){\n\n  }\n\n}\n@Component({\n  selector: 'settings-page',\n  templateUrl: 'settings.html',\n  styleUrls: ['./machine-registration.component.scss']\n\n\n})\nexport class Settings {\n  tenant: any;\n  settings_data:any;\n  status:any;\n  toggle_status:any;\n  toggle_id:any;\n  constructor(public dialogRef: MatDialogRef<Add>,@Inject(MAT_DIALOG_DATA) public data: any,private fb:FormBuilder,private service:MachineService) {\n    this.tenant=localStorage.getItem('tenant_id');\n    this.settings_data=data;\n  \n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  ngOnInit()\n  {\n     this.service.settinglist(this.settings_data.id,this.tenant).pipe(untilDestroyed(this)).subscribe(res =>{\n      this.status=res\n     })\n\n     \n  }\n  notify(e,s){\n    this.toggle_id=s.id\n    this.toggle_status=e.checked;\n    this.service.statuschange(this.toggle_id,this.toggle_status).pipe(untilDestroyed(this)).subscribe(res =>{\n      if(res === true)\n      {\n        Swal.fire(\"Updated Succesfully !\")\n      }\n      else{\n        Swal.fire(\"Updated Sucessfully !\")\n      }\n      this.dialogRef.close();\n      this.ngOnInit();\n\n     \n    })\n  }\n \n\n\n  ngOnDestroy(){\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MachineRegistrationComponent,Add,Edit,Settings } from './machine-registration.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SharedModule} from '../shared/shared.module';\nimport { MachineService} from '../../Service/app/machine.service';\nconst routes: Routes = [{ path: '', component: MachineRegistrationComponent }];\n\n@NgModule({\n  declarations: [MachineRegistrationComponent,Add,Edit,Settings],\n  imports: [RouterModule.forChild(routes),\n    CommonModule,SharedModule\n    \n  ],\n  entryComponents:[Add,Edit,Settings],\n  providers:[MachineService]\n})\nexport class MachineRegistrationModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment} from '../../../environments/environment';\nimport { TokenService } from '../core/authentication/token.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MachineService {\n\n  constructor(private http:HttpClient,private token:TokenService) { }\n   \n  tenantId = this.token.getTenantID();\n\n  card(tenantId):Observable<any> {\n    return this.http.get('machines?tenant_id='+tenantId)\n  }\n  machine(value):Observable<any>{\n    return this.http.post('machines',value)\n  }\n  settinglist(machine,tenant):Observable<any>{\n    return this.http.get('machine_setting_list?machine_id='+machine + '&&tenant_id='+tenant)\n  }\n  edit(id,val):Observable<any>{\n    return this.http.put('machines/'+id,val)\n  }\n  statuschange(id,active):Observable<any>{\n    return this.http.get('machine_setting_update?machine_setting_list_id='+ id + '&&is_active=' + active)\n  }\n  delete_row(id):Observable<any>{\n    return this.http.delete('machines/' + id)\n  }\n}\n"],"sourceRoot":"webpack:///"}