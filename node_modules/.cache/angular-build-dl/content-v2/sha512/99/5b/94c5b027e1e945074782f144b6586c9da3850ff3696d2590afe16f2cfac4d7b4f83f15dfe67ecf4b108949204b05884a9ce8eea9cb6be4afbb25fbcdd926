{"version":3,"sources":["./src/app/Components/master/delete.html","./src/app/Components/master/dialog.html","./src/app/Components/master/master.component.html","./src/app/Components/master/master.component.scss","./src/app/Components/master/master.component.ts","./src/app/Components/master/master.module.ts","./src/app/Service/app/programlist.service.ts"],"names":[],"mappings":"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","file":"Components-master-master-module-es2015.js","sourcesContent":["export default \"<mat-toolbar>Are You Sure You want to delete this file?</mat-toolbar>\\r\\n\\r\\n<form [formGroup]=\\\"login\\\" (ngSubmit)=\\\"logintest()\\\">\\r\\n    <mat-form-field>\\r\\n        <mat-label>UserName</mat-label>\\r\\n        <input matInput formControlName=\\\"user_name\\\" type=\\\"text\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field>\\r\\n        <mat-label>Reason</mat-label>\\r\\n        <input matInput formControlName=\\\"reason\\\" type=\\\"text\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <div class=\\\"control-section\\\">\\r\\n        \\r\\n        <div class=\\\"filter_field date_picker\\\">\\r\\n            <mat-form-field>\\r\\n              <mat-label>Choose a date</mat-label>\\r\\n              <input matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"date\\\" [max]='maxDate' [min]='minDate'\\r\\n                (click)=\\\"picker.open()\\\" placeholder=\\\"Choose Date\\\">\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #picker startView=\\\"year\\\" [startAt]=\\\"startDate\\\"></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n    </div>\\r\\n\\r\\n    <button mat-raise-button [disabled]=\\\"login.invalid\\\">Save</button>\\r\\n    <button mat-raise-button (click)=\\\"onNoClick()\\\">Close</button>\\r\\n\\r\\n</form>\"","export default \"<div class=\\\"modal_sec\\\">\\r\\n    <mat-toolbar>\\r\\n        <h3>File Save</h3>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onNoClick()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">×</span>\\r\\n        </button>\\r\\n    </mat-toolbar>\\r\\n    <div class=\\\"dialog-form\\\">\\r\\n        <div class=\\\"filter_sec\\\">\\r\\n            <form [formGroup]=\\\"test\\\" class=\\\"form_sec\\\">\\r\\n                <!-- (ngSubmit)=\\\"testform(test.value)\\\"  -->\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-select placeholder=\\\"Select Machine\\\" matNativeControl required formControlName=\\\"machine_id\\\">\\r\\n                        <mat-option *ngFor=\\\"let machine of machine_response\\\" [value]=\\\"machine.id\\\">\\r\\n                            {{machine.machine_name}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n                <p>Revision Number</p>\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <!-- <mat-label>Revision Number</mat-label> -->\\r\\n                    <input matInput formControlName=\\\"revision_no\\\" placeholder=\\\"1\\\" type=\\\"text\\\" readonly>\\r\\n                </mat-form-field>\\r\\n                <div class=\\\"form-group custom_file_upload\\\">\\r\\n                    <label for=\\\"file\\\">Choose File</label><br /> <input type=\\\"file\\\" id=\\\"file\\\"\\r\\n                        (change)=\\\"fileUpload1($event)\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-button text-right\\\">\\r\\n                    <button mat-raised-button [disabled]=\\\"test.invalid\\\" (click)=\\\"logintest()\\\"\\r\\n                        class=\\\"filter_btn btn_orange\\\"> Save</button>\\r\\n                    <button mat-raised-button (click)=\\\"onNoClick()\\\" class=\\\"filter_btn btn_default ml-16\\\">Close</button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<section class=\\\"page\\\">\\n  <div *ngIf=\\\"myLoader\\\" class=\\\"spinner\\\">\\n    <img src=\\\"assets/images/spinner.gif\\\">\\n  </div>\\n  <div class=\\\"section_top_padding\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"page_title_sec\\\">\\n        <h2 class=\\\"sub_title\\\">\\n          <mat-icon class=\\\"v-align-middle display\\\">list_alt\\n          </mat-icon>\\n          <span class=\\\"v-align-middle\\\">Program List</span>\\n        </h2>\\n        <!-- <h2>Priya</h2> -->\\n        <div class=\\\"filter_sec\\\">\\n          <div class=\\\"filter_field\\\">\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-select placeholder=\\\"Select Machine\\\" [(ngModel)]=\\\"machine_id\\\"\\n                (selectionChange)=\\\"getmachine($event.value)\\\" matNativeControl required>\\n                <mat-option *ngFor=\\\"let machine of machine_response\\\" [value]=\\\"machine.id\\\">\\n                  {{machine.machine_name}}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n\\n          </div>\\n          <div class=\\\"form-button\\\">\\n            <button class=\\\"subit\\\" (click)=\\\"openDialog(machine_id)\\\" class=\\\"upload_btn\\\">File Save</button>\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n\\n      <div class=\\\"master_sec\\\">\\n        <div class=\\\"col\\\">\\n          <h1>Master</h1>\\n          <mat-card class=\\\"card_sec\\\">\\n            <mat-card-content class=\\\"table-responsive\\\">\\n              <table>\\n                <thead>\\n                  <tr>\\n                    <th>Name</th>\\n                    <th>Actions</th>\\n                  </tr>\\n                </thead>\\n                <tr *ngFor=\\\"let master of masterate\\\">\\n                  <td>{{master}}</td>\\n                  <td class=\\\"action\\\">\\n                    <div><a class=\\\"Download\\\" matTooltip=\\\"Download\\\" (click)=\\\"new_download(master,'Master')\\\"><i\\n                          class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i></a></div>\\n\\n                    <div><a class=\\\"Download\\\" matTooltip=\\\"Download\\\" (click)=\\\"upload(master)\\\"><i class=\\\"fa fa-send\\\"\\n                          aria-hidden=\\\"true\\\"></i></a>\\n                    </div>\\n\\n                    <div><a class=\\\"Download\\\" matTooltip=\\\"Download\\\" (click)=\\\"new_check(master)\\\"><i\\n                          class=\\\"fa fa-cloud-upload\\\" aria-hidden=\\\"true\\\"></i></a></div>\\n                  </td>\\n                </tr>\\n              </table>\\n            </mat-card-content>\\n          </mat-card>\\n\\n          \\n\\n        </div>\\n        <div *ngIf=\\\"masterate.length==0\\\" class=\\\"no_data_found\\\">\\n          <h2>No data found</h2>\\n        </div>\\n        <div class=\\\"col\\\">\\n          <h1>Slave</h1>\\n          <mat-card class=\\\"card_sec\\\">\\n            <mat-card-content class=\\\"table-responsive\\\">\\n              <table>\\n                <thead>\\n                  <tr>\\n                    <th>Name</th>\\n                    <th>Actions</th>\\n                  </tr>\\n                </thead>\\n                <tr *ngFor=\\\"let slave of slavate\\\">\\n                  <td>{{slave}}</td>\\n                  <td class=\\\"action\\\">\\n                    <div><a class=\\\"Download\\\" matTooltip=\\\"Download\\\" (click)=\\\"new_sdownload(slave,'Slave')\\\"><i\\n                          class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i></a></div>\\n\\n\\n                    <div><a class=\\\"Download\\\" matTooltip=\\\"Download\\\" (click)=\\\"openDialog2(slave)\\\"><i class=\\\"fa fa-trash-o\\\"\\n                          aria-hidden=\\\"true\\\"></i></a></div>\\n                  </td>\\n                </tr>\\n              </table>\\n            </mat-card-content>\\n          </mat-card>\\n          <div *ngIf=\\\"slavate.length==0\\\" class=\\\"no_data_found\\\">\\n            <h2>No data found</h2>\\n          </div>\\n       \\n        </div>\\n        \\n      </div>\\n    </div>\\n  </div>\\n</section>\"","export default \".spinner {\\n  background: #262932;\\n  height: 100vh;\\n  opacity: 0.9;\\n  position: fixed;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  width: auto;\\n  z-index: 999; }\\n\\n.spinner img {\\n  width: 90px;\\n  margin-top: -130px; }\\n\\n.master_sec {\\n  display: -webkit-box;\\n  display: flex; }\\n\\n.master_sec .col {\\n    width: calc(100% /1);\\n    padding: 0; }\\n\\n.master_sec .col:first-child {\\n      margin-right: 20px; }\\n\\n.master_sec .col h1 {\\n      font-size: 18px;\\n      font-weight: 400;\\n      margin-top: 0; }\\n\\n.master_sec .master_card {\\n    padding: 15px; }\\n\\n.master_sec .master_card .shift .edit {\\n      position: absolute;\\n      right: 10px;\\n      bottom: 10px;\\n      cursor: pointer; }\\n\\n.master_sec .master_card .shift .play_circle i {\\n      font-size: 100px; }\\n\\n.master_sec .master_card .shift h2 {\\n      font-size: 1.5rem;\\n      margin-bottom: 0; }\\n\\n.master_sec .master_card .shift h3 {\\n      font-size: 90px;\\n      font-weight: 100;\\n      margin: 0; }\\n\\n.master_sec .master_card .shift .status_icon {\\n      display: -webkit-box;\\n      display: flex;\\n      justify-content: space-around; }\\n\\n.master_sec .master_card .shift .status_icon .status {\\n        width: calc(100% /1); }\\n\\n.master_sec .master_card .shift .status_icon .status:first-child {\\n          border-right: 1px solid #ccc; }\\n\\n.master_sec .master_card .shift .status_icon .status span {\\n          color: #292929;\\n          font-size: 24px; }\\n\\n.master_sec .master_card .shift .status_icon .status p {\\n          margin-top: 0px;\\n          color: #292929; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FsdGl1cy9Qcml5YS95YW50cmFfdmF1bHRfZnJvbnRlbmQvc3JjL2FwcC9Db21wb25lbnRzL21hc3Rlci9tYXN0ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQkFBbUI7RUFDbkIsYUFBYTtFQUNiLFlBQVk7RUFDWixlQUFlO0VBQ2Ysb0JBQWE7RUFBYixhQUFhO0VBQ2IseUJBQW1CO1VBQW5CLG1CQUFtQjtFQUNuQix3QkFBdUI7VUFBdkIsdUJBQXVCO0VBQ3ZCLE1BQU07RUFDTixPQUFPO0VBQ1AsUUFBUTtFQUNSLFdBQVc7RUFDWCxZQUFZLEVBQUE7O0FBR2Q7RUFDRSxXQUFXO0VBQ1gsa0JBQWtCLEVBQUE7O0FBSXRCO0VBQ0ksb0JBQWE7RUFBYixhQUFhLEVBQUE7O0FBRGpCO0lBR1Esb0JBQW9CO0lBQ3BCLFVBQVUsRUFBQTs7QUFKbEI7TUFNWSxrQkFBa0IsRUFBQTs7QUFOOUI7TUFTWSxlQUFlO01BQ2YsZ0JBQWdCO01BQ2hCLGFBQWEsRUFBQTs7QUFYekI7SUFnQlEsYUFBYSxFQUFBOztBQWhCckI7TUFtQlksa0JBQWtCO01BQ2xCLFdBQVc7TUFDWCxZQUFZO01BQ1osZUFBZSxFQUFBOztBQXRCM0I7TUEwQmdCLGdCQUFnQixFQUFBOztBQTFCaEM7TUE4QlksaUJBQWlCO01BQ2pCLGdCQUFnQixFQUFBOztBQS9CNUI7TUFrQ1ksZUFBZTtNQUNmLGdCQUFnQjtNQUNoQixTQUFTLEVBQUE7O0FBcENyQjtNQXVDWSxvQkFBYTtNQUFiLGFBQWE7TUFDYiw2QkFBNkIsRUFBQTs7QUF4Q3pDO1FBMENnQixvQkFBb0IsRUFBQTs7QUExQ3BDO1VBNENvQiw0QkFBNEIsRUFBQTs7QUE1Q2hEO1VBK0NvQixjQUFjO1VBQ2QsZUFBZSxFQUFBOztBQWhEbkM7VUFtRG9CLGVBQWU7VUFDZixjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9Db21wb25lbnRzL21hc3Rlci9tYXN0ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3Bpbm5lciB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMjYyOTMyO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIG9wYWNpdHk6IDAuOTtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIHotaW5kZXg6IDk5OTtcclxuICB9XHJcbiAgXHJcbiAgLnNwaW5uZXIgaW1nIHtcclxuICAgIHdpZHRoOiA5MHB4O1xyXG4gICAgbWFyZ2luLXRvcDogLTEzMHB4O1xyXG4gIH1cclxuXHJcblxyXG4ubWFzdGVyX3NlYyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgLmNvbHtcclxuICAgICAgICB3aWR0aDogY2FsYygxMDAlIC8xKTtcclxuICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgICAgICY6Zmlyc3QtY2hpbGR7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMjBweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaDF7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLm1hc3Rlcl9jYXJke1xyXG4gICAgICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICAuc2hpZnR7XHJcbiAgICAgICAgLmVkaXR7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgcmlnaHQ6IDEwcHg7XHJcbiAgICAgICAgICAgIGJvdHRvbTogMTBweDtcclxuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIH1cclxuICAgICAgICAucGxheV9jaXJjbGV7XHJcbiAgICAgICAgICAgIGl7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEwMHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGgye1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaDN7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogOTBweDtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDEwMDtcclxuICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICAuc3RhdHVzX2ljb257XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgICAgICAgICAuc3RhdHVze1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAvMSk7XHJcbiAgICAgICAgICAgICAgICAmOmZpcnN0LWNoaWxke1xyXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNjY2M7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBzcGFue1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjMjkyOTI5O1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjMjkyOTI5O1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICBcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG59XHJcblxyXG5cclxufVxyXG5cclxuIl19 */\"","import { Component, OnInit,Inject,ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup, Validators,FormBuilder } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { NavbarService} from '../../Nav/navbar.service';\nimport Swal from 'sweetalert2'\nimport {ProgramListService} from '../../Service/app/programlist.service';\nimport { MatTableDataSource } from '@angular/material';\nimport { untilDestroyed } from 'ngx-take-until-destroy';\nimport { saveAs } from 'file-saver';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-master',\n  templateUrl: './master.component.html',\n  styleUrls: ['./master.component.scss'],\n  // encapsulation: ViewEncapsulation.None\n\n})\nexport class MasterComponent implements OnInit {\n  date: any;\n  myLoader = false;\n  startDate = new Date(2020, 0, 1);\n\n  masterate:any;\n  public today: Date = new Date(new Date().toDateString());\n  public weekStart: Date = new Date(new Date(new Date().setDate(new Date().getDate() - (new Date().getDay() + 7) % 7)).toDateString());\n  public weekEnd: Date = new Date(new Date(new Date().setDate(new Date(new Date().setDate((new Date().getDate()\n      - (new Date().getDay() + 7) % 7))).getDate() + 6)).toDateString())\n      ;\n  public monthStart: Date = new Date(new Date(new Date().setDate(1)).toDateString());\n  public monthEnd: Date = this.today;\n  public lastStart: Date = new Date(new Date(new Date(new Date().setMonth(new Date().getMonth() - 1)).setDate(1)).toDateString());\n  public lastEnd: Date = this.today;\n  public yearStart: Date = new Date(new Date(new Date().setDate(new Date().getDate() - 365)).toDateString());\n  public yearEnd: Date = this.today;\n  public currentYear: number = this.today.getFullYear();\n  public currentMonth: number = this.today.getMonth();\n  public maxDate: Object = new Date();\n  public minDate: Object = new Date(new Date().setMonth(new Date().getMonth() - 1));\n  data:string;   \n  machine_response: any;\n  tenant: any;\n  reason: any;\n  length:any;\n  machine_id:any;\n  slavate:any;\n  user:any;\n  add_value:any;\n  // id:any;\n  constructor(private http: HttpClient,private fb:FormBuilder,public dialog: MatDialog,private nav:NavbarService,private service:ProgramListService) {\n    this.nav.show();\n    this.tenant = localStorage.getItem('tenant_id')\n    // this.id = localStorage.getItem('machine_id')\n    this.user = localStorage.getItem('user_id')\n\n\n   }\n   displayedColumns: string[] = ['position', 'name', 'weight', 'symbol','action'];\n   dataSource=new MatTableDataSource\n   slave=new MatTableDataSource\n\n   slavelist: string[] = ['position', 'name', 'weight', 'symbol','action'];\n  \n  openDialog(machine): void {\n    const dialogRef = this.dialog.open(Dialog, {\n      width: '250px',\n      data: { edit_shift: machine}\n\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.ngOnInit();\n    });\n  }\n\n  openDialog2(id): void {\n    const dialogRef = this.dialog.open(Delete, {\n      width: '250px',\n      data: { machine_id: id}\n\n      \n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.ngOnInit();\n    });\n  }\n\n\n  \n  ngOnInit() {\n    this.service.machine( this.tenant).pipe(untilDestroyed(this)).subscribe(res => {\n      this.machine_response=res;\n      // this.service.filelist( this.machine_response.id).subscribe(res =>{\n        this.machine_id = this.machine_response[0].id;\n        let data = this.machine_id;\n\n        localStorage.setItem('machine_id',data);\n        this.getmachine(this.machine_response[0].id)\n      });\n   \n  }\n\n  upload(demo){\n\n    this.service.cnc_upload(demo,this.machine_id).pipe(untilDestroyed(this)).subscribe(res =>{\n      Swal.fire(res.status)\n      location.reload()\n    })\n  }\n\n\n  new_download(idest,val){\n\n  let scotch ={\n      \"id\": this.machine_id,\n      \"file_name\": idest,\n      \"user_id\": this.user,\n      \"position\": val\n    }\n\n    this.service.download(scotch).pipe(untilDestroyed(this)).subscribe(res =>{\n\n var file = new Blob([res], {\n     type: 'text/json;charset=utf-8'\n   });\n\n   var data = \"text/json;charset=utf-8,\" + encodeURIComponent(data);\n  saveAs(file, scotch.file_name );\n      \n    \n    })\n  }\n\n  \n\n  \n\n    \n\n  \n  new_sdownload(latest,position){\n\n    let scotch ={\n        \"id\": this.machine_id,\n        \"file_name\":latest,\n        \"user_id\": this.user,\n        \"position\": position\n      }\n  \n      this.service.downloaded(scotch).pipe(untilDestroyed(this)).subscribe(res =>{\n        var file = new Blob([res], {\n          type: 'text/json;charset=utf-8'\n        });\n     \n        var data = \"text/json;charset=utf-8,\" + encodeURIComponent(data);\n       saveAs(file, scotch.file_name );\n           \n         \n         })\n       }\n       \n     \n\n  \n  reload() {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  new_check(val){\n\n    this.service.cnc_receive(val,this.machine_id).pipe(untilDestroyed(this)).subscribe(res =>{\n      Swal.fire(res.status)\n      location.reload()\n    })\n  }\n\n\n  getmachine(id) {\n    this.myLoader = true;\n     this.service.display_reason(id).pipe(untilDestroyed(this)).subscribe(res =>{\n      this.myLoader = false;\n\n      this.reason=res;\n      this.masterate = res.master_location\n      this.slavate =res.slave_location\n      this.dataSource=new MatTableDataSource(this.reason)\n      this.slave=new MatTableDataSource(this.reason)\n      if (res['status'] != null) {\n        Swal.fire(res['status'])\n      }\n    })  \n  }\n \n\n    \n\n  ngOnDestroy(){\n\n  }\n\n\n}\n\n@Component({\n  selector: 'dialog-page',\n  templateUrl: 'dialog.html',\n})\nexport class Dialog {\n  test:FormGroup;\n  fileName1:any;\n  machine_response: any;\n  tenant: string;\n  file2:any;\n  machine_id:any;\n  daterangepicker:any;\n  value:any;\n  status:any;\n  add_val:any;\n  constructor(private http: HttpClient,public dialogRef: MatDialogRef<Dialog>,@Inject(MAT_DIALOG_DATA) public data: any,private fb:FormBuilder,private service:ProgramListService) {\n  this.tenant = localStorage.getItem('tenant_id')  \n  this.machine_id = localStorage.getItem('machine_id')\n  // this.id = localStorage.getItem('machine_id')\n\n  this.value = data;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  fileUpload1(event){ \n    this.file2 = event.target.files[0];\n   \n    \n}\n  ngOnInit()\n  {\n    this.test=this.fb.group ({\n      machine_id:[this.value.edit_shift],\n      revision_no:[\"\",],\n\n    })\n\n    this.service.machine( this.tenant).pipe(untilDestroyed(this)).subscribe(res => {\n      this.machine_response=res;\n      \n    });\n\n  }\n  \n  logintest(){\n    this.add_val = this.test.value ;\n    this.add_val = this.value.edit_shift;\n \n\n    let headers = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + localStorage.getItem(\"token\")\n      })\n    }  \n    \n    var fd = new FormData();\n    fd.append('machine_id', this.test.value.machine_id);\n    fd.append('revision_no','1');\n    fd.append('file',this.file2);\n\n    this.http.post(\"http://yantra.local:40010/api/v1/file_upload\",fd, { headers: { Authorization: \"Bearer \" + localStorage.getItem(\"token\") } }).subscribe(res =>{\n      \n      if (res['status'] != null) {\n        Swal.fire(res['status'])\n      }\n      this.dialogRef.close();\n\n\n\n    })\n\n\n   \n\n\n    \n  }\n \n   ngOnDestroy(){\n\n  }\n\n}\n@Component({\n  selector: 'delete-page',\n  templateUrl: 'delete.html',\n})\nexport class Delete {\n  date: any;\n  machine_id:any;\n  login:FormGroup;\n  add_val: any;  \n  startDate = new Date(2020, 0, 1);\n  maxDate:any;\n  minDate:any;\n  value:any;\n  // id:any;\n  constructor(private service:ProgramListService,public dialogRef: MatDialogRef<Delete>,@Inject(MAT_DIALOG_DATA) public data: any,private fb:FormBuilder) {\n    this.machine_id = localStorage.getItem('machine_id')\n    // this.id = localStorage.getItem('machine_id')\n\n    this.value = data;\n   \n    }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  ngOnInit()\n\n\n  {\n\n    \n    this.login = this.fb.group({\n      user_name:[\"\",],\n      reason:[\"\",],\n      date:[\"\",]\n    })\n  }\n  logintest()\n  {\n    \n\n    this.add_val = this.login.value;\n    this.add_val[\"id\"] = this.machine_id;\n      this.service.delete(this.login.value).pipe(untilDestroyed(this)).subscribe(res =>{\n        if (res['status'] != null) {\n          Swal.fire(res['status'])\n        }\n        this.dialogRef.close();\n\n      })\n  }\n  \n  keyPress(event: any) {\n    const pattern = /[0-9\\+\\-\\ ]/;\n    let inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode != 8 && !pattern.test(inputChar)) {\n    event.preventDefault();\n    }\n   }\n   ngOnDestroy(){\n\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MasterComponent,Dialog,Delete } from './master.component';\nimport { SharedModule} from '../shared/shared.module';\nimport { ProgramListService} from '../../Service/app/programlist.service';\n\nconst routes: Routes = [{ path: '', component: MasterComponent }];\n\n\n@NgModule({\n  declarations: [MasterComponent,Dialog,Delete],\n  imports: [RouterModule.forChild(routes),\n    CommonModule,SharedModule\n  ],\n  entryComponents:[Dialog,Delete],\n  providers:[ProgramListService]\n\n})\nexport class MasterModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment} from '../../../environments/environment';\nimport { TokenService } from '../core/authentication/token.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class  ProgramListService {\n \n  constructor(private token:TokenService,private http:HttpClient) { }\n  tenantId = this.token.getTenantID();\n\n\n  machine(tenantId):Observable<any>{\n    return this.http.get('machines?tenant_id='+tenantId)\n  }\n  file_upload(value):Observable<any>{ \n    return this.http.post('file_upload',value,)\n  }\n \n  display_reason(id):Observable<any>{\n    return this.http.get('file_list?id='+id)\n  } \n  cnc_upload(demo,test):Observable<any>{\n    return this.http.get('file_send_to_cnc?file_name='+demo + '&&machine_id=' + test)\n  }\n  cnc_receive(val,ue):Observable<any>{\n    return this.http.get('file_receive_from_cnc?file_name='+val + '&&machine_id=' + ue)\n  }\n  delete(val):Observable<any>{ \n    \n     return this.http.post('file_delete',val)\n  }\n  download(value):Observable<Blob>{\n    return this.http.post('file_download',value,{responseType: 'blob'})\n  }\n\n  downloaded(slave):Observable<Blob>{\n    return this.http.post('file_download',slave,{responseType: 'blob'})\n  }\n}\n\n// post_file(relativeUrlPath: string, body: any, params?: object): Observable<Blob> {\n//   return this.http.post(relativeUrlPath, body, {responseType: 'blob'});\n//   }\n"],"sourceRoot":"webpack:///"}