{"version":3,"sources":["src/app/Components/reason/reason.component.html","src/app/Components/reason/reason.component.scss","src/app/Components/reason/reason.component.ts","src/app/Components/reason/reason.module.ts","src/app/Service/app/reason.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"    <section class=\\\"page\\\">\\n  <div class=\\\"section_top_padding\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"page_title_sec\\\">\\n        <h2 class=\\\"sub_title\\\">\\n          <mat-icon class=\\\"v-align-middle display\\\">laptop</mat-icon>\\n          <span class=\\\"v-align-middle\\\">Reason</span>\\n        </h2>\\n        <div class=\\\"page_title_sec align_right\\\">\\n          <div class=\\\"filter_sec\\\">\\n                      \\n               <div class=\\\"filter_field\\\">\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-select placeholder=\\\"Select Machine\\\"  required \\n                [(ngModel)]=\\\"machine_id\\\">\\n                  <mat-option *ngFor=\\\"let file of reason_response\\\" [value]=\\\"file.id\\\" (click)=\\\"code_compare(file.id)\\\">{{file.machine_name}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n            <div class=\\\"table_search\\\">\\n              <input class=\\\"form-control\\\" (keyup)=\\\"dolly($event.target.value)\\\" type=\\\"text\\\" name=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search\\\">\\n                     </div>\\n        </div>\\n      </div>\\n\\n\\n      <mat-card class=\\\"card_sec\\\">\\n        <mat-card-content class=\\\"table-responsive\\\">\\n          <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z0\\\">\\n\\n            <!-- Position Column -->\\n            <ng-container matColumnDef=\\\"position\\\">\\n              <th mat-header-cell *matHeaderCellDef> #</th>\\n              <td mat-cell *matCellDef = \\\"let i=index;\\\"> {{i+1}} </td>\\n            </ng-container>\\n\\n            <!-- Name Column -->\\n            <ng-container matColumnDef=\\\"user_name\\\">\\n              <th mat-header-cell *matHeaderCellDef> User Name </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.user_name || '---'}} </td>\\n            </ng-container>\\n\\n            <!-- Weight Column -->\\n            <ng-container matColumnDef=\\\"machine_name\\\">\\n              <th mat-header-cell *matHeaderCellDef> Machine Name </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.machine_name || '---'}} </td>\\n            </ng-container>\\n\\n            <!-- Symbol Column -->\\n            <ng-container matColumnDef=\\\"description\\\">\\n              <th mat-header-cell *matHeaderCellDef> Description </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description || '---'}} </td>\\n            </ng-container>\\n\\n            <!-- Symbol Column -->\\n            <ng-container matColumnDef=\\\"old_revision_no\\\">\\n              <th mat-header-cell *matHeaderCellDef> Old Revision Number </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.old_revision_no || '---'}} </td>\\n            </ng-container>\\n\\n            <!-- Symbol Column -->\\n            <ng-container matColumnDef=\\\"new_revision_no\\\">\\n              <th mat-header-cell *matHeaderCellDef> New Revision Number </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.new_revision_no || '---'}} </td>\\n            </ng-container>\\n\\n\\n            <!-- Symbol Column -->\\n            <ng-container matColumnDef=\\\"file_name\\\">\\n              <th mat-header-cell *matHeaderCellDef>File Name</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.file_name || '---' }} </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n          </table>\\n        </mat-card-content>\\n        <mat-card-content *ngIf=\\\"reason.length==0\\\" class=\\\"no_data_found\\\">\\n          <h2>No data found</h2>\\n        </mat-card-content>\\n      </mat-card>\\n    </div>\\n  </div>\\n</section>\"","export default \"table {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FsdGl1cy9Qcml5YS95YW50cmFfdmF1bHRfZnJvbnRlbmQvc3JjL2FwcC9Db21wb25lbnRzL3JlYXNvbi9yZWFzb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFXLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9Db21wb25lbnRzL3JlYXNvbi9yZWFzb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { untilDestroyed } from 'ngx-take-until-destroy';\n//navservice\nimport { NavbarService} from '../../Nav/navbar.service';\nimport { ReasonService} from '../../Service/app/reason.service';\nimport { MatTableDataSource } from '@angular/material';\n@Component({\n  selector: 'app-reason',\n  templateUrl: './reason.component.html',\n  styleUrls: ['./reason.component.scss']\n})\nexport class ReasonComponent implements OnInit {\n\n  displayedColumns: string[] = ['position', 'user_name', 'machine_name', 'description','old_revision_no','new_revision_no','file_name'];\n  dataSource = new MatTableDataSource();\n  public dolly = (value: string) => {\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\n  }\n  searchText:any;\n  tenant: any;\n  reason_response: any;\n  reason: any;\n  machine_id:any;\n  constructor(private nav:NavbarService,private service:ReasonService) {\n    this.nav.show();\n    this.tenant=localStorage.getItem('tenant_id')\n\n   }\n\n  ngOnInit() {\n    this.service.tenant_id(this.tenant).pipe(untilDestroyed(this)).subscribe(res => {\n      this.reason_response=res;\n      this.machine_id = this.reason_response[0].id;\n      this.service.display_reason(this.machine_id).pipe(untilDestroyed(this)).subscribe(res =>{\n        this.reason=res;\n        this.dataSource=new MatTableDataSource(this.reason)\n      })  \n    });\n  }\n\n  code_compare(id) {\n    this.service.display_reason(id).pipe(untilDestroyed(this)).subscribe(res =>{\n      this.reason=res;\n      this.dataSource=new MatTableDataSource(this.reason)\n    })  \n  }\n \n\n  ngOnDestroy(){\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReasonComponent } from './reason.component';\nimport { SharedModule} from '../shared/shared.module';\nconst routes: Routes = [{ path: '', component: ReasonComponent }];\n\n\n@NgModule({\n  declarations: [ReasonComponent],\n  imports: [RouterModule.forChild(routes),\n    CommonModule,SharedModule\n  ]\n})\nexport class ReasonModule { }\n                  ","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment} from '../../../environments/environment';\nimport { TokenService } from '../core/authentication/token.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReasonService {\n\n  constructor(private token:TokenService,private http:HttpClient) { }\n\n  tenantId = this.token.getTenantID();\n   \n  tenant_id(tenantId):Observable<any> {\n    return this.http.get('machines?tenant_id='+tenantId)\n  }\n  display_reason(id):Observable<any>{\n    return this.http.get('code_compare_reasons?id='+id)\n  }\n}\n"],"sourceRoot":"webpack:///","file":"Components-reason-reason-module-es5.js"}