{"version":3,"sources":["src/app/Components/master/delete.html","src/app/Components/master/dialog.html","src/app/Components/master/master.component.html","src/app/Components/master/master.component.scss","src/app/Components/master/master.component.ts","src/app/Components/master/master.module.ts","src/app/Service/app/programlist.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<mat-toolbar>Are You Sure You want to delete this file?</mat-toolbar>\\r\\n\\r\\n<form [formGroup]=\\\"login\\\" (ngSubmit)=\\\"logintest()\\\">\\r\\n    <mat-form-field>\\r\\n        <mat-label>UserName</mat-label>\\r\\n        <input matInput formControlName=\\\"user_name\\\" type=\\\"text\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field>\\r\\n        <mat-label>Reason</mat-label>\\r\\n        <input matInput formControlName=\\\"reason\\\" type=\\\"text\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <div class=\\\"control-section\\\">\\r\\n        \\r\\n        <div class=\\\"filter_field date_picker\\\">\\r\\n            <mat-form-field>\\r\\n              <mat-label>Choose a date</mat-label>\\r\\n              <input matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"date\\\" [max]='maxDate' [min]='minDate'\\r\\n                (click)=\\\"picker.open()\\\" placeholder=\\\"Choose Date\\\">\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #picker startView=\\\"year\\\" [startAt]=\\\"startDate\\\"></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n    </div>\\r\\n\\r\\n    <button mat-raise-button [disabled]=\\\"login.invalid\\\">Save</button>\\r\\n    <button mat-raise-button (click)=\\\"onNoClick()\\\">Close</button>\\r\\n\\r\\n</form>\"","export default \"<div class=\\\"modal_sec\\\">\\r\\n    <mat-toolbar>\\r\\n        <h3>File Save</h3>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onNoClick()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">×</span>\\r\\n        </button>\\r\\n    </mat-toolbar>\\r\\n    <div class=\\\"dialog-form\\\">\\r\\n        <div class=\\\"filter_sec\\\">\\r\\n            <form [formGroup]=\\\"test\\\" class=\\\"form_sec\\\">\\r\\n                <!-- (ngSubmit)=\\\"testform(test.value)\\\"  -->\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-select placeholder=\\\"Select Machine\\\" matNativeControl required formControlName=\\\"machine_id\\\">\\r\\n                        <mat-option *ngFor=\\\"let machine of machine_response\\\" [value]=\\\"machine.id\\\">\\r\\n                            {{machine.machine_name}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n                <p>Revision Number</p>\\r\\n                <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <!-- <mat-label>Revision Number</mat-label> -->\\r\\n                    <input matInput formControlName=\\\"revision_no\\\" placeholder=\\\"1\\\" type=\\\"text\\\" readonly>\\r\\n                </mat-form-field>\\r\\n                <div class=\\\"form-group custom_file_upload\\\">\\r\\n                    <label for=\\\"file\\\">Choose File</label><br /> <input type=\\\"file\\\" id=\\\"file\\\"\\r\\n                        (change)=\\\"fileUpload1($event)\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-button text-right\\\">\\r\\n                    <button mat-raised-button [disabled]=\\\"test.invalid\\\" (click)=\\\"logintest()\\\"\\r\\n                        class=\\\"filter_btn btn_orange\\\"> Save</button>\\r\\n                    <button mat-raised-button (click)=\\\"onNoClick()\\\" class=\\\"filter_btn btn_default ml-16\\\">Close</button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<section class=\\\"page\\\">\\n  <div *ngIf=\\\"myLoader\\\" class=\\\"spinner\\\">\\n    <img src=\\\"assets/images/spinner.gif\\\">\\n  </div>\\n  <div class=\\\"section_top_padding\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"page_title_sec\\\">\\n        <h2 class=\\\"sub_title\\\">\\n          <mat-icon class=\\\"v-align-middle display\\\">list_alt\\n          </mat-icon>\\n          <span class=\\\"v-align-middle\\\">Program List</span>\\n        </h2>\\n        <!-- <h2>Priya</h2> -->\\n        <div class=\\\"filter_sec\\\">\\n          <div class=\\\"filter_field\\\">\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-select placeholder=\\\"Select Machine\\\" [(ngModel)]=\\\"machine_id\\\"\\n                (selectionChange)=\\\"getmachine($event.value)\\\" matNativeControl required>\\n                <mat-option *ngFor=\\\"let machine of machine_response\\\" [value]=\\\"machine.id\\\">\\n                  {{machine.machine_name}}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n\\n          </div>\\n          <div class=\\\"form-button\\\">\\n            <button class=\\\"subit\\\" (click)=\\\"openDialog(machine_id)\\\" class=\\\"upload_btn\\\">File Save</button>\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n\\n      <div class=\\\"master_sec\\\">\\n        <div class=\\\"col\\\">\\n          <h1>Master</h1>\\n          <mat-card class=\\\"card_sec\\\">\\n            <mat-card-content class=\\\"table-responsive\\\">\\n              <table>\\n                <thead>\\n                  <tr>\\n                    <th>Name</th>\\n                    <th>Actions</th>\\n                  </tr>\\n                </thead>\\n                <tr *ngFor=\\\"let master of masterate\\\">\\n                  <td>{{master}}</td>\\n                  <td class=\\\"action\\\">\\n                    <div><a class=\\\"Download\\\" matTooltip=\\\"Download\\\" (click)=\\\"new_download(master,'Master')\\\"><i\\n                          class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i></a></div>\\n\\n                    <div><a class=\\\"Download\\\" matTooltip=\\\"Download\\\" (click)=\\\"upload(master)\\\"><i class=\\\"fa fa-send\\\"\\n                          aria-hidden=\\\"true\\\"></i></a>\\n                    </div>\\n\\n                    <div><a class=\\\"Download\\\" matTooltip=\\\"Download\\\" (click)=\\\"new_check(master)\\\"><i\\n                          class=\\\"fa fa-cloud-upload\\\" aria-hidden=\\\"true\\\"></i></a></div>\\n                  </td>\\n                </tr>\\n              </table>\\n            </mat-card-content>\\n          </mat-card>\\n\\n          \\n\\n        </div>\\n        <div *ngIf=\\\"masterate.length==0\\\" class=\\\"no_data_found\\\">\\n          <h2>No data found</h2>\\n        </div>\\n        <div class=\\\"col\\\">\\n          <h1>Slave</h1>\\n          <mat-card class=\\\"card_sec\\\">\\n            <mat-card-content class=\\\"table-responsive\\\">\\n              <table>\\n                <thead>\\n                  <tr>\\n                    <th>Name</th>\\n                    <th>Actions</th>\\n                  </tr>\\n                </thead>\\n                <tr *ngFor=\\\"let slave of slavate\\\">\\n                  <td>{{slave}}</td>\\n                  <td class=\\\"action\\\">\\n                    <div><a class=\\\"Download\\\" matTooltip=\\\"Download\\\" (click)=\\\"new_sdownload(slave,'Slave')\\\"><i\\n                          class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i></a></div>\\n\\n\\n                    <div><a class=\\\"Download\\\" matTooltip=\\\"Download\\\" (click)=\\\"openDialog2(slave)\\\"><i class=\\\"fa fa-trash-o\\\"\\n                          aria-hidden=\\\"true\\\"></i></a></div>\\n                  </td>\\n                </tr>\\n              </table>\\n            </mat-card-content>\\n          </mat-card>\\n          <div *ngIf=\\\"slavate.length==0\\\" class=\\\"no_data_found\\\">\\n            <h2>No data found</h2>\\n          </div>\\n       \\n        </div>\\n        \\n      </div>\\n    </div>\\n  </div>\\n</section>\"","export default \".spinner {\\n  background: #262932;\\n  height: 100vh;\\n  opacity: 0.9;\\n  position: fixed;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  width: auto;\\n  z-index: 999; }\\n\\n.spinner img {\\n  width: 90px;\\n  margin-top: -130px; }\\n\\n.master_sec {\\n  display: -webkit-box;\\n  display: flex; }\\n\\n.master_sec .col {\\n    width: calc(100% /1);\\n    padding: 0; }\\n\\n.master_sec .col:first-child {\\n      margin-right: 20px; }\\n\\n.master_sec .col h1 {\\n      font-size: 18px;\\n      font-weight: 400;\\n      margin-top: 0; }\\n\\n.master_sec .master_card {\\n    padding: 15px; }\\n\\n.master_sec .master_card .shift .edit {\\n      position: absolute;\\n      right: 10px;\\n      bottom: 10px;\\n      cursor: pointer; }\\n\\n.master_sec .master_card .shift .play_circle i {\\n      font-size: 100px; }\\n\\n.master_sec .master_card .shift h2 {\\n      font-size: 1.5rem;\\n      margin-bottom: 0; }\\n\\n.master_sec .master_card .shift h3 {\\n      font-size: 90px;\\n      font-weight: 100;\\n      margin: 0; }\\n\\n.master_sec .master_card .shift .status_icon {\\n      display: -webkit-box;\\n      display: flex;\\n      justify-content: space-around; }\\n\\n.master_sec .master_card .shift .status_icon .status {\\n        width: calc(100% /1); }\\n\\n.master_sec .master_card .shift .status_icon .status:first-child {\\n          border-right: 1px solid #ccc; }\\n\\n.master_sec .master_card .shift .status_icon .status span {\\n          color: #292929;\\n          font-size: 24px; }\\n\\n.master_sec .master_card .shift .status_icon .status p {\\n          margin-top: 0px;\\n          color: #292929; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FsdGl1cy9Qcml5YS95YW50cmFfdmF1bHRfZnJvbnRlbmQvc3JjL2FwcC9Db21wb25lbnRzL21hc3Rlci9tYXN0ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQkFBbUI7RUFDbkIsYUFBYTtFQUNiLFlBQVk7RUFDWixlQUFlO0VBQ2Ysb0JBQWE7RUFBYixhQUFhO0VBQ2IseUJBQW1CO1VBQW5CLG1CQUFtQjtFQUNuQix3QkFBdUI7VUFBdkIsdUJBQXVCO0VBQ3ZCLE1BQU07RUFDTixPQUFPO0VBQ1AsUUFBUTtFQUNSLFdBQVc7RUFDWCxZQUFZLEVBQUE7O0FBR2Q7RUFDRSxXQUFXO0VBQ1gsa0JBQWtCLEVBQUE7O0FBSXRCO0VBQ0ksb0JBQWE7RUFBYixhQUFhLEVBQUE7O0FBRGpCO0lBR1Esb0JBQW9CO0lBQ3BCLFVBQVUsRUFBQTs7QUFKbEI7TUFNWSxrQkFBa0IsRUFBQTs7QUFOOUI7TUFTWSxlQUFlO01BQ2YsZ0JBQWdCO01BQ2hCLGFBQWEsRUFBQTs7QUFYekI7SUFnQlEsYUFBYSxFQUFBOztBQWhCckI7TUFtQlksa0JBQWtCO01BQ2xCLFdBQVc7TUFDWCxZQUFZO01BQ1osZUFBZSxFQUFBOztBQXRCM0I7TUEwQmdCLGdCQUFnQixFQUFBOztBQTFCaEM7TUE4QlksaUJBQWlCO01BQ2pCLGdCQUFnQixFQUFBOztBQS9CNUI7TUFrQ1ksZUFBZTtNQUNmLGdCQUFnQjtNQUNoQixTQUFTLEVBQUE7O0FBcENyQjtNQXVDWSxvQkFBYTtNQUFiLGFBQWE7TUFDYiw2QkFBNkIsRUFBQTs7QUF4Q3pDO1FBMENnQixvQkFBb0IsRUFBQTs7QUExQ3BDO1VBNENvQiw0QkFBNEIsRUFBQTs7QUE1Q2hEO1VBK0NvQixjQUFjO1VBQ2QsZUFBZSxFQUFBOztBQWhEbkM7VUFtRG9CLGVBQWU7VUFDZixjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9Db21wb25lbnRzL21hc3Rlci9tYXN0ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3Bpbm5lciB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMjYyOTMyO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIG9wYWNpdHk6IDAuOTtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIHotaW5kZXg6IDk5OTtcclxuICB9XHJcbiAgXHJcbiAgLnNwaW5uZXIgaW1nIHtcclxuICAgIHdpZHRoOiA5MHB4O1xyXG4gICAgbWFyZ2luLXRvcDogLTEzMHB4O1xyXG4gIH1cclxuXHJcblxyXG4ubWFzdGVyX3NlYyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgLmNvbHtcclxuICAgICAgICB3aWR0aDogY2FsYygxMDAlIC8xKTtcclxuICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgICAgICY6Zmlyc3QtY2hpbGR7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMjBweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaDF7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLm1hc3Rlcl9jYXJke1xyXG4gICAgICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICAuc2hpZnR7XHJcbiAgICAgICAgLmVkaXR7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgcmlnaHQ6IDEwcHg7XHJcbiAgICAgICAgICAgIGJvdHRvbTogMTBweDtcclxuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIH1cclxuICAgICAgICAucGxheV9jaXJjbGV7XHJcbiAgICAgICAgICAgIGl7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEwMHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGgye1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaDN7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogOTBweDtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDEwMDtcclxuICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICAuc3RhdHVzX2ljb257XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgICAgICAgICAuc3RhdHVze1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAvMSk7XHJcbiAgICAgICAgICAgICAgICAmOmZpcnN0LWNoaWxke1xyXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNjY2M7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBzcGFue1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjMjkyOTI5O1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjMjkyOTI5O1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICBcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG59XHJcblxyXG5cclxufVxyXG5cclxuIl19 */\"","import { Component, OnInit,Inject,ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup, Validators,FormBuilder } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { NavbarService} from '../../Nav/navbar.service';\nimport Swal from 'sweetalert2'\nimport {ProgramListService} from '../../Service/app/programlist.service';\nimport { MatTableDataSource } from '@angular/material';\nimport { untilDestroyed } from 'ngx-take-until-destroy';\nimport { saveAs } from 'file-saver';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-master',\n  templateUrl: './master.component.html',\n  styleUrls: ['./master.component.scss'],\n  // encapsulation: ViewEncapsulation.None\n\n})\nexport class MasterComponent implements OnInit {\n  date: any;\n  myLoader = false;\n  startDate = new Date(2020, 0, 1);\n\n  masterate:any;\n  public today: Date = new Date(new Date().toDateString());\n  public weekStart: Date = new Date(new Date(new Date().setDate(new Date().getDate() - (new Date().getDay() + 7) % 7)).toDateString());\n  public weekEnd: Date = new Date(new Date(new Date().setDate(new Date(new Date().setDate((new Date().getDate()\n      - (new Date().getDay() + 7) % 7))).getDate() + 6)).toDateString())\n      ;\n  public monthStart: Date = new Date(new Date(new Date().setDate(1)).toDateString());\n  public monthEnd: Date = this.today;\n  public lastStart: Date = new Date(new Date(new Date(new Date().setMonth(new Date().getMonth() - 1)).setDate(1)).toDateString());\n  public lastEnd: Date = this.today;\n  public yearStart: Date = new Date(new Date(new Date().setDate(new Date().getDate() - 365)).toDateString());\n  public yearEnd: Date = this.today;\n  public currentYear: number = this.today.getFullYear();\n  public currentMonth: number = this.today.getMonth();\n  public maxDate: Object = new Date();\n  public minDate: Object = new Date(new Date().setMonth(new Date().getMonth() - 1));\n  data:string;   \n  machine_response: any;\n  tenant: any;\n  reason: any;\n  length:any;\n  machine_id:any;\n  slavate:any;\n  user:any;\n  add_value:any;\n  // id:any;\n  constructor(private http: HttpClient,private fb:FormBuilder,public dialog: MatDialog,private nav:NavbarService,private service:ProgramListService) {\n    this.nav.show();\n    this.tenant = localStorage.getItem('tenant_id')\n    // this.id = localStorage.getItem('machine_id')\n    this.user = localStorage.getItem('user_id')\n\n\n   }\n   displayedColumns: string[] = ['position', 'name', 'weight', 'symbol','action'];\n   dataSource=new MatTableDataSource\n   slave=new MatTableDataSource\n\n   slavelist: string[] = ['position', 'name', 'weight', 'symbol','action'];\n  \n  openDialog(machine): void {\n    const dialogRef = this.dialog.open(Dialog, {\n      width: '250px',\n      data: { edit_shift: machine}\n\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.ngOnInit();\n    });\n  }\n\n  openDialog2(id): void {\n    const dialogRef = this.dialog.open(Delete, {\n      width: '250px',\n      data: { machine_id: id}\n\n      \n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.ngOnInit();\n    });\n  }\n\n\n  \n  ngOnInit() {\n    this.service.machine( this.tenant).pipe(untilDestroyed(this)).subscribe(res => {\n      this.machine_response=res;\n      // this.service.filelist( this.machine_response.id).subscribe(res =>{\n        this.machine_id = this.machine_response[0].id;\n        let data = this.machine_id;\n\n        localStorage.setItem('machine_id',data);\n        this.getmachine(this.machine_response[0].id)\n      });\n   \n  }\n\n  upload(demo){\n\n    this.service.cnc_upload(demo,this.machine_id).pipe(untilDestroyed(this)).subscribe(res =>{\n      Swal.fire(res.status)\n      location.reload()\n    })\n  }\n\n\n  new_download(idest,val){\n\n  let scotch ={\n      \"id\": this.machine_id,\n      \"file_name\": idest,\n      \"user_id\": this.user,\n      \"position\": val\n    }\n\n    this.service.download(scotch).pipe(untilDestroyed(this)).subscribe(res =>{\n\n var file = new Blob([res], {\n     type: 'text/json;charset=utf-8'\n   });\n\n   var data = \"text/json;charset=utf-8,\" + encodeURIComponent(data);\n  saveAs(file, scotch.file_name );\n      \n    \n    })\n  }\n\n  \n\n  \n\n    \n\n  \n  new_sdownload(latest,position){\n\n    let scotch ={\n        \"id\": this.machine_id,\n        \"file_name\":latest,\n        \"user_id\": this.user,\n        \"position\": position\n      }\n  \n      this.service.downloaded(scotch).pipe(untilDestroyed(this)).subscribe(res =>{\n        var file = new Blob([res], {\n          type: 'text/json;charset=utf-8'\n        });\n     \n        var data = \"text/json;charset=utf-8,\" + encodeURIComponent(data);\n       saveAs(file, scotch.file_name );\n           \n         \n         })\n       }\n       \n     \n\n  \n  reload() {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  new_check(val){\n\n    this.service.cnc_receive(val,this.machine_id).pipe(untilDestroyed(this)).subscribe(res =>{\n      Swal.fire(res.status)\n      location.reload()\n    })\n  }\n\n\n  getmachine(id) {\n    this.myLoader = true;\n     this.service.display_reason(id).pipe(untilDestroyed(this)).subscribe(res =>{\n      this.myLoader = false;\n\n      this.reason=res;\n      this.masterate = res.master_location\n      this.slavate =res.slave_location\n      this.dataSource=new MatTableDataSource(this.reason)\n      this.slave=new MatTableDataSource(this.reason)\n      if (res['status'] != null) {\n        Swal.fire(res['status'])\n      }\n    })  \n  }\n \n\n    \n\n  ngOnDestroy(){\n\n  }\n\n\n}\n\n@Component({\n  selector: 'dialog-page',\n  templateUrl: 'dialog.html',\n})\nexport class Dialog {\n  test:FormGroup;\n  fileName1:any;\n  machine_response: any;\n  tenant: string;\n  file2:any;\n  machine_id:any;\n  daterangepicker:any;\n  value:any;\n  status:any;\n  add_val:any;\n  constructor(private http: HttpClient,public dialogRef: MatDialogRef<Dialog>,@Inject(MAT_DIALOG_DATA) public data: any,private fb:FormBuilder,private service:ProgramListService) {\n  this.tenant = localStorage.getItem('tenant_id')  \n  this.machine_id = localStorage.getItem('machine_id')\n  // this.id = localStorage.getItem('machine_id')\n\n  this.value = data;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  fileUpload1(event){ \n    this.file2 = event.target.files[0];\n   \n    \n}\n  ngOnInit()\n  {\n    this.test=this.fb.group ({\n      machine_id:[this.value.edit_shift],\n      revision_no:[\"\",],\n\n    })\n\n    this.service.machine( this.tenant).pipe(untilDestroyed(this)).subscribe(res => {\n      this.machine_response=res;\n      \n    });\n\n  }\n  \n  logintest(){\n    this.add_val = this.test.value ;\n    this.add_val = this.value.edit_shift;\n \n\n    let headers = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + localStorage.getItem(\"token\")\n      })\n    }  \n    \n    var fd = new FormData();\n    fd.append('machine_id', this.test.value.machine_id);\n    fd.append('revision_no','1');\n    fd.append('file',this.file2);\n\n    this.http.post(\"http://yantra.local:40010/api/v1/file_upload\",fd, { headers: { Authorization: \"Bearer \" + localStorage.getItem(\"token\") } }).subscribe(res =>{\n      \n      if (res['status'] != null) {\n        Swal.fire(res['status'])\n      }\n      this.dialogRef.close();\n\n\n\n    })\n\n\n   \n\n\n    \n  }\n \n   ngOnDestroy(){\n\n  }\n\n}\n@Component({\n  selector: 'delete-page',\n  templateUrl: 'delete.html',\n})\nexport class Delete {\n  date: any;\n  machine_id:any;\n  login:FormGroup;\n  add_val: any;  \n  startDate = new Date(2020, 0, 1);\n  maxDate:any;\n  minDate:any;\n  value:any;\n  // id:any;\n  constructor(private service:ProgramListService,public dialogRef: MatDialogRef<Delete>,@Inject(MAT_DIALOG_DATA) public data: any,private fb:FormBuilder) {\n    this.machine_id = localStorage.getItem('machine_id')\n    // this.id = localStorage.getItem('machine_id')\n\n    this.value = data;\n   \n    }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  ngOnInit()\n\n\n  {\n\n    \n    this.login = this.fb.group({\n      user_name:[\"\",],\n      reason:[\"\",],\n      date:[\"\",]\n    })\n  }\n  logintest()\n  {\n    \n\n    this.add_val = this.login.value;\n    this.add_val[\"id\"] = this.machine_id;\n      this.service.delete(this.login.value).pipe(untilDestroyed(this)).subscribe(res =>{\n        if (res['status'] != null) {\n          Swal.fire(res['status'])\n        }\n        this.dialogRef.close();\n\n      })\n  }\n  \n  keyPress(event: any) {\n    const pattern = /[0-9\\+\\-\\ ]/;\n    let inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode != 8 && !pattern.test(inputChar)) {\n    event.preventDefault();\n    }\n   }\n   ngOnDestroy(){\n\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MasterComponent,Dialog,Delete } from './master.component';\nimport { SharedModule} from '../shared/shared.module';\nimport { ProgramListService} from '../../Service/app/programlist.service';\n\nconst routes: Routes = [{ path: '', component: MasterComponent }];\n\n\n@NgModule({\n  declarations: [MasterComponent,Dialog,Delete],\n  imports: [RouterModule.forChild(routes),\n    CommonModule,SharedModule\n  ],\n  entryComponents:[Dialog,Delete],\n  providers:[ProgramListService]\n\n})\nexport class MasterModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment} from '../../../environments/environment';\nimport { TokenService } from '../core/authentication/token.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class  ProgramListService {\n \n  constructor(private token:TokenService,private http:HttpClient) { }\n  tenantId = this.token.getTenantID();\n\n\n  machine(tenantId):Observable<any>{\n    return this.http.get('machines?tenant_id='+tenantId)\n  }\n  file_upload(value):Observable<any>{ \n    return this.http.post('file_upload',value,)\n  }\n \n  display_reason(id):Observable<any>{\n    return this.http.get('file_list?id='+id)\n  } \n  cnc_upload(demo,test):Observable<any>{\n    return this.http.get('file_send_to_cnc?file_name='+demo + '&&machine_id=' + test)\n  }\n  cnc_receive(val,ue):Observable<any>{\n    return this.http.get('file_receive_from_cnc?file_name='+val + '&&machine_id=' + ue)\n  }\n  delete(val):Observable<any>{ \n    \n     return this.http.post('file_delete',val)\n  }\n  download(value):Observable<Blob>{\n    return this.http.post('file_download',value,{responseType: 'blob'})\n  }\n\n  downloaded(slave):Observable<Blob>{\n    return this.http.post('file_download',slave,{responseType: 'blob'})\n  }\n}\n\n// post_file(relativeUrlPath: string, body: any, params?: object): Observable<Blob> {\n//   return this.http.post(relativeUrlPath, body, {responseType: 'blob'});\n//   }\n"],"sourceRoot":"webpack:///","file":"Components-master-master-module-es5.js"}