{"version":3,"sources":["src/app/Components/backup/backup.component.html","src/app/Components/backup/backup.html","src/app/Components/backup/backup.component.scss","src/app/Components/backup/backup.component.ts","src/app/Components/backup/backup.module.ts","src/app/Service/app/backup.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<section class=\\\"page\\\">\\n  <div *ngIf=\\\"myLoader\\\" class=\\\"spinner\\\">\\n    <img src=\\\"assets/images/spinner.gif\\\">\\n  </div>\\n  <div class=\\\"section_top_padding\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"page_title_sec\\\">\\n        <h2 class=\\\"sub_title\\\">\\n          <mat-icon class=\\\"v-align-middle display\\\">backup</mat-icon>\\n          <span class=\\\"v-align-middle\\\">Backup</span>\\n        </h2>\\n\\n        <div class=\\\"filter_sec\\\">\\n          <div class=\\\"filter_field\\\">\\n            <div class=\\\"filter_field\\\">\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-select placeholder=\\\"Select Machine\\\" [(ngModel)]=\\\"machine_id\\\"\\n                  (selectionChange)=\\\"getmachine($event.value)\\\" matNativeControl required>\\n                  <mat-option *ngFor=\\\"let machine of machine_response\\\" [value]=\\\"machine.id\\\">\\n                    {{machine.machine_name}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n\\n            </div>\\n          </div>\\n          <div class=\\\"form-button\\\">\\n            <button class=\\\"subit\\\" (click)=\\\"openDialog(machine_id)\\\" class=\\\"upload_btn\\\">File Upload</button>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"backup_sec\\\">\\n        <div class=\\\"col\\\">\\n          <!-- <h1>Backup</h1> -->\\n          <mat-card class=\\\"card_sec\\\">\\n            <mat-card-content class=\\\"table-responsive\\\">\\n              <table>\\n                <thead>\\n                  <tr>\\n                    <!-- <th>#</th> -->\\n                    <th>Name</th>\\n                    <th>Actions</th>\\n                  </tr>\\n                </thead>\\n                <tr *ngFor=\\\"let master of backup\\\">\\n                  <!-- <td></td> -->\\n                  <td>{{master}}</td>\\n                  <td>\\n\\n                    <div><a class=\\\"Download\\\" matTooltip=\\\"Download\\\" (click)=\\\"new_download(master,'Backup')\\\"><i class=\\\"fa fa-download\\\"\\n                          aria-hidden=\\\"true\\\"></i></a></div>\\n\\n\\n\\n                  </td>\\n                </tr>\\n              </table>\\n            </mat-card-content>\\n          </mat-card>\\n\\n        \\n\\n\\n        </div>\\n        <div *ngIf=\\\"backup.length==0\\\" class=\\\"no_data_found\\\">\\n          <h2>No data found</h2>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\"","export default \"<div class=\\\"modal_sec\\\">\\r\\n  <mat-toolbar>\\r\\n    <h3>File Upload</h3>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"onNoClick()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">Ã—</span>\\r\\n    </button>\\r\\n  </mat-toolbar>\\r\\n  <div class=\\\"dialog-form\\\">\\r\\n    <div class=\\\"filter_sec\\\">\\r\\n      <form [formGroup]=\\\"test\\\" (ngSubmit)=\\\"testform(test.value)\\\" class=\\\"form_sec\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-select placeholder=\\\"Select Machine\\\"   matNativeControl required formControlName=\\\"machine_id\\\">\\r\\n            <mat-option *ngFor=\\\"let machine of machine_response\\\" [value]=\\\"machine.id\\\">\\r\\n                {{machine.machine_name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Reason</mat-label>\\r\\n          <input matInput formControlName=\\\"reason\\\" type=\\\"text\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <div class=\\\"form-group custom_file_upload\\\">\\r\\n          <label for=\\\"file\\\">Choose File</label><br /> <input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"fileUpload1($event)\\\">\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"form-button text-right\\\">\\r\\n          <button mat-raised-button [disabled]=\\\"test.invalid\\\" class=\\\"filter_btn btn_orange\\\">\\r\\n            Save</button>\\r\\n          <button mat-raised-button (click)=\\\"onNoClick()\\\" class=\\\"filter_btn btn_default ml-16\\\">Close</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \".filter_sec form {\\n  display: -webkit-box;\\n  display: flex; }\\n\\n.spinner {\\n  background: #262932;\\n  height: 100vh;\\n  opacity: 0.9;\\n  position: fixed;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  width: auto;\\n  z-index: 999; }\\n\\n.spinner img {\\n  width: 90px;\\n  margin-top: -130px; }\\n\\n.backup_sec {\\n  display: -webkit-box;\\n  display: flex; }\\n\\n.backup_sec .col {\\n    width: calc(100% /1);\\n    padding: 0; }\\n\\n.backup_sec .col h1 {\\n      font-size: 18px;\\n      font-weight: 400;\\n      margin-top: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FsdGl1cy9Qcml5YS95YW50cmFfdmF1bHRfZnJvbnRlbmQvc3JjL2FwcC9Db21wb25lbnRzL2JhY2t1cC9iYWNrdXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSxvQkFBYTtFQUFiLGFBQWEsRUFBQTs7QUFHakI7RUFDSSxtQkFBbUI7RUFDbkIsYUFBYTtFQUNiLFlBQVk7RUFDWixlQUFlO0VBQ2Ysb0JBQWE7RUFBYixhQUFhO0VBQ2IseUJBQW1CO1VBQW5CLG1CQUFtQjtFQUNuQix3QkFBdUI7VUFBdkIsdUJBQXVCO0VBQ3ZCLE1BQU07RUFDTixPQUFPO0VBQ1AsUUFBUTtFQUNSLFdBQVc7RUFDWCxZQUFZLEVBQUE7O0FBR2Q7RUFDRSxXQUFXO0VBQ1gsa0JBQWtCLEVBQUE7O0FBR3BCO0VBQ0Usb0JBQWE7RUFBYixhQUFhLEVBQUE7O0FBRGY7SUFHTSxvQkFBb0I7SUFDcEIsVUFBVSxFQUFBOztBQUpoQjtNQU1VLGVBQWU7TUFDZixnQkFBZ0I7TUFDaEIsYUFBYSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvQ29tcG9uZW50cy9iYWNrdXAvYmFja3VwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZpbHRlcl9zZWMge1xyXG4gICAgZm9ybXtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxufVxyXG4uc3Bpbm5lciB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMjYyOTMyO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIG9wYWNpdHk6IDAuOTtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIHotaW5kZXg6IDk5OTtcclxuICB9XHJcbiAgXHJcbiAgLnNwaW5uZXIgaW1nIHtcclxuICAgIHdpZHRoOiA5MHB4O1xyXG4gICAgbWFyZ2luLXRvcDogLTEzMHB4O1xyXG4gIH1cclxuXHJcbiAgLmJhY2t1cF9zZWMge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIC5jb2x7XHJcbiAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAvMSk7XHJcbiAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICBoMXtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICB9Il19 */\"","import { Component, OnInit,Inject } from '@angular/core';\nimport { FormControl, FormGroup, Validators,FormBuilder } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { NavbarService} from '../../Nav/navbar.service';\nimport { BackupService} from '../../Service/app/backup.service';\nimport { MatTableDataSource } from '@angular/material';\nimport Swal from 'sweetalert2';\nimport { untilDestroyed } from 'ngx-take-until-destroy';\nimport { saveAs } from 'file-saver';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-backup',\n  templateUrl: './backup.component.html',\n  styleUrls: ['./backup.component.scss']\n})\nexport class BackupComponent implements OnInit {\n  test:FormGroup;\n  machine_response: any;\n  tenant: any;\n  reason_response: any;\n  backup: any;\n  machine_id:any;\n  myLoader = false;\n  user:any;\n  \n  constructor(public dialog: MatDialog,private fb :FormBuilder,private nav:NavbarService,private service :BackupService) { \n    this.tenant=localStorage.getItem('tenant_id')\n    this.user = localStorage.getItem('user_id')\n\n    this.nav.show();\n  }\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol','action'];\n  dataSource = new MatTableDataSource();\n  openDialog(machine): void {\n    const dialogRef = this.dialog.open(Backup, {\n      width: '250px',\n      data: { edit_shift: machine}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.ngOnInit();\n    });\n  }\n  ngOnInit() {\n  \n    this.service.machine( this.tenant).pipe(untilDestroyed(this)).subscribe(res => {\n      this.machine_response=res;\n      // this.service.filelist( this.machine_response.id).subscribe(res =>{\n        this.machine_id = this.machine_response[0].id;\n        this.getmachine(this.machine_response[0].id)\n      });\n   \n  }\n  \n  getmachine(id) {\n    this.myLoader = true;\n     this.service.display_reason(id).pipe(untilDestroyed(this)).subscribe(res =>{\n      this.myLoader = false;\n\n      this.backup=res.backup_location;\n      // this.dataSource=new MatTableDataSource(this.backup)\n     \n      if (res['status'] != null) {\n        Swal.fire(res['status'])\n      }\n    })  \n  }\n  new_download(name,position){\n\n    let scotch ={\n      \"id\": this.machine_id,\n      \"file_name\":name,\n      \"user_id\": this.user,\n      \"position\": position\n    }\n\n    this.service.downloaded(scotch).pipe(untilDestroyed(this)).subscribe(res =>{\n      var file = new Blob([res], {\n        type: 'text/json;charset=utf-8'\n      });\n   \n      var data = \"text/json;charset=utf-8,\" + encodeURIComponent(data);\n     saveAs(file, scotch.file_name );\n         \n       \n       })\n     }\n   \n\n\n \n  ngOnDestroy(){\n\n  }\n}\n@Component({\n  selector: 'backup-page',\n  templateUrl: 'backup.html',\n})\nexport class Backup {\n  test:FormGroup;\n  machine_response:any;\n  baclog:any;\n  tenant: any;\n  user_id:any;\n  add_val:any;\n  file2:any;\n  machine_id:any;\n  value:any;\n  status:any;\n  constructor(private http: HttpClient,public dialogRef: MatDialogRef<Backup>,@Inject(MAT_DIALOG_DATA) public data: string,private fb:FormBuilder,private service :BackupService) {\n     this.tenant = localStorage.getItem('tenant_id')  \n     this.user_id = localStorage.getItem('user_id')\n     this.value = data;\n  \n  }\n\n  fileUpload1(event){\n    this.file2 = event.target.files[0];\n   \n    \n}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  ngOnInit() {\n\n    this.test=this.fb.group ({\n      machine_id:[this.value.edit_shift],\n      reason:[\"\"],\n\n    })\n\n    this.service.machine_lock( this.tenant).pipe(untilDestroyed(this)).subscribe(res => {\n      this.machine_response=res;\n      \n    });\n  }\n  testform(val)\n  { \n    let headers = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + localStorage.getItem(\"token\")\n      })\n    }  \n    this.add_val = val ;\n    this.add_val = this.value.edit_shift;\n\n    var fd = new FormData();\n    fd.append('machine_id', this.test.value.machine_id);\n    fd.append('reason', this.test.value.reason);\n    fd.append('user_id',  this.user_id);\n    fd.append('file', this.file2);\n   \n      this.http.post(\"http://yantra.local:40010/api/v1/backup_upload\",fd, { headers: { Authorization: \"Bearer \" + localStorage.getItem(\"token\") } }).subscribe(res =>{\n      if (res['status'] != null) {\n        Swal.fire(res['status'])\n      }\n      this.dialogRef.close();\n    \n  })\n}\n\n  \n   ngOnDestroy(){\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BackupComponent,Backup } from './backup.component';\nimport { SharedModule} from '../shared/shared.module';\n//import { BackupService} from '../../Service/app/backup.service';\nconst routes: Routes = [{ path: '', component: BackupComponent }];\n\n\n@NgModule({\n  declarations: [BackupComponent,Backup],\n  imports: [RouterModule.forChild(routes),\n  CommonModule,SharedModule\n    \n  ],\n  entryComponents:[Backup],\n//  providers:[BackupService]\n\n})\nexport class BackupModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment} from '../../../environments/environment';\nimport { TokenService } from '../core/authentication/token.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BackupService {\n\n  constructor(private http:HttpClient) { }\n\n  machine(tenantId):Observable<any>{\n    return this.http.get('machines?tenant_id='+tenantId)\n  }\n  display_reason(id):Observable<any>{\n    return this.http.get('backup_file_list?id='+id)\n  }\n\n  machine_lock(tenantId):Observable<any>{\n    return this.http.get('machines?tenant_id='+tenantId)\n  }\n  backup_folder(value):Observable<any>{\n    return this.http.post('backup_upload',value)\n  }\n  downloaded(slave):Observable<Blob>{\n    return this.http.post('file_download',slave,{responseType: 'blob'})\n  }\n}\n"],"sourceRoot":"webpack:///","file":"Components-backup-backup-module-es5.js"}