{"version":3,"sources":["node_modules/diff-match-patch/index.js","projects/ngx-text-diff/src/lib/loader-spinner/loader-spinner.component.html","projects/ngx-text-diff/src/lib/ngx-text-diff.component.html","src/app/home/home.component.html","projects/ngx-text-diff/src/lib/format-line.pipe.ts","projects/ngx-text-diff/src/lib/loader-spinner/loader-spinner.component.css","projects/ngx-text-diff/src/lib/loader-spinner/loader-spinner.component.ts","projects/ngx-text-diff/src/lib/ngx-text-diff-container.directive.ts","projects/ngx-text-diff/src/lib/ngx-text-diff.component.css","projects/ngx-text-diff/src/lib/ngx-text-diff.component.ts","projects/ngx-text-diff/src/lib/ngx-text-diff.module.ts","projects/ngx-text-diff/src/lib/ngx-text-diff.service.ts","projects/ngx-text-diff/src/lib/ngx-text-diff.utils.ts","src/app/home/home.component.scss","src/app/home/home.component.ts","src/app/home/home.module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Diff Match and Patch\n * Copyright 2018 The diff-match-patch Authors.\n * https://github.com/google/diff-match-patch\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Computes the difference between two texts to create a patch.\n * Applies the patch onto another text, allowing for errors.\n * @author fraser@google.com (Neil Fraser)\n */\n\n/**\n * Class containing the diff, match and patch methods.\n * @constructor\n */\nfunction diff_match_patch() {\n\n  // Defaults.\n  // Redefine these in your program to override the defaults.\n\n  // Number of seconds to map a diff before giving up (0 for infinity).\n  this.Diff_Timeout = 1.0;\n  // Cost of an empty edit operation in terms of edit characters.\n  this.Diff_EditCost = 4;\n  // At what point is no match declared (0.0 = perfection, 1.0 = very loose).\n  this.Match_Threshold = 0.5;\n  // How far to search for a match (0 = exact location, 1000+ = broad match).\n  // A match this many characters away from the expected location will add\n  // 1.0 to the score (0.0 is a perfect match).\n  this.Match_Distance = 1000;\n  // When deleting a large block of text (over ~64 characters), how close do\n  // the contents have to be to match the expected contents. (0.0 = perfection,\n  // 1.0 = very loose).  Note that Match_Threshold controls how closely the\n  // end points of a delete need to match.\n  this.Patch_DeleteThreshold = 0.5;\n  // Chunk size for context length.\n  this.Patch_Margin = 4;\n\n  // The number of bits in an int.\n  this.Match_MaxBits = 32;\n}\n\n\n//  DIFF FUNCTIONS\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n/** @typedef {{0: number, 1: string}} */\ndiff_match_patch.Diff;\n\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean=} opt_checklines Optional speedup flag. If present and false,\n *     then don't run a line-level diff first to identify the changed areas.\n *     Defaults to true, which does a faster, slightly less optimal diff.\n * @param {number} opt_deadline Optional time when the diff should be complete\n *     by.  Used internally for recursive calls.  Users should set DiffTimeout\n *     instead.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_main = function(text1, text2, opt_checklines,\n    opt_deadline) {\n  // Set a deadline by which time the diff must be complete.\n  if (typeof opt_deadline == 'undefined') {\n    if (this.Diff_Timeout <= 0) {\n      opt_deadline = Number.MAX_VALUE;\n    } else {\n      opt_deadline = (new Date).getTime() + this.Diff_Timeout * 1000;\n    }\n  }\n  var deadline = opt_deadline;\n\n  // Check for null inputs.\n  if (text1 == null || text2 == null) {\n    throw new Error('Null input. (diff_main)');\n  }\n\n  // Check for equality (speedup).\n  if (text1 == text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (typeof opt_checklines == 'undefined') {\n    opt_checklines = true;\n  }\n  var checklines = opt_checklines;\n\n  // Trim off common prefix (speedup).\n  var commonlength = this.diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = this.diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = this.diff_compute_(text1, text2, checklines, deadline);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  this.diff_cleanupMerge(diffs);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean} checklines Speedup flag.  If false, then don't run a\n *     line-level diff first to identify the changed areas.\n *     If true, then run a faster, slightly less optimal diff.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_compute_ = function(text1, text2, checklines,\n    deadline) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i != -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [[DIFF_INSERT, longtext.substring(0, i)],\n             [DIFF_EQUAL, shorttext],\n             [DIFF_INSERT, longtext.substring(i + shorttext.length)]];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length == 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = this.diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = this.diff_main(text1_a, text2_a, checklines, deadline);\n    var diffs_b = this.diff_main(text1_b, text2_b, checklines, deadline);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  if (checklines && text1.length > 100 && text2.length > 100) {\n    return this.diff_lineMode_(text1, text2, deadline);\n  }\n\n  return this.diff_bisect_(text1, text2, deadline);\n};\n\n\n/**\n * Do a quick line-level diff on both strings, then rediff the parts for\n * greater accuracy.\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_lineMode_ = function(text1, text2, deadline) {\n  // Scan the text on a line-by-line basis first.\n  var a = this.diff_linesToChars_(text1, text2);\n  text1 = a.chars1;\n  text2 = a.chars2;\n  var linearray = a.lineArray;\n\n  var diffs = this.diff_main(text1, text2, false, deadline);\n\n  // Convert the diff back to original text.\n  this.diff_charsToLines_(diffs, linearray);\n  // Eliminate freak matches (e.g. blank lines)\n  this.diff_cleanupSemantic(diffs);\n\n  // Rediff any replacement blocks, this time character-by-character.\n  // Add a dummy entry at the end.\n  diffs.push([DIFF_EQUAL, '']);\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete >= 1 && count_insert >= 1) {\n          // Delete the offending records and add the merged ones.\n          diffs.splice(pointer - count_delete - count_insert,\n                       count_delete + count_insert);\n          pointer = pointer - count_delete - count_insert;\n          var a = this.diff_main(text_delete, text_insert, false, deadline);\n          for (var j = a.length - 1; j >= 0; j--) {\n            diffs.splice(pointer, 0, a[j]);\n          }\n          pointer = pointer + a.length;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n    pointer++;\n  }\n  diffs.pop();  // Remove the dummy entry at the end.\n\n  return diffs;\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisect_ = function(text1, text2, deadline) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 != 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Bail out if deadline is reached.\n    if ((new Date()).getTime() > deadline) {\n      break;\n    }\n\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 == -d || (k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (x1 < text1_length && y1 < text2_length &&\n             text1.charAt(x1) == text2.charAt(y1)) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 == -d || (k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (x2 < text1_length && y2 < text2_length &&\n             text1.charAt(text1_length - x2 - 1) ==\n             text2.charAt(text2_length - y2 - 1)) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisectSplit_ = function(text1, text2, x, y,\n    deadline) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = this.diff_main(text1a, text2a, false, deadline);\n  var diffsb = this.diff_main(text1b, text2b, false, deadline);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Split two texts into an array of strings.  Reduce the texts to a string of\n * hashes where each Unicode character represents one line.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {{chars1: string, chars2: string, lineArray: !Array.<string>}}\n *     An object containing the encoded text1, the encoded text2 and\n *     the array of unique strings.\n *     The zeroth element of the array of unique strings is intentionally blank.\n * @private\n */\ndiff_match_patch.prototype.diff_linesToChars_ = function(text1, text2) {\n  var lineArray = [];  // e.g. lineArray[4] == 'Hello\\n'\n  var lineHash = {};   // e.g. lineHash['Hello\\n'] == 4\n\n  // '\\x00' is a valid character, but various debuggers don't like it.\n  // So we'll insert a junk entry to avoid generating a null character.\n  lineArray[0] = '';\n\n  /**\n   * Split a text into an array of strings.  Reduce the texts to a string of\n   * hashes where each Unicode character represents one line.\n   * Modifies linearray and linehash through being a closure.\n   * @param {string} text String to encode.\n   * @return {string} Encoded string.\n   * @private\n   */\n  function diff_linesToCharsMunge_(text) {\n    var chars = '';\n    // Walk the text, pulling out a substring for each line.\n    // text.split('\\n') would would temporarily double our memory footprint.\n    // Modifying text would create many large strings to garbage collect.\n    var lineStart = 0;\n    var lineEnd = -1;\n    // Keeping our own length variable is faster than looking it up.\n    var lineArrayLength = lineArray.length;\n    while (lineEnd < text.length - 1) {\n      lineEnd = text.indexOf('\\n', lineStart);\n      if (lineEnd == -1) {\n        lineEnd = text.length - 1;\n      }\n      var line = text.substring(lineStart, lineEnd + 1);\n      lineStart = lineEnd + 1;\n\n      if (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) :\n          (lineHash[line] !== undefined)) {\n        chars += String.fromCharCode(lineHash[line]);\n      } else {\n        chars += String.fromCharCode(lineArrayLength);\n        lineHash[line] = lineArrayLength;\n        lineArray[lineArrayLength++] = line;\n      }\n    }\n    return chars;\n  }\n\n  var chars1 = diff_linesToCharsMunge_(text1);\n  var chars2 = diff_linesToCharsMunge_(text2);\n  return {chars1: chars1, chars2: chars2, lineArray: lineArray};\n};\n\n\n/**\n * Rehydrate the text in a diff from a string of line hashes to real lines of\n * text.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {!Array.<string>} lineArray Array of unique strings.\n * @private\n */\ndiff_match_patch.prototype.diff_charsToLines_ = function(diffs, lineArray) {\n  for (var x = 0; x < diffs.length; x++) {\n    var chars = diffs[x][1];\n    var text = [];\n    for (var y = 0; y < chars.length; y++) {\n      text[y] = lineArray[chars.charCodeAt(y)];\n    }\n    diffs[x][1] = text.join('');\n  }\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\ndiff_match_patch.prototype.diff_commonPrefix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(pointerstart, pointermid) ==\n        text2.substring(pointerstart, pointermid)) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\ndiff_match_patch.prototype.diff_commonSuffix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 ||\n      text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n        text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine if the suffix of one string is the prefix of another.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of the first\n *     string and the start of the second string.\n * @private\n */\ndiff_match_patch.prototype.diff_commonOverlap_ = function(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  // Eliminate the null case.\n  if (text1_length == 0 || text2_length == 0) {\n    return 0;\n  }\n  // Truncate the longer string.\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n  var text_length = Math.min(text1_length, text2_length);\n  // Quick check for the worst case.\n  if (text1 == text2) {\n    return text_length;\n  }\n\n  // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: http://neil.fraser.name/news/2010/11/04/\n  var best = 0;\n  var length = 1;\n  while (true) {\n    var pattern = text1.substring(text_length - length);\n    var found = text2.indexOf(pattern);\n    if (found == -1) {\n      return best;\n    }\n    length += found;\n    if (found == 0 || text1.substring(text_length - length) ==\n        text2.substring(0, length)) {\n      best = length;\n      length++;\n    }\n  }\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n * @private\n */\ndiff_match_patch.prototype.diff_halfMatch_ = function(text1, text2) {\n  if (this.Diff_Timeout <= 0) {\n    // Don't risk returning a non-optimal diff if we have unlimited time.\n    return null;\n  }\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {\n      var prefixLength = dmp.diff_commonPrefix(longtext.substring(i),\n                                               shorttext.substring(j));\n      var suffixLength = dmp.diff_commonSuffix(longtext.substring(0, i),\n                                               shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(j - suffixLength, j) +\n            shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [best_longtext_a, best_longtext_b,\n              best_shorttext_a, best_shorttext_b, best_common];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemantic = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Number of characters that changed prior to the equality.\n  var length_insertions1 = 0;\n  var length_deletions1 = 0;\n  // Number of characters that changed after the equality.\n  var length_insertions2 = 0;\n  var length_deletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastequality = diffs[pointer][1];\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      }\n      // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n      if (lastequality && (lastequality.length <=\n          Math.max(length_insertions1, length_deletions1)) &&\n          (lastequality.length <= Math.max(length_insertions2,\n                                           length_deletions2))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     [DIFF_DELETE, lastequality]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        // Throw away the equality we just deleted.\n        equalitiesLength--;\n        // Throw away the previous equality (it needs to be reevaluated).\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0;  // Reset the counters.\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastequality = null;\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  // Normalize the diff.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n  this.diff_cleanupSemanticLossless(diffs);\n\n  // Find any overlaps between deletions and insertions.\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  //   -> <del>abc</del>xxx<ins>def</ins>\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\n  //   -> <ins>def</ins>xxx<del>abc</del>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (diffs[pointer - 1][0] == DIFF_DELETE &&\n        diffs[pointer][0] == DIFF_INSERT) {\n      var deletion = diffs[pointer - 1][1];\n      var insertion = diffs[pointer][1];\n      var overlap_length1 = this.diff_commonOverlap_(deletion, insertion);\n      var overlap_length2 = this.diff_commonOverlap_(insertion, deletion);\n      if (overlap_length1 >= overlap_length2) {\n        if (overlap_length1 >= deletion.length / 2 ||\n            overlap_length1 >= insertion.length / 2) {\n          // Overlap found.  Insert an equality and trim the surrounding edits.\n          diffs.splice(pointer, 0,\n              [DIFF_EQUAL, insertion.substring(0, overlap_length1)]);\n          diffs[pointer - 1][1] =\n              deletion.substring(0, deletion.length - overlap_length1);\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\n          pointer++;\n        }\n      } else {\n        if (overlap_length2 >= deletion.length / 2 ||\n            overlap_length2 >= insertion.length / 2) {\n          // Reverse overlap found.\n          // Insert an equality and swap and trim the surrounding edits.\n          diffs.splice(pointer, 0,\n              [DIFF_EQUAL, deletion.substring(0, overlap_length2)]);\n          diffs[pointer - 1][0] = DIFF_INSERT;\n          diffs[pointer - 1][1] =\n              insertion.substring(0, insertion.length - overlap_length2);\n          diffs[pointer + 1][0] = DIFF_DELETE;\n          diffs[pointer + 1][1] =\n              deletion.substring(overlap_length2);\n          pointer++;\n        }\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n};\n\n\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemanticLossless = function(diffs) {\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 6 (best) to 0 (worst).\n   * Closure, but does not reference any external variables.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n   * @return {number} The score.\n   * @private\n   */\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 6;\n    }\n\n    // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n    var char1 = one.charAt(one.length - 1);\n    var char2 = two.charAt(0);\n    var nonAlphaNumeric1 = char1.match(diff_match_patch.nonAlphaNumericRegex_);\n    var nonAlphaNumeric2 = char2.match(diff_match_patch.nonAlphaNumericRegex_);\n    var whitespace1 = nonAlphaNumeric1 &&\n        char1.match(diff_match_patch.whitespaceRegex_);\n    var whitespace2 = nonAlphaNumeric2 &&\n        char2.match(diff_match_patch.whitespaceRegex_);\n    var lineBreak1 = whitespace1 &&\n        char1.match(diff_match_patch.linebreakRegex_);\n    var lineBreak2 = whitespace2 &&\n        char2.match(diff_match_patch.linebreakRegex_);\n    var blankLine1 = lineBreak1 &&\n        one.match(diff_match_patch.blanklineEndRegex_);\n    var blankLine2 = lineBreak2 &&\n        two.match(diff_match_patch.blanklineStartRegex_);\n\n    if (blankLine1 || blankLine2) {\n      // Five points for blank lines.\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      // Four points for line breaks.\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      // Three points for end of sentences.\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      // Two points for whitespace.\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      // One point for non-alphanumeric.\n      return 1;\n    }\n    return 0;\n  }\n\n  var pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      var equality1 = diffs[pointer - 1][1];\n      var edit = diffs[pointer][1];\n      var equality2 = diffs[pointer + 1][1];\n\n      // First, shift the edit as far left as possible.\n      var commonOffset = this.diff_commonSuffix(equality1, edit);\n      if (commonOffset) {\n        var commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n\n      // Second, step character by character right, looking for the best fit.\n      var bestEquality1 = equality1;\n      var bestEdit = edit;\n      var bestEquality2 = equality2;\n      var bestScore = diff_cleanupSemanticScore_(equality1, edit) +\n          diff_cleanupSemanticScore_(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        var score = diff_cleanupSemanticScore_(equality1, edit) +\n            diff_cleanupSemanticScore_(edit, equality2);\n        // The >= encourages trailing rather than leading whitespace on edits.\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n\n      if (diffs[pointer - 1][1] != bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n};\n\n// Define some regex patterns for matching boundaries.\ndiff_match_patch.nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\ndiff_match_patch.whitespaceRegex_ = /\\s/;\ndiff_match_patch.linebreakRegex_ = /[\\r\\n]/;\ndiff_match_patch.blanklineEndRegex_ = /\\n\\r?\\n$/;\ndiff_match_patch.blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\n\n/**\n * Reduce the number of edits by eliminating operationally trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupEfficiency = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Is there an insertion operation before the last equality.\n  var pre_ins = false;\n  // Is there a deletion operation before the last equality.\n  var pre_del = false;\n  // Is there an insertion operation after the last equality.\n  var post_ins = false;\n  // Is there a deletion operation after the last equality.\n  var post_del = false;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      if (diffs[pointer][1].length < this.Diff_EditCost &&\n          (post_ins || post_del)) {\n        // Candidate found.\n        equalities[equalitiesLength++] = pointer;\n        pre_ins = post_ins;\n        pre_del = post_del;\n        lastequality = diffs[pointer][1];\n      } else {\n        // Not a candidate, and can never become one.\n        equalitiesLength = 0;\n        lastequality = null;\n      }\n      post_ins = post_del = false;\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_DELETE) {\n        post_del = true;\n      } else {\n        post_ins = true;\n      }\n      /*\n       * Five types to be split:\n       * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\n       * <ins>A</ins>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<ins>C</ins>\n       * <ins>A</del>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<del>C</del>\n       */\n      if (lastequality && ((pre_ins && pre_del && post_ins && post_del) ||\n                           ((lastequality.length < this.Diff_EditCost / 2) &&\n                            (pre_ins + pre_del + post_ins + post_del) == 3))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     [DIFF_DELETE, lastequality]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        equalitiesLength--;  // Throw away the equality we just deleted;\n        lastequality = null;\n        if (pre_ins && pre_del) {\n          // No changes made which could affect previous entry, keep going.\n          post_ins = post_del = true;\n          equalitiesLength = 0;\n        } else {\n          equalitiesLength--;  // Throw away the previous equality.\n          pointer = equalitiesLength > 0 ?\n              equalities[equalitiesLength - 1] : -1;\n          post_ins = post_del = false;\n        }\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupMerge = function(diffs) {\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete + count_insert > 1) {\n          if (count_delete !== 0 && count_insert !== 0) {\n            // Factor out any common prefixies.\n            commonlength = this.diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if ((pointer - count_delete - count_insert) > 0 &&\n                  diffs[pointer - count_delete - count_insert - 1][0] ==\n                  DIFF_EQUAL) {\n                diffs[pointer - count_delete - count_insert - 1][1] +=\n                    text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL,\n                                    text_insert.substring(0, commonlength)]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixies.\n            commonlength = this.diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] = text_insert.substring(text_insert.length -\n                  commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length -\n                  commonlength);\n              text_delete = text_delete.substring(0, text_delete.length -\n                  commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          if (count_delete === 0) {\n            diffs.splice(pointer - count_insert,\n                count_delete + count_insert, [DIFF_INSERT, text_insert]);\n          } else if (count_insert === 0) {\n            diffs.splice(pointer - count_delete,\n                count_delete + count_insert, [DIFF_DELETE, text_delete]);\n          } else {\n            diffs.splice(pointer - count_delete - count_insert,\n                count_delete + count_insert, [DIFF_DELETE, text_delete],\n                [DIFF_INSERT, text_insert]);\n          }\n          pointer = pointer - count_delete - count_insert +\n                    (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;\n        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n          diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n            diffs[pointer][1].substring(0, diffs[pointer][1].length -\n                                        diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n          diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n            diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n            diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * loc is a location in text1, compute and return the equivalent location in\n * text2.\n * e.g. 'The cat' vs 'The big cat', 1->1, 5->8\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {number} loc Location within text1.\n * @return {number} Location within text2.\n */\ndiff_match_patch.prototype.diff_xIndex = function(diffs, loc) {\n  var chars1 = 0;\n  var chars2 = 0;\n  var last_chars1 = 0;\n  var last_chars2 = 0;\n  var x;\n  for (x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {  // Equality or deletion.\n      chars1 += diffs[x][1].length;\n    }\n    if (diffs[x][0] !== DIFF_DELETE) {  // Equality or insertion.\n      chars2 += diffs[x][1].length;\n    }\n    if (chars1 > loc) {  // Overshot the location.\n      break;\n    }\n    last_chars1 = chars1;\n    last_chars2 = chars2;\n  }\n  // Was the location was deleted?\n  if (diffs.length != x && diffs[x][0] === DIFF_DELETE) {\n    return last_chars2;\n  }\n  // Add the remaining character length.\n  return last_chars2 + (loc - last_chars1);\n};\n\n\n/**\n * Convert a diff array into a pretty HTML report.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} HTML representation.\n */\ndiff_match_patch.prototype.diff_prettyHtml = function(diffs) {\n  var html = [];\n  var pattern_amp = /&/g;\n  var pattern_lt = /</g;\n  var pattern_gt = />/g;\n  var pattern_para = /\\n/g;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];    // Operation (insert, delete, equal)\n    var data = diffs[x][1];  // Text of change.\n    var text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;')\n        .replace(pattern_gt, '&gt;').replace(pattern_para, '&para;<br>');\n    switch (op) {\n      case DIFF_INSERT:\n        html[x] = '<ins style=\"background:#e6ffe6;\">' + text + '</ins>';\n        break;\n      case DIFF_DELETE:\n        html[x] = '<del style=\"background:#ffe6e6;\">' + text + '</del>';\n        break;\n      case DIFF_EQUAL:\n        html[x] = '<span>' + text + '</span>';\n        break;\n    }\n  }\n  return html.join('');\n};\n\n\n/**\n * Compute and return the source text (all equalities and deletions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Source text.\n */\ndiff_match_patch.prototype.diff_text1 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute and return the destination text (all equalities and insertions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Destination text.\n */\ndiff_match_patch.prototype.diff_text2 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_DELETE) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute the Levenshtein distance; the number of inserted, deleted or\n * substituted characters.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {number} Number of changes.\n */\ndiff_match_patch.prototype.diff_levenshtein = function(diffs) {\n  var levenshtein = 0;\n  var insertions = 0;\n  var deletions = 0;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];\n    var data = diffs[x][1];\n    switch (op) {\n      case DIFF_INSERT:\n        insertions += data.length;\n        break;\n      case DIFF_DELETE:\n        deletions += data.length;\n        break;\n      case DIFF_EQUAL:\n        // A deletion and an insertion is one substitution.\n        levenshtein += Math.max(insertions, deletions);\n        insertions = 0;\n        deletions = 0;\n        break;\n    }\n  }\n  levenshtein += Math.max(insertions, deletions);\n  return levenshtein;\n};\n\n\n/**\n * Crush the diff into an encoded string which describes the operations\n * required to transform text1 into text2.\n * E.g. =3\\t-2\\t+ing  -> Keep 3 chars, delete 2 chars, insert 'ing'.\n * Operations are tab-separated.  Inserted text is escaped using %xx notation.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Delta text.\n */\ndiff_match_patch.prototype.diff_toDelta = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    switch (diffs[x][0]) {\n      case DIFF_INSERT:\n        text[x] = '+' + encodeURI(diffs[x][1]);\n        break;\n      case DIFF_DELETE:\n        text[x] = '-' + diffs[x][1].length;\n        break;\n      case DIFF_EQUAL:\n        text[x] = '=' + diffs[x][1].length;\n        break;\n    }\n  }\n  return text.join('\\t').replace(/%20/g, ' ');\n};\n\n\n/**\n * Given the original text1, and an encoded string which describes the\n * operations required to transform text1 into text2, compute the full diff.\n * @param {string} text1 Source string for the diff.\n * @param {string} delta Delta text.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.diff_fromDelta = function(text1, delta) {\n  var diffs = [];\n  var diffsLength = 0;  // Keeping our own length var is faster in JS.\n  var pointer = 0;  // Cursor in text1\n  var tokens = delta.split(/\\t/g);\n  for (var x = 0; x < tokens.length; x++) {\n    // Each token begins with a one character parameter which specifies the\n    // operation of this token (delete, insert, equality).\n    var param = tokens[x].substring(1);\n    switch (tokens[x].charAt(0)) {\n      case '+':\n        try {\n          diffs[diffsLength++] = [DIFF_INSERT, decodeURI(param)];\n        } catch (ex) {\n          // Malformed URI sequence.\n          throw new Error('Illegal escape in diff_fromDelta: ' + param);\n        }\n        break;\n      case '-':\n        // Fall through.\n      case '=':\n        var n = parseInt(param, 10);\n        if (isNaN(n) || n < 0) {\n          throw new Error('Invalid number in diff_fromDelta: ' + param);\n        }\n        var text = text1.substring(pointer, pointer += n);\n        if (tokens[x].charAt(0) == '=') {\n          diffs[diffsLength++] = [DIFF_EQUAL, text];\n        } else {\n          diffs[diffsLength++] = [DIFF_DELETE, text];\n        }\n        break;\n      default:\n        // Blank tokens are ok (from a trailing \\t).\n        // Anything else is an error.\n        if (tokens[x]) {\n          throw new Error('Invalid diff operation in diff_fromDelta: ' +\n                          tokens[x]);\n        }\n    }\n  }\n  if (pointer != text1.length) {\n    throw new Error('Delta length (' + pointer +\n        ') does not equal source text length (' + text1.length + ').');\n  }\n  return diffs;\n};\n\n\n//  MATCH FUNCTIONS\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc'.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n */\ndiff_match_patch.prototype.match_main = function(text, pattern, loc) {\n  // Check for null inputs.\n  if (text == null || pattern == null || loc == null) {\n    throw new Error('Null input. (match_main)');\n  }\n\n  loc = Math.max(0, Math.min(loc, text.length));\n  if (text == pattern) {\n    // Shortcut (potentially not guaranteed by the algorithm)\n    return 0;\n  } else if (!text.length) {\n    // Nothing to match.\n    return -1;\n  } else if (text.substring(loc, loc + pattern.length) == pattern) {\n    // Perfect match at the perfect spot!  (Includes case of null pattern)\n    return loc;\n  } else {\n    // Do a fuzzy compare.\n    return this.match_bitap_(text, pattern, loc);\n  }\n};\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc' using the\n * Bitap algorithm.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n * @private\n */\ndiff_match_patch.prototype.match_bitap_ = function(text, pattern, loc) {\n  if (pattern.length > this.Match_MaxBits) {\n    throw new Error('Pattern too long for this browser.');\n  }\n\n  // Initialise the alphabet.\n  var s = this.match_alphabet_(pattern);\n\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Compute and return the score for a match with e errors and x location.\n   * Accesses loc and pattern through being a closure.\n   * @param {number} e Number of errors in match.\n   * @param {number} x Location of match.\n   * @return {number} Overall score for match (0.0 = good, 1.0 = bad).\n   * @private\n   */\n  function match_bitapScore_(e, x) {\n    var accuracy = e / pattern.length;\n    var proximity = Math.abs(loc - x);\n    if (!dmp.Match_Distance) {\n      // Dodge divide by zero error.\n      return proximity ? 1.0 : accuracy;\n    }\n    return accuracy + (proximity / dmp.Match_Distance);\n  }\n\n  // Highest score beyond which we give up.\n  var score_threshold = this.Match_Threshold;\n  // Is there a nearby exact match? (speedup)\n  var best_loc = text.indexOf(pattern, loc);\n  if (best_loc != -1) {\n    score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    // What about in the other direction? (speedup)\n    best_loc = text.lastIndexOf(pattern, loc + pattern.length);\n    if (best_loc != -1) {\n      score_threshold =\n          Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    }\n  }\n\n  // Initialise the bit arrays.\n  var matchmask = 1 << (pattern.length - 1);\n  best_loc = -1;\n\n  var bin_min, bin_mid;\n  var bin_max = pattern.length + text.length;\n  var last_rd;\n  for (var d = 0; d < pattern.length; d++) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from 'loc' we can stray at this\n    // error level.\n    bin_min = 0;\n    bin_mid = bin_max;\n    while (bin_min < bin_mid) {\n      if (match_bitapScore_(d, loc + bin_mid) <= score_threshold) {\n        bin_min = bin_mid;\n      } else {\n        bin_max = bin_mid;\n      }\n      bin_mid = Math.floor((bin_max - bin_min) / 2 + bin_min);\n    }\n    // Use the result from this iteration as the maximum for the next.\n    bin_max = bin_mid;\n    var start = Math.max(1, loc - bin_mid + 1);\n    var finish = Math.min(loc + bin_mid, text.length) + pattern.length;\n\n    var rd = Array(finish + 2);\n    rd[finish + 1] = (1 << d) - 1;\n    for (var j = finish; j >= start; j--) {\n      // The alphabet (s) is a sparse hash, so the following line generates\n      // warnings.\n      var charMatch = s[text.charAt(j - 1)];\n      if (d === 0) {  // First pass: exact match.\n        rd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\n      } else {  // Subsequent passes: fuzzy match.\n        rd[j] = (((rd[j + 1] << 1) | 1) & charMatch) |\n                (((last_rd[j + 1] | last_rd[j]) << 1) | 1) |\n                last_rd[j + 1];\n      }\n      if (rd[j] & matchmask) {\n        var score = match_bitapScore_(d, j - 1);\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (score <= score_threshold) {\n          // Told you so.\n          score_threshold = score;\n          best_loc = j - 1;\n          if (best_loc > loc) {\n            // When passing loc, don't exceed our current distance from loc.\n            start = Math.max(1, 2 * loc - best_loc);\n          } else {\n            // Already passed loc, downhill from here on in.\n            break;\n          }\n        }\n      }\n    }\n    // No hope for a (better) match at greater error levels.\n    if (match_bitapScore_(d + 1, loc) > score_threshold) {\n      break;\n    }\n    last_rd = rd;\n  }\n  return best_loc;\n};\n\n\n/**\n * Initialise the alphabet for the Bitap algorithm.\n * @param {string} pattern The text to encode.\n * @return {!Object} Hash of character locations.\n * @private\n */\ndiff_match_patch.prototype.match_alphabet_ = function(pattern) {\n  var s = {};\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] = 0;\n  }\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] |= 1 << (pattern.length - i - 1);\n  }\n  return s;\n};\n\n\n//  PATCH FUNCTIONS\n\n\n/**\n * Increase the context until it is unique,\n * but don't let the pattern expand beyond Match_MaxBits.\n * @param {!diff_match_patch.patch_obj} patch The patch to grow.\n * @param {string} text Source text.\n * @private\n */\ndiff_match_patch.prototype.patch_addContext_ = function(patch, text) {\n  if (text.length == 0) {\n    return;\n  }\n  var pattern = text.substring(patch.start2, patch.start2 + patch.length1);\n  var padding = 0;\n\n  // Look for the first and last matches of pattern in text.  If two different\n  // matches are found, increase the pattern length.\n  while (text.indexOf(pattern) != text.lastIndexOf(pattern) &&\n         pattern.length < this.Match_MaxBits - this.Patch_Margin -\n         this.Patch_Margin) {\n    padding += this.Patch_Margin;\n    pattern = text.substring(patch.start2 - padding,\n                             patch.start2 + patch.length1 + padding);\n  }\n  // Add one chunk for good luck.\n  padding += this.Patch_Margin;\n\n  // Add the prefix.\n  var prefix = text.substring(patch.start2 - padding, patch.start2);\n  if (prefix) {\n    patch.diffs.unshift([DIFF_EQUAL, prefix]);\n  }\n  // Add the suffix.\n  var suffix = text.substring(patch.start2 + patch.length1,\n                              patch.start2 + patch.length1 + padding);\n  if (suffix) {\n    patch.diffs.push([DIFF_EQUAL, suffix]);\n  }\n\n  // Roll back the start points.\n  patch.start1 -= prefix.length;\n  patch.start2 -= prefix.length;\n  // Extend the lengths.\n  patch.length1 += prefix.length + suffix.length;\n  patch.length2 += prefix.length + suffix.length;\n};\n\n\n/**\n * Compute a list of patches to turn text1 into text2.\n * Use diffs if provided, otherwise compute it ourselves.\n * There are four ways to call this function, depending on what data is\n * available to the caller:\n * Method 1:\n * a = text1, b = text2\n * Method 2:\n * a = diffs\n * Method 3 (optimal):\n * a = text1, b = diffs\n * Method 4 (deprecated, use method 3):\n * a = text1, b = text2, c = diffs\n *\n * @param {string|!Array.<!diff_match_patch.Diff>} a text1 (methods 1,3,4) or\n * Array of diff tuples for text1 to text2 (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>} opt_b text2 (methods 1,4) or\n * Array of diff tuples for text1 to text2 (method 3) or undefined (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>} opt_c Array of diff tuples\n * for text1 to text2 (method 4) or undefined (methods 1,2,3).\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_make = function(a, opt_b, opt_c) {\n  var text1, diffs;\n  if (typeof a == 'string' && typeof opt_b == 'string' &&\n      typeof opt_c == 'undefined') {\n    // Method 1: text1, text2\n    // Compute diffs from text1 and text2.\n    text1 = /** @type {string} */(a);\n    diffs = this.diff_main(text1, /** @type {string} */(opt_b), true);\n    if (diffs.length > 2) {\n      this.diff_cleanupSemantic(diffs);\n      this.diff_cleanupEfficiency(diffs);\n    }\n  } else if (a && typeof a == 'object' && typeof opt_b == 'undefined' &&\n      typeof opt_c == 'undefined') {\n    // Method 2: diffs\n    // Compute text1 from diffs.\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(a);\n    text1 = this.diff_text1(diffs);\n  } else if (typeof a == 'string' && opt_b && typeof opt_b == 'object' &&\n      typeof opt_c == 'undefined') {\n    // Method 3: text1, diffs\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_b);\n  } else if (typeof a == 'string' && typeof opt_b == 'string' &&\n      opt_c && typeof opt_c == 'object') {\n    // Method 4: text1, text2, diffs\n    // text2 is not used.\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_c);\n  } else {\n    throw new Error('Unknown call format to patch_make.');\n  }\n\n  if (diffs.length === 0) {\n    return [];  // Get rid of the null case.\n  }\n  var patches = [];\n  var patch = new diff_match_patch.patch_obj();\n  var patchDiffLength = 0;  // Keeping our own length var is faster in JS.\n  var char_count1 = 0;  // Number of characters into the text1 string.\n  var char_count2 = 0;  // Number of characters into the text2 string.\n  // Start with text1 (prepatch_text) and apply the diffs until we arrive at\n  // text2 (postpatch_text).  We recreate the patches one by one to determine\n  // context info.\n  var prepatch_text = text1;\n  var postpatch_text = text1;\n  for (var x = 0; x < diffs.length; x++) {\n    var diff_type = diffs[x][0];\n    var diff_text = diffs[x][1];\n\n    if (!patchDiffLength && diff_type !== DIFF_EQUAL) {\n      // A new patch starts here.\n      patch.start1 = char_count1;\n      patch.start2 = char_count2;\n    }\n\n    switch (diff_type) {\n      case DIFF_INSERT:\n        patch.diffs[patchDiffLength++] = diffs[x];\n        patch.length2 += diff_text.length;\n        postpatch_text = postpatch_text.substring(0, char_count2) + diff_text +\n                         postpatch_text.substring(char_count2);\n        break;\n      case DIFF_DELETE:\n        patch.length1 += diff_text.length;\n        patch.diffs[patchDiffLength++] = diffs[x];\n        postpatch_text = postpatch_text.substring(0, char_count2) +\n                         postpatch_text.substring(char_count2 +\n                             diff_text.length);\n        break;\n      case DIFF_EQUAL:\n        if (diff_text.length <= 2 * this.Patch_Margin &&\n            patchDiffLength && diffs.length != x + 1) {\n          // Small equality inside a patch.\n          patch.diffs[patchDiffLength++] = diffs[x];\n          patch.length1 += diff_text.length;\n          patch.length2 += diff_text.length;\n        } else if (diff_text.length >= 2 * this.Patch_Margin) {\n          // Time for a new patch.\n          if (patchDiffLength) {\n            this.patch_addContext_(patch, prepatch_text);\n            patches.push(patch);\n            patch = new diff_match_patch.patch_obj();\n            patchDiffLength = 0;\n            // Unlike Unidiff, our patch lists have a rolling context.\n            // http://code.google.com/p/google-diff-match-patch/wiki/Unidiff\n            // Update prepatch text & pos to reflect the application of the\n            // just completed patch.\n            prepatch_text = postpatch_text;\n            char_count1 = char_count2;\n          }\n        }\n        break;\n    }\n\n    // Update the current character count.\n    if (diff_type !== DIFF_INSERT) {\n      char_count1 += diff_text.length;\n    }\n    if (diff_type !== DIFF_DELETE) {\n      char_count2 += diff_text.length;\n    }\n  }\n  // Pick up the leftover patch if not empty.\n  if (patchDiffLength) {\n    this.patch_addContext_(patch, prepatch_text);\n    patches.push(patch);\n  }\n\n  return patches;\n};\n\n\n/**\n * Given an array of patches, return another array that is identical.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_deepCopy = function(patches) {\n  // Making deep copies is hard in JavaScript.\n  var patchesCopy = [];\n  for (var x = 0; x < patches.length; x++) {\n    var patch = patches[x];\n    var patchCopy = new diff_match_patch.patch_obj();\n    patchCopy.diffs = [];\n    for (var y = 0; y < patch.diffs.length; y++) {\n      patchCopy.diffs[y] = patch.diffs[y].slice();\n    }\n    patchCopy.start1 = patch.start1;\n    patchCopy.start2 = patch.start2;\n    patchCopy.length1 = patch.length1;\n    patchCopy.length2 = patch.length2;\n    patchesCopy[x] = patchCopy;\n  }\n  return patchesCopy;\n};\n\n\n/**\n * Merge a set of patches onto the text.  Return a patched text, as well\n * as a list of true/false values indicating which patches were applied.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @param {string} text Old text.\n * @return {!Array.<string|!Array.<boolean>>} Two element Array, containing the\n *      new text and an array of boolean values.\n */\ndiff_match_patch.prototype.patch_apply = function(patches, text) {\n  if (patches.length == 0) {\n    return [text, []];\n  }\n\n  // Deep copy the patches so that no changes are made to originals.\n  patches = this.patch_deepCopy(patches);\n\n  var nullPadding = this.patch_addPadding(patches);\n  text = nullPadding + text + nullPadding;\n\n  this.patch_splitMax(patches);\n  // delta keeps track of the offset between the expected and actual location\n  // of the previous patch.  If there are patches expected at positions 10 and\n  // 20, but the first patch was found at 12, delta is 2 and the second patch\n  // has an effective expected position of 22.\n  var delta = 0;\n  var results = [];\n  for (var x = 0; x < patches.length; x++) {\n    var expected_loc = patches[x].start2 + delta;\n    var text1 = this.diff_text1(patches[x].diffs);\n    var start_loc;\n    var end_loc = -1;\n    if (text1.length > this.Match_MaxBits) {\n      // patch_splitMax will only provide an oversized pattern in the case of\n      // a monster delete.\n      start_loc = this.match_main(text, text1.substring(0, this.Match_MaxBits),\n                                  expected_loc);\n      if (start_loc != -1) {\n        end_loc = this.match_main(text,\n            text1.substring(text1.length - this.Match_MaxBits),\n            expected_loc + text1.length - this.Match_MaxBits);\n        if (end_loc == -1 || start_loc >= end_loc) {\n          // Can't find valid trailing context.  Drop this patch.\n          start_loc = -1;\n        }\n      }\n    } else {\n      start_loc = this.match_main(text, text1, expected_loc);\n    }\n    if (start_loc == -1) {\n      // No match found.  :(\n      results[x] = false;\n      // Subtract the delta for this failed patch from subsequent patches.\n      delta -= patches[x].length2 - patches[x].length1;\n    } else {\n      // Found a match.  :)\n      results[x] = true;\n      delta = start_loc - expected_loc;\n      var text2;\n      if (end_loc == -1) {\n        text2 = text.substring(start_loc, start_loc + text1.length);\n      } else {\n        text2 = text.substring(start_loc, end_loc + this.Match_MaxBits);\n      }\n      if (text1 == text2) {\n        // Perfect match, just shove the replacement text in.\n        text = text.substring(0, start_loc) +\n               this.diff_text2(patches[x].diffs) +\n               text.substring(start_loc + text1.length);\n      } else {\n        // Imperfect match.  Run a diff to get a framework of equivalent\n        // indices.\n        var diffs = this.diff_main(text1, text2, false);\n        if (text1.length > this.Match_MaxBits &&\n            this.diff_levenshtein(diffs) / text1.length >\n            this.Patch_DeleteThreshold) {\n          // The end points match, but the content is unacceptably bad.\n          results[x] = false;\n        } else {\n          this.diff_cleanupSemanticLossless(diffs);\n          var index1 = 0;\n          var index2;\n          for (var y = 0; y < patches[x].diffs.length; y++) {\n            var mod = patches[x].diffs[y];\n            if (mod[0] !== DIFF_EQUAL) {\n              index2 = this.diff_xIndex(diffs, index1);\n            }\n            if (mod[0] === DIFF_INSERT) {  // Insertion\n              text = text.substring(0, start_loc + index2) + mod[1] +\n                     text.substring(start_loc + index2);\n            } else if (mod[0] === DIFF_DELETE) {  // Deletion\n              text = text.substring(0, start_loc + index2) +\n                     text.substring(start_loc + this.diff_xIndex(diffs,\n                         index1 + mod[1].length));\n            }\n            if (mod[0] !== DIFF_DELETE) {\n              index1 += mod[1].length;\n            }\n          }\n        }\n      }\n    }\n  }\n  // Strip the padding off.\n  text = text.substring(nullPadding.length, text.length - nullPadding.length);\n  return [text, results];\n};\n\n\n/**\n * Add some padding on text start and end so that edges can match something.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} The padding string added to each side.\n */\ndiff_match_patch.prototype.patch_addPadding = function(patches) {\n  var paddingLength = this.Patch_Margin;\n  var nullPadding = '';\n  for (var x = 1; x <= paddingLength; x++) {\n    nullPadding += String.fromCharCode(x);\n  }\n\n  // Bump all the patches forward.\n  for (var x = 0; x < patches.length; x++) {\n    patches[x].start1 += paddingLength;\n    patches[x].start2 += paddingLength;\n  }\n\n  // Add some padding on start of first diff.\n  var patch = patches[0];\n  var diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[0][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.unshift([DIFF_EQUAL, nullPadding]);\n    patch.start1 -= paddingLength;  // Should be 0.\n    patch.start2 -= paddingLength;  // Should be 0.\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[0][1].length) {\n    // Grow first equality.\n    var extraLength = paddingLength - diffs[0][1].length;\n    diffs[0][1] = nullPadding.substring(diffs[0][1].length) + diffs[0][1];\n    patch.start1 -= extraLength;\n    patch.start2 -= extraLength;\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  // Add some padding on end of last diff.\n  patch = patches[patches.length - 1];\n  diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[diffs.length - 1][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.push([DIFF_EQUAL, nullPadding]);\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[diffs.length - 1][1].length) {\n    // Grow last equality.\n    var extraLength = paddingLength - diffs[diffs.length - 1][1].length;\n    diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength);\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  return nullPadding;\n};\n\n\n/**\n * Look through the patches and break up any which are longer than the maximum\n * limit of the match algorithm.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_splitMax = function(patches) {\n  var patch_size = this.Match_MaxBits;\n  for (var x = 0; x < patches.length; x++) {\n    if (patches[x].length1 <= patch_size) {\n      continue;\n    }\n    var bigpatch = patches[x];\n    // Remove the big old patch.\n    patches.splice(x--, 1);\n    var start1 = bigpatch.start1;\n    var start2 = bigpatch.start2;\n    var precontext = '';\n    while (bigpatch.diffs.length !== 0) {\n      // Create one of several smaller patches.\n      var patch = new diff_match_patch.patch_obj();\n      var empty = true;\n      patch.start1 = start1 - precontext.length;\n      patch.start2 = start2 - precontext.length;\n      if (precontext !== '') {\n        patch.length1 = patch.length2 = precontext.length;\n        patch.diffs.push([DIFF_EQUAL, precontext]);\n      }\n      while (bigpatch.diffs.length !== 0 &&\n             patch.length1 < patch_size - this.Patch_Margin) {\n        var diff_type = bigpatch.diffs[0][0];\n        var diff_text = bigpatch.diffs[0][1];\n        if (diff_type === DIFF_INSERT) {\n          // Insertions are harmless.\n          patch.length2 += diff_text.length;\n          start2 += diff_text.length;\n          patch.diffs.push(bigpatch.diffs.shift());\n          empty = false;\n        } else if (diff_type === DIFF_DELETE && patch.diffs.length == 1 &&\n                   patch.diffs[0][0] == DIFF_EQUAL &&\n                   diff_text.length > 2 * patch_size) {\n          // This is a large deletion.  Let it pass in one chunk.\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n          empty = false;\n          patch.diffs.push([diff_type, diff_text]);\n          bigpatch.diffs.shift();\n        } else {\n          // Deletion or equality.  Only take as much as we can stomach.\n          diff_text = diff_text.substring(0,\n              patch_size - patch.length1 - this.Patch_Margin);\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n          if (diff_type === DIFF_EQUAL) {\n            patch.length2 += diff_text.length;\n            start2 += diff_text.length;\n          } else {\n            empty = false;\n          }\n          patch.diffs.push([diff_type, diff_text]);\n          if (diff_text == bigpatch.diffs[0][1]) {\n            bigpatch.diffs.shift();\n          } else {\n            bigpatch.diffs[0][1] =\n                bigpatch.diffs[0][1].substring(diff_text.length);\n          }\n        }\n      }\n      // Compute the head context for the next patch.\n      precontext = this.diff_text2(patch.diffs);\n      precontext =\n          precontext.substring(precontext.length - this.Patch_Margin);\n      // Append the end context for this patch.\n      var postcontext = this.diff_text1(bigpatch.diffs)\n                            .substring(0, this.Patch_Margin);\n      if (postcontext !== '') {\n        patch.length1 += postcontext.length;\n        patch.length2 += postcontext.length;\n        if (patch.diffs.length !== 0 &&\n            patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL) {\n          patch.diffs[patch.diffs.length - 1][1] += postcontext;\n        } else {\n          patch.diffs.push([DIFF_EQUAL, postcontext]);\n        }\n      }\n      if (!empty) {\n        patches.splice(++x, 0, patch);\n      }\n    }\n  }\n};\n\n\n/**\n * Take a list of patches and return a textual representation.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} Text representation of patches.\n */\ndiff_match_patch.prototype.patch_toText = function(patches) {\n  var text = [];\n  for (var x = 0; x < patches.length; x++) {\n    text[x] = patches[x];\n  }\n  return text.join('');\n};\n\n\n/**\n * Parse a textual representation of patches and return a list of Patch objects.\n * @param {string} textline Text representation of patches.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.patch_fromText = function(textline) {\n  var patches = [];\n  if (!textline) {\n    return patches;\n  }\n  var text = textline.split('\\n');\n  var textPointer = 0;\n  var patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/;\n  while (textPointer < text.length) {\n    var m = text[textPointer].match(patchHeader);\n    if (!m) {\n      throw new Error('Invalid patch string: ' + text[textPointer]);\n    }\n    var patch = new diff_match_patch.patch_obj();\n    patches.push(patch);\n    patch.start1 = parseInt(m[1], 10);\n    if (m[2] === '') {\n      patch.start1--;\n      patch.length1 = 1;\n    } else if (m[2] == '0') {\n      patch.length1 = 0;\n    } else {\n      patch.start1--;\n      patch.length1 = parseInt(m[2], 10);\n    }\n\n    patch.start2 = parseInt(m[3], 10);\n    if (m[4] === '') {\n      patch.start2--;\n      patch.length2 = 1;\n    } else if (m[4] == '0') {\n      patch.length2 = 0;\n    } else {\n      patch.start2--;\n      patch.length2 = parseInt(m[4], 10);\n    }\n    textPointer++;\n\n    while (textPointer < text.length) {\n      var sign = text[textPointer].charAt(0);\n      try {\n        var line = decodeURI(text[textPointer].substring(1));\n      } catch (ex) {\n        // Malformed URI sequence.\n        throw new Error('Illegal escape in patch_fromText: ' + line);\n      }\n      if (sign == '-') {\n        // Deletion.\n        patch.diffs.push([DIFF_DELETE, line]);\n      } else if (sign == '+') {\n        // Insertion.\n        patch.diffs.push([DIFF_INSERT, line]);\n      } else if (sign == ' ') {\n        // Minor equality.\n        patch.diffs.push([DIFF_EQUAL, line]);\n      } else if (sign == '@') {\n        // Start of next patch.\n        break;\n      } else if (sign === '') {\n        // Blank line?  Whatever.\n      } else {\n        // WTF?\n        throw new Error('Invalid patch mode \"' + sign + '\" in: ' + line);\n      }\n      textPointer++;\n    }\n  }\n  return patches;\n};\n\n\n/**\n * Class representing one patch operation.\n * @constructor\n */\ndiff_match_patch.patch_obj = function() {\n  /** @type {!Array.<!diff_match_patch.Diff>} */\n  this.diffs = [];\n  /** @type {?number} */\n  this.start1 = null;\n  /** @type {?number} */\n  this.start2 = null;\n  /** @type {number} */\n  this.length1 = 0;\n  /** @type {number} */\n  this.length2 = 0;\n};\n\n\n/**\n * Emmulate GNU diff's format.\n * Header: @@ -382,8 +481,9 @@\n * Indicies are printed as 1-based, not 0-based.\n * @return {string} The GNU diff string.\n */\ndiff_match_patch.patch_obj.prototype.toString = function() {\n  var coords1, coords2;\n  if (this.length1 === 0) {\n    coords1 = this.start1 + ',0';\n  } else if (this.length1 == 1) {\n    coords1 = this.start1 + 1;\n  } else {\n    coords1 = (this.start1 + 1) + ',' + this.length1;\n  }\n  if (this.length2 === 0) {\n    coords2 = this.start2 + ',0';\n  } else if (this.length2 == 1) {\n    coords2 = this.start2 + 1;\n  } else {\n    coords2 = (this.start2 + 1) + ',' + this.length2;\n  }\n  var text = ['@@ -' + coords1 + ' +' + coords2 + ' @@\\n'];\n  var op;\n  // Escape the body of the patch with %xx notation.\n  for (var x = 0; x < this.diffs.length; x++) {\n    switch (this.diffs[x][0]) {\n      case DIFF_INSERT:\n        op = '+';\n        break;\n      case DIFF_DELETE:\n        op = '-';\n        break;\n      case DIFF_EQUAL:\n        op = ' ';\n        break;\n    }\n    text[x + 1] = op + encodeURI(this.diffs[x][1]) + '\\n';\n  }\n  return text.join('').replace(/%20/g, ' ');\n};\n\n\n// The following export code was added by @ForbesLindesay\nmodule.exports = diff_match_patch;\nmodule.exports['diff_match_patch'] = diff_match_patch;\nmodule.exports['DIFF_DELETE'] = DIFF_DELETE;\nmodule.exports['DIFF_INSERT'] = DIFF_INSERT;\nmodule.exports['DIFF_EQUAL'] = DIFF_EQUAL;","export default \"<div class=\\\"td-loading-roller\\\" *ngIf=\\\"active\\\">\\r\\n    <div></div>\\r\\n    <div></div>\\r\\n    <div></div>\\r\\n    <div></div>\\r\\n    <div></div>\\r\\n    <div></div>\\r\\n    <div></div>\\r\\n    <div></div>\\r\\n  </div>\\r\\n  \"","export default \"<td-loader-spinner [active]=\\\"loading\\\"></td-loader-spinner>\\r\\n<div class=\\\"td-wrapper\\\" [ngClass]=\\\"outerContainerClass\\\" [ngStyle]=\\\"outerContainerStyle\\\" *ngIf=\\\"!loading\\\">\\r\\n\\r\\n  <div [ngClass]=\\\"toolbarClass\\\" [ngStyle]=\\\"toolbarStyle\\\" *ngIf=\\\"showToolbar\\\">\\r\\n    <div class=\\\"td-toolbar-show-diff\\\">\\r\\n      <label class=\\\"td-checkbox-container\\\">\\r\\n        Only Show Lines with Differences ({{ diffsCount }})\\r\\n        <input type=\\\"checkbox\\\" id=\\\"showDiffs\\\" [ngModel]=\\\"hideMatchingLines\\\" (ngModelChange)=\\\"hideMatchingLinesChanged($event)\\\" />\\r\\n        <span class=\\\"checkmark\\\"></span>\\r\\n      </label>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"td-toolbar-select-format\\\" *ngIf=\\\"showToolbar && showBtnToolbar\\\">\\r\\n    <div class=\\\"td-btn-group td-btn-group-toggle\\\" data-toggle=\\\"buttons\\\">\\r\\n      <button\\r\\n        *ngFor=\\\"let option of formatOptions\\\"\\r\\n        [ngClass]=\\\"{ active: format === option.value, disabled: !!option.disabled }\\\"\\r\\n        [name]=\\\"option.name\\\"\\r\\n        [id]=\\\"option.id\\\"\\r\\n        [disabled]=\\\"!!option.disabled\\\"\\r\\n        (click)=\\\"setDiffTableFormat(option.value)\\\"\\r\\n      >\\r\\n        {{ option.label }}\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"td-table-wrapper\\\" [ngClass]=\\\"compareRowsClass\\\" [ngStyle]=\\\"compareRowsStyle\\\">\\r\\n    <!-- Right side-by-side -->\\r\\n    <div class=\\\"td-table-container side-by-side\\\" *ngIf=\\\"format === 'SideBySide'\\\" id=\\\"td-left-compare-container\\\" tdContainer cdkScrollable>\\r\\n      <table class=\\\"td-table\\\">\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let row of filteredTableRows; trackBy: trackTableRows\\\">\\r\\n            <td\\r\\n              scope=\\\"row\\\"\\r\\n              class=\\\"fit-column line-number-col\\\"\\r\\n              [ngClass]=\\\"{ 'delete-row': row.leftContent?.prefix === '-', 'empty-row': !row.leftContent?.lineContent }\\\"\\r\\n            >\\r\\n              {{ row.leftContent?.lineNumber !== -1 ? row.leftContent?.lineNumber : ' ' }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"fit-column prefix-col\\\"\\r\\n              [ngClass]=\\\"{ 'delete-row': row.leftContent?.prefix === '-', 'empty-row': !row.leftContent?.lineContent }\\\"\\r\\n            >\\r\\n              <span>{{ row.leftContent?.prefix || ' ' }}</span>\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"content-col\\\"\\r\\n              [ngClass]=\\\"{ 'delete-row': row.leftContent?.prefix === '-', 'empty-row': !row.leftContent?.lineContent }\\\"\\r\\n              *ngIf=\\\"!row.hasDiffs\\\"\\r\\n            >\\r\\n              <span [innerHTML]=\\\"row.leftContent?.lineContent | formatLine\\\"></span>\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"content-col\\\"\\r\\n              [ngClass]=\\\"{ 'delete-row': row.leftContent?.prefix === '-', 'empty-row': !row.leftContent?.lineContent }\\\"\\r\\n              *ngIf=\\\"row.hasDiffs\\\"\\r\\n            >\\r\\n              <span\\r\\n                [innerHTML]=\\\"diff.content | formatLine\\\"\\r\\n                [ngClass]=\\\"{ highlight: diff.isDiff }\\\"\\r\\n                *ngFor=\\\"let diff of row.leftContent?.lineDiffs; trackBy: trackDiffs\\\"\\r\\n              ></span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <!-- Left side-by-side -->\\r\\n    <div class=\\\"td-table-container side-by-side\\\" *ngIf=\\\"format === 'SideBySide'\\\" id=\\\"td-right-compare-container\\\" tdContainer cdkScrollable>\\r\\n      <table class=\\\"td-table\\\">\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let row of filteredTableRows; trackBy: trackTableRows\\\">\\r\\n            <td\\r\\n              scope=\\\"row\\\"\\r\\n              class=\\\"fit-column line-number-col\\\"\\r\\n              [ngClass]=\\\"{ 'insert-row': row.rightContent?.prefix === '+', 'empty-row': !row.rightContent?.lineContent }\\\"\\r\\n            >\\r\\n              {{ row.rightContent?.lineNumber !== -1 ? row.rightContent?.lineNumber : ' ' }}\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"fit-column prefix-col\\\"\\r\\n              [ngClass]=\\\"{ 'insert-row': row.rightContent?.prefix === '+', 'empty-row': !row.rightContent?.lineContent }\\\"\\r\\n            >\\r\\n              <span>{{ row.rightContent?.prefix || ' ' }}</span>\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"content-col\\\"\\r\\n              [ngClass]=\\\"{ 'insert-row': row.rightContent?.prefix === '+', 'empty-row': !row.rightContent?.lineContent }\\\"\\r\\n              *ngIf=\\\"!row.hasDiffs\\\"\\r\\n            >\\r\\n              <span [innerHTML]=\\\"row.rightContent?.lineContent | formatLine\\\"></span>\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"content-col\\\"\\r\\n              [ngClass]=\\\"{ 'insert-row': row.rightContent?.prefix === '+', 'empty-row': !row.rightContent?.lineContent }\\\"\\r\\n              *ngIf=\\\"row.hasDiffs\\\"\\r\\n            >\\r\\n              <span\\r\\n                [innerHTML]=\\\"diff.content | formatLine\\\"\\r\\n                [ngClass]=\\\"{ highlight: diff.isDiff }\\\"\\r\\n                *ngFor=\\\"let diff of row.rightContent?.lineDiffs; trackBy: trackDiffs\\\"\\r\\n              ></span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <!-- Line By Line - combined table -->\\r\\n    <div class=\\\"td-table-container line-by-line\\\" *ngIf=\\\"format === 'LineByLine'\\\">\\r\\n      <table class=\\\"td-table\\\">\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let row of filteredTableRowsLineByLine; trackBy: trackTableRows\\\">\\r\\n            <td scope=\\\"row\\\" class=\\\"fit-column line-number-col-left\\\">{{ row.leftContent?.lineNumber }}</td>\\r\\n            <td scope=\\\"row\\\" class=\\\"fit-column line-number-col\\\">{{ row.rightContent?.lineNumber }}</td>\\r\\n            <td\\r\\n              class=\\\"fit-column prefix-col\\\"\\r\\n              [ngClass]=\\\"{ 'delete-row': row.leftContent?.prefix === '-', 'insert-row': row.rightContent?.prefix === '+' }\\\"\\r\\n            >\\r\\n              <span>{{ row.leftContent?.prefix || row.rightContent?.prefix || ' ' }}</span>\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"content-col\\\"\\r\\n              [ngClass]=\\\"{ 'delete-row': row.leftContent?.prefix === '-', 'insert-row': row.rightContent?.prefix === '+' }\\\"\\r\\n              *ngIf=\\\"!row.hasDiffs\\\"\\r\\n            >\\r\\n              <span [innerHTML]=\\\"row.leftContent?.lineContent | formatLine\\\"></span>\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"content-col\\\"\\r\\n              [ngClass]=\\\"{ 'delete-row': row.leftContent?.prefix === '-', 'insert-row': row.rightContent?.prefix === '+' }\\\"\\r\\n              *ngIf=\\\"row.hasDiffs && row.leftContent && row.leftContent?.lineDiffs.length !== 0\\\"\\r\\n            >\\r\\n              <span\\r\\n                [innerHTML]=\\\"diff.content | formatLine\\\"\\r\\n                [ngClass]=\\\"{ highlight: diff.isDiff }\\\"\\r\\n                *ngFor=\\\"let diff of row.leftContent?.lineDiffs; trackBy: trackDiffs\\\"\\r\\n              ></span>\\r\\n            </td>\\r\\n            <td\\r\\n              class=\\\"content-col\\\"\\r\\n              [ngClass]=\\\"{ 'delete-row': row.leftContent?.prefix === '-', 'insert-row': row.rightContent?.prefix === '+' }\\\"\\r\\n              *ngIf=\\\"row.hasDiffs && row.rightContent && row.rightContent?.lineDiffs.length !== 0\\\"\\r\\n            >\\r\\n              <span\\r\\n                [innerHTML]=\\\"diff.content | formatLine\\\"\\r\\n                [ngClass]=\\\"{ highlight: diff.isDiff }\\\"\\r\\n                *ngFor=\\\"let diff of row.rightContent?.lineDiffs; trackBy: trackDiffs\\\"\\r\\n              ></span>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<!-- <div class=\\\"container-fluid\\\">\\n  <header>\\n    <div class=\\\"container\\\">\\n      <h1>NGX Text Diffs</h1>\\n    </div>\\n  </header>\\n  <div class=\\\"main-content\\\">\\n    <div class=\\\"container\\\">\\n      <form>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"leftContent\\\" class=\\\"font-weight-bold\\\">Left Content:</label>\\n            <tda-code-editor\\n              [options]=\\\"options\\\"\\n              [ngModel]=\\\"content.leftContent\\\"\\n              [name]=\\\"'leftContent'\\\"\\n              [autoFocus]=\\\"true\\\"\\n              (ngModelChange)=\\\"handleChange('left',$event)\\\"\\n            ></tda-code-editor>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"rightContent\\\" class=\\\"font-weight-bold\\\">Right Content:</label>\\n            <tda-code-editor\\n              [options]=\\\"options\\\"\\n              [ngModel]=\\\"content.rightContent\\\"\\n              [name]=\\\"'rightContent'\\\"\\n              [autoFocus]=\\\"false\\\"\\n              (ngModelChange)=\\\"handleChange('right',$event)\\\"\\n            ></tda-code-editor>\\n          </div>\\n        </div>\\n        <button type=\\\"submit\\\" (click)=\\\"submitComparison()\\\" class=\\\"btn btn-primary\\\">Compare</button>\\n      </form>\\n      <div *ngIf=\\\"submitted\\\">\\n        <td-ngx-text-diff\\n          [left]=\\\"content.leftContent\\\"\\n          [right]=\\\"content.rightContent\\\"\\n          [loading]=\\\"!submitted\\\"\\n          [diffContent]=\\\"contentObservable$\\\"\\n          [synchronizeScrolling]=\\\"true\\\"\\n          [compareRowsStyle]=\\\"{'max-height': '500px', 'overflow': 'auto'}\\\"\\n          (compareResults)=\\\"onCompareResults($event)\\\"\\n        >\\n        </td-ngx-text-diff>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"container-fluid\\\">\\n  <header>\\n    <div class=\\\"container\\\">\\n      <h2><b>File Compare</b></h2>\\n    </div>\\n  </header>\\n  <div class=\\\"main-content\\\">\\n    <div class=\\\"container\\\">\\n      <form>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"leftContent\\\" class=\\\"font-weight-bold\\\"> <input id=\\\"file-upload\\\" \\n              type=\\\"file\\\" \\n              accept=\\\".txt\\\" \\n              (change)=\\\"fileUpload($event)\\\">\\n              <div>\\n               <textarea rows=\\\"10\\\" cols=\\\"50\\\">{{FileText}}</textarea> -->\\n<header class=\\\"header ng-scope\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header d-flex align-items-center justify-content-between\\\">\\n      <div class=\\\"brand-logo\\\">\\n        <img src=\\\"assets/images/yantra_logo.jpg\\\">\\n      </div>\\n      <!-- <img ng-show=\\\"tenant_id == 1\\\" src=\\\"assets/images/logo_nd.jpg\\\" alt=\\\"person\\\"> -->\\n      <!-- <div class=\\\"company_name\\\"> \\n                        <h4>{{}}</h4>\\n                      </div> -->\\n    </div>\\n  </div>\\n</header>\\n\\n<!-- *ngFor=\\\"let country of countries\\\" value= {{country.id}} -->\\n<div class=\\\"container-fluid\\\">\\n  <!-- <div class=\\\"home-back\\\">\\n    <a href=\\\"https://mms2.yantra24x7.com/\\\"><span>\\n        <mat-icon class=\\\"back\\\">arrow_back</mat-icon>\\n      </span>Back</a>\\n  </div> -->\\n  <!-- <div class=\\\"col clock_all\\\">\\n    <div class=\\\"clock_top\\\">\\n      <span>Date:</span>\\n      18/09/2020\\n    </div>\\n    <div class=\\\"clock_top\\\">\\n      <span>Time:</span>\\n      7.22.33AM\\n    </div>\\n  </div> -->\\n  <div class=\\\"file-path\\\">\\n    <div class=\\\"label\\\">\\n      <label>Select Machine : </label>\\n      <select (change)=\\\"onSelect($event.target.value)\\\">\\n\\n        <option *ngFor=\\\"let machine of machinesArray\\\" [value]=\\\"machine.id\\\">{{machine.machine_name}}</option>\\n      </select>\\n    </div>\\n    <p> <span>File Path :</span> {{file_path ? file_path['file_path'] : ''}} </p>\\n  </div>\\n  <div class=\\\"page-title\\\">\\n\\n    <h2>File Compare</h2>\\n    <button type=\\\"submit\\\" (click)=\\\"submitComparison()\\\" class=\\\"upload_btn\\\" (click)=\\\"toggle()\\\" id=\\\"bt\\\"\\n      [disabled]=\\\"!file_name || !fileName1 \\\">{{buttonName}}</button>\\n  </div>\\n\\n\\n  <div class=\\\"main-content\\\">\\n\\n    <form [formGroup]=\\\"\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-6\\\">\\n          <div for=\\\"leftContent\\\" class=\\\"left_content\\\">\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"custom-file\\\">\\n                <input type=\\\"file\\\" [(ngModel)]=\\\"file_name\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                  class=\\\"custom-file-input\\\" aria-describedby=\\\"inputGroupFileAddon01\\\" id=\\\"file-upload\\\" accept=\\\".txt\\\"\\n                  (change)=\\\"fileUpload($event)\\\">\\n                <label class=\\\"custom-file-label\\\" for=\\\"inputGroupFile01\\\">{{filName || \\\"Choose file\\\"}}</label>\\n              </div>\\n            </div>\\n            <div>\\n              <!-- <textarea rows=\\\"10\\\" cols=\\\"50\\\">{{FileText}}</textarea> -->\\n            </div>\\n          </div>\\n          <!-- <tda-code-editor\\n                          [options]=\\\"options\\\"\\n                          [ngModel]=\\\"content.leftContent\\\"\\n                          [name]=\\\"'leftContent'\\\"\\n                          [autoFocus]=\\\"true\\\"\\n                          (focus)=\\\"handleChange('left',content.leftContent)\\\"\\n                          (ngModelChange)=\\\"handleChange('left',$event)\\\"\\n                        ></tda-code-editor>  -->\\n        </div>\\n        <div class=\\\"form-group col-md-6\\\">\\n          <div for=\\\"rightContent\\\" class=\\\"right_content\\\">\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"custom-file\\\">\\n                <input type=\\\"file\\\" [(ngModel)]=\\\"fileName1\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                  class=\\\"custom-file-input\\\" aria-describedby=\\\"inputGroupFileAddon01\\\" id=\\\"file-upload\\\" accept=\\\".txt\\\"\\n                  type=\\\"file\\\" (change)=\\\"fileUpload1($event)\\\">\\n                <label class=\\\"custom-file-label\\\" for=\\\"inputGroupFile01\\\">{{filName1 || \\\"Choose file\\\"}}</label>\\n              </div>\\n            </div>\\n            <div>\\n              <!-- <textarea rows=\\\"10\\\" cols=\\\"50\\\">{{filetext1}}</textarea> -->\\n            </div>\\n          </div>\\n          <!-- <tda-code-editor\\n                          [options]=\\\"options\\\"\\n                          [ngModel]=\\\"content.rightContent\\\"\\n                          [name]=\\\"'rightContent'\\\"\\n                          [autoFocus]=\\\"false\\\"\\n                          (focus)=\\\"handleChange('right',content.rightContent)\\\"\\n                          (ngModelChange)=\\\"handleChange('right',$event)\\\"\\n                        ></tda-code-editor> -->\\n\\n\\n        </div>\\n\\n      </div>\\n\\n    </form>\\n    <div class=\\\"compare_table\\\" *ngIf=\\\"submitted\\\">\\n      <td-ngx-text-diff [left]=\\\"content.leftContent\\\" [right]=\\\"content.rightContent\\\" [loading]=\\\"!submitted\\\"\\n        [diffContent]=\\\"contentObservable$\\\" [synchronizeScrolling]=\\\"true\\\"\\n        [compareRowsStyle]=\\\"{'max-height': '500px', 'overflow': 'auto'}\\\" (compareResults)=\\\"onCompareResults($event)\\\">\\n      </td-ngx-text-diff>\\n    </div>\\n  </div>\\n  <div>\\n    <form [formGroup]=\\\"login\\\" (ngSubmit)=\\\"logintest(login.value)\\\" *ngIf=\\\"Compare\\\">\\n      <div class=\\\"container mb-3\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n          <!-- <div class=\\\"input-label\\\">\\n                              <label class='home-label'>Changed By</label>\\n                              <mat-form-field>\\n                                  <input matInput formControlName=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Enter Your Name\\\" required>\\n                                  \\n                                </mat-form-field>\\n                            </div> -->\\n\\n          <!-- <div>\\n                              <label class='home-label'>Date</label>\\n                              <mat-form-field>\\n                                  <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" [(ngModel)]='date' (dateChange)='change($event)' (click)=\\\"picker.open()\\\"   [max]=\\\"maxDate\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                 <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                                 <mat-datepicker #picker></mat-datepicker>\\n                              </mat-form-field>\\n                            </div> -->\\n\\n          <!-- <div class=\\\"input-label\\\">\\n                              <label class='home-label'>Old Revision Number</label>\\n                              <mat-form-field>\\n                                  <input matInput formControlName=\\\"old_revision_no\\\" type=\\\"text\\\"  (keypress)=\\\"keyPress($event)\\\"   placeholder=\\\"Enter Your Old Revision Number\\\" required>\\n                            </mat-form-field>\\n                          </div> -->\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <!-- <div class=\\\"input-label\\\">\\n                              <label class='home-label'>New Revision Number</label>\\n                              <mat-form-field>\\n                                    <input matInput formControlName=\\\"new_revision_no\\\" (keypress)=\\\"keyPress($event)\\\"   type=\\\"text\\\" placeholder=\\\"Enter Your New Revision Number\\\" required>\\n                              </mat-form-field>\\n                            </div> -->\\n\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label>Reason</mat-label>\\n              <textarea class=\\\"base\\\" matInput formControlName=\\\"reason\\\" type=\\\"text\\\" required></textarea>\\n            </mat-form-field>\\n\\n            <div class=\\\"submit-btn\\\">\\n              <button class=\\\"btn btn-primary\\\" [disabled]=\\\"login.invalid\\\">submit</button>\\n            </div>\\n          </div>\\n\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n\\n    </form>\\n\\n\\n\\n  </div>\\n</div><br>\\n<br>\\n\\n\\n<footer class=\\\"main-footer ng-scope\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12 text-right\\\">\\n        <p>Powered by<a target=\\\"blank\\\" href=\\\"https://www.altiussolution.com\\\" class=\\\"external\\\"><img\\n              src=\\\"/assets/images/favicon.png\\\" style=\\\"height: 25px;\\\">Yantra24x7</a></p>\\n      </div>\\n    </div>\\n  </div>\\n</footer>\\n<div ng-include=\\\"'footer.html'\\\"></div>\"","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'formatLine'\r\n})\r\nexport class FormatLinePipe implements PipeTransform {\r\n  transform(line: string, diffs?: string[]): string {\r\n    if (!line) {\r\n      return ' ';\r\n    }\r\n    if (!!diffs && diffs.length > 0) {\r\n      /*diffs.forEach(diff => {\r\n        line = line.replace(diff, `<span class=\"highli\">${diff}</span>`);\r\n      });*/\r\n    }\r\n    return line\r\n      .replace(/&/g, '&amp;')\r\n      .replace(/</g, '&lt;')\r\n      .replace(/>/g, '&gt;')\r\n      .replace(/\"/g, '&quot;')\r\n      .replace(/ /g, '&nbsp;');\r\n  }\r\n}\r\n","export default \".td-loading-roller {\\r\\n    display: inline-block;\\r\\n    position: relative;\\r\\n    width: 64px;\\r\\n    height: 64px;\\r\\n  }\\r\\n  .td-loading-roller div {\\r\\n    -webkit-animation: lds-roller 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\\r\\n            animation: lds-roller 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\\r\\n    -webkit-transform-origin: 32px 32px;\\r\\n            transform-origin: 32px 32px;\\r\\n  }\\r\\n  .td-loading-roller div:after {\\r\\n    content: \\\" \\\";\\r\\n    display: block;\\r\\n    position: absolute;\\r\\n    width: 6px;\\r\\n    height: 6px;\\r\\n    border-radius: 50%;\\r\\n    background: #000;\\r\\n    margin: -3px 0 0 -3px;\\r\\n  }\\r\\n  .td-loading-roller div:nth-child(1) {\\r\\n    -webkit-animation-delay: -0.036s;\\r\\n            animation-delay: -0.036s;\\r\\n  }\\r\\n  .td-loading-roller div:nth-child(1):after {\\r\\n    top: 50px;\\r\\n    left: 50px;\\r\\n  }\\r\\n  .td-loading-roller div:nth-child(2) {\\r\\n    -webkit-animation-delay: -0.072s;\\r\\n            animation-delay: -0.072s;\\r\\n  }\\r\\n  .td-loading-roller div:nth-child(2):after {\\r\\n    top: 54px;\\r\\n    left: 45px;\\r\\n  }\\r\\n  .td-loading-roller div:nth-child(3) {\\r\\n    -webkit-animation-delay: -0.108s;\\r\\n            animation-delay: -0.108s;\\r\\n  }\\r\\n  .td-loading-roller div:nth-child(3):after {\\r\\n    top: 57px;\\r\\n    left: 39px;\\r\\n  }\\r\\n  .td-loading-roller div:nth-child(4) {\\r\\n    -webkit-animation-delay: -0.144s;\\r\\n            animation-delay: -0.144s;\\r\\n  }\\r\\n  .td-loading-roller div:nth-child(4):after {\\r\\n    top: 58px;\\r\\n    left: 32px;\\r\\n  }\\r\\n  .td-loading-roller div:nth-child(5) {\\r\\n    -webkit-animation-delay: -0.18s;\\r\\n            animation-delay: -0.18s;\\r\\n  }\\r\\n  .td-loading-roller div:nth-child(5):after {\\r\\n    top: 57px;\\r\\n    left: 25px;\\r\\n  }\\r\\n  .td-loading-roller div:nth-child(6) {\\r\\n    -webkit-animation-delay: -0.216s;\\r\\n            animation-delay: -0.216s;\\r\\n  }\\r\\n  .td-loading-roller div:nth-child(6):after {\\r\\n    top: 54px;\\r\\n    left: 19px;\\r\\n  }\\r\\n  .td-loading-roller div:nth-child(7) {\\r\\n    -webkit-animation-delay: -0.252s;\\r\\n            animation-delay: -0.252s;\\r\\n  }\\r\\n  .td-loading-roller div:nth-child(7):after {\\r\\n    top: 50px;\\r\\n    left: 14px;\\r\\n  }\\r\\n  .td-loading-roller div:nth-child(8) {\\r\\n    -webkit-animation-delay: -0.288s;\\r\\n            animation-delay: -0.288s;\\r\\n  }\\r\\n  .td-loading-roller div:nth-child(8):after {\\r\\n    top: 45px;\\r\\n    left: 10px;\\r\\n  }\\r\\n  @-webkit-keyframes lds-roller {\\r\\n    0% {\\r\\n      -webkit-transform: rotate(0deg);\\r\\n              transform: rotate(0deg);\\r\\n    }\\r\\n    100% {\\r\\n      -webkit-transform: rotate(360deg);\\r\\n              transform: rotate(360deg);\\r\\n    }\\r\\n  }\\r\\n  @keyframes lds-roller {\\r\\n    0% {\\r\\n      -webkit-transform: rotate(0deg);\\r\\n              transform: rotate(0deg);\\r\\n    }\\r\\n    100% {\\r\\n      -webkit-transform: rotate(360deg);\\r\\n              transform: rotate(360deg);\\r\\n    }\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL25neC10ZXh0LWRpZmYvc3JjL2xpYi9sb2FkZXItc3Bpbm5lci9sb2FkZXItc3Bpbm5lci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kscUJBQXFCO0lBQ3JCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtFQUNkO0VBQ0E7SUFDRSx3RUFBZ0U7WUFBaEUsZ0VBQWdFO0lBQ2hFLG1DQUEyQjtZQUEzQiwyQkFBMkI7RUFDN0I7RUFDQTtJQUNFLFlBQVk7SUFDWixjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLFVBQVU7SUFDVixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixxQkFBcUI7RUFDdkI7RUFDQTtJQUNFLGdDQUF3QjtZQUF4Qix3QkFBd0I7RUFDMUI7RUFDQTtJQUNFLFNBQVM7SUFDVCxVQUFVO0VBQ1o7RUFDQTtJQUNFLGdDQUF3QjtZQUF4Qix3QkFBd0I7RUFDMUI7RUFDQTtJQUNFLFNBQVM7SUFDVCxVQUFVO0VBQ1o7RUFDQTtJQUNFLGdDQUF3QjtZQUF4Qix3QkFBd0I7RUFDMUI7RUFDQTtJQUNFLFNBQVM7SUFDVCxVQUFVO0VBQ1o7RUFDQTtJQUNFLGdDQUF3QjtZQUF4Qix3QkFBd0I7RUFDMUI7RUFDQTtJQUNFLFNBQVM7SUFDVCxVQUFVO0VBQ1o7RUFDQTtJQUNFLCtCQUF1QjtZQUF2Qix1QkFBdUI7RUFDekI7RUFDQTtJQUNFLFNBQVM7SUFDVCxVQUFVO0VBQ1o7RUFDQTtJQUNFLGdDQUF3QjtZQUF4Qix3QkFBd0I7RUFDMUI7RUFDQTtJQUNFLFNBQVM7SUFDVCxVQUFVO0VBQ1o7RUFDQTtJQUNFLGdDQUF3QjtZQUF4Qix3QkFBd0I7RUFDMUI7RUFDQTtJQUNFLFNBQVM7SUFDVCxVQUFVO0VBQ1o7RUFDQTtJQUNFLGdDQUF3QjtZQUF4Qix3QkFBd0I7RUFDMUI7RUFDQTtJQUNFLFNBQVM7SUFDVCxVQUFVO0VBQ1o7RUFDQTtJQUNFO01BQ0UsK0JBQXVCO2NBQXZCLHVCQUF1QjtJQUN6QjtJQUNBO01BQ0UsaUNBQXlCO2NBQXpCLHlCQUF5QjtJQUMzQjtFQUNGO0VBUEE7SUFDRTtNQUNFLCtCQUF1QjtjQUF2Qix1QkFBdUI7SUFDekI7SUFDQTtNQUNFLGlDQUF5QjtjQUF6Qix5QkFBeUI7SUFDM0I7RUFDRiIsImZpbGUiOiJwcm9qZWN0cy9uZ3gtdGV4dC1kaWZmL3NyYy9saWIvbG9hZGVyLXNwaW5uZXIvbG9hZGVyLXNwaW5uZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50ZC1sb2FkaW5nLXJvbGxlciB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB3aWR0aDogNjRweDtcclxuICAgIGhlaWdodDogNjRweDtcclxuICB9XHJcbiAgLnRkLWxvYWRpbmctcm9sbGVyIGRpdiB7XHJcbiAgICBhbmltYXRpb246IGxkcy1yb2xsZXIgMS4ycyBjdWJpYy1iZXppZXIoMC41LCAwLCAwLjUsIDEpIGluZmluaXRlO1xyXG4gICAgdHJhbnNmb3JtLW9yaWdpbjogMzJweCAzMnB4O1xyXG4gIH1cclxuICAudGQtbG9hZGluZy1yb2xsZXIgZGl2OmFmdGVyIHtcclxuICAgIGNvbnRlbnQ6IFwiIFwiO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB3aWR0aDogNnB4O1xyXG4gICAgaGVpZ2h0OiA2cHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMDAwO1xyXG4gICAgbWFyZ2luOiAtM3B4IDAgMCAtM3B4O1xyXG4gIH1cclxuICAudGQtbG9hZGluZy1yb2xsZXIgZGl2Om50aC1jaGlsZCgxKSB7XHJcbiAgICBhbmltYXRpb24tZGVsYXk6IC0wLjAzNnM7XHJcbiAgfVxyXG4gIC50ZC1sb2FkaW5nLXJvbGxlciBkaXY6bnRoLWNoaWxkKDEpOmFmdGVyIHtcclxuICAgIHRvcDogNTBweDtcclxuICAgIGxlZnQ6IDUwcHg7XHJcbiAgfVxyXG4gIC50ZC1sb2FkaW5nLXJvbGxlciBkaXY6bnRoLWNoaWxkKDIpIHtcclxuICAgIGFuaW1hdGlvbi1kZWxheTogLTAuMDcycztcclxuICB9XHJcbiAgLnRkLWxvYWRpbmctcm9sbGVyIGRpdjpudGgtY2hpbGQoMik6YWZ0ZXIge1xyXG4gICAgdG9wOiA1NHB4O1xyXG4gICAgbGVmdDogNDVweDtcclxuICB9XHJcbiAgLnRkLWxvYWRpbmctcm9sbGVyIGRpdjpudGgtY2hpbGQoMykge1xyXG4gICAgYW5pbWF0aW9uLWRlbGF5OiAtMC4xMDhzO1xyXG4gIH1cclxuICAudGQtbG9hZGluZy1yb2xsZXIgZGl2Om50aC1jaGlsZCgzKTphZnRlciB7XHJcbiAgICB0b3A6IDU3cHg7XHJcbiAgICBsZWZ0OiAzOXB4O1xyXG4gIH1cclxuICAudGQtbG9hZGluZy1yb2xsZXIgZGl2Om50aC1jaGlsZCg0KSB7XHJcbiAgICBhbmltYXRpb24tZGVsYXk6IC0wLjE0NHM7XHJcbiAgfVxyXG4gIC50ZC1sb2FkaW5nLXJvbGxlciBkaXY6bnRoLWNoaWxkKDQpOmFmdGVyIHtcclxuICAgIHRvcDogNThweDtcclxuICAgIGxlZnQ6IDMycHg7XHJcbiAgfVxyXG4gIC50ZC1sb2FkaW5nLXJvbGxlciBkaXY6bnRoLWNoaWxkKDUpIHtcclxuICAgIGFuaW1hdGlvbi1kZWxheTogLTAuMThzO1xyXG4gIH1cclxuICAudGQtbG9hZGluZy1yb2xsZXIgZGl2Om50aC1jaGlsZCg1KTphZnRlciB7XHJcbiAgICB0b3A6IDU3cHg7XHJcbiAgICBsZWZ0OiAyNXB4O1xyXG4gIH1cclxuICAudGQtbG9hZGluZy1yb2xsZXIgZGl2Om50aC1jaGlsZCg2KSB7XHJcbiAgICBhbmltYXRpb24tZGVsYXk6IC0wLjIxNnM7XHJcbiAgfVxyXG4gIC50ZC1sb2FkaW5nLXJvbGxlciBkaXY6bnRoLWNoaWxkKDYpOmFmdGVyIHtcclxuICAgIHRvcDogNTRweDtcclxuICAgIGxlZnQ6IDE5cHg7XHJcbiAgfVxyXG4gIC50ZC1sb2FkaW5nLXJvbGxlciBkaXY6bnRoLWNoaWxkKDcpIHtcclxuICAgIGFuaW1hdGlvbi1kZWxheTogLTAuMjUycztcclxuICB9XHJcbiAgLnRkLWxvYWRpbmctcm9sbGVyIGRpdjpudGgtY2hpbGQoNyk6YWZ0ZXIge1xyXG4gICAgdG9wOiA1MHB4O1xyXG4gICAgbGVmdDogMTRweDtcclxuICB9XHJcbiAgLnRkLWxvYWRpbmctcm9sbGVyIGRpdjpudGgtY2hpbGQoOCkge1xyXG4gICAgYW5pbWF0aW9uLWRlbGF5OiAtMC4yODhzO1xyXG4gIH1cclxuICAudGQtbG9hZGluZy1yb2xsZXIgZGl2Om50aC1jaGlsZCg4KTphZnRlciB7XHJcbiAgICB0b3A6IDQ1cHg7XHJcbiAgICBsZWZ0OiAxMHB4O1xyXG4gIH1cclxuICBAa2V5ZnJhbWVzIGxkcy1yb2xsZXIge1xyXG4gICAgMCUge1xyXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcclxuICAgIH1cclxuICAgIDEwMCUge1xyXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xyXG4gICAgfVxyXG4gIH1cclxuICAiXX0= */\"","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'td-loader-spinner',\r\n  templateUrl: './loader-spinner.component.html',\r\n  styleUrls: ['./loader-spinner.component.css']\r\n})\r\nexport class LoaderSpinnerComponent implements OnInit {\r\n  @Input() active = false;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { Directive, Input, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[tdContainer]',\r\n})\r\nexport class ContainerDirective {\r\n  @Input() id: string;\r\n\r\n  element: HTMLTableHeaderCellElement;\r\n\r\n  constructor(private _el: ElementRef) {\r\n    this.element = _el.nativeElement;\r\n  }\r\n}\r\n","export default \".td-wrapper {\\r\\n    display: grid;\\r\\n    width: 100%;\\r\\n    grid-row-gap: 10px;\\r\\n    grid-template-columns: repeat(2, [col] 50%);\\r\\n    grid-template-rows: repeat(2, [row] auto);\\r\\n    background-color: #fff;\\r\\n    color: #444;\\r\\n  }\\r\\n  \\r\\n  .td-toolbar-show-diff {\\r\\n    grid-column: 1;\\r\\n    grid-row: 1;\\r\\n  }\\r\\n  \\r\\n  .td-toolbar-select-format {\\r\\n    margin-left: auto;\\r\\n    grid-column: 2;\\r\\n    grid-row: 1;\\r\\n  }\\r\\n  \\r\\n  .td-table-container {\\r\\n    grid-column: 1 / 2;\\r\\n    grid-row: 2;\\r\\n    width: 100%;\\r\\n    max-width: 100%;\\r\\n    overflow-x: auto;\\r\\n  }\\r\\n  \\r\\n  .td-table-wrapper {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    width: 200%;\\r\\n  }\\r\\n  \\r\\n  .td-table {\\r\\n    border: 1px solid darkgray;\\r\\n    max-height: 50vh;\\r\\n    width: 100%;\\r\\n    max-width: 100%;\\r\\n  }\\r\\n  \\r\\n  .fit-column {\\r\\n    width: 1px;\\r\\n    white-space: nowrap;\\r\\n  }\\r\\n  \\r\\n  .line-number-col {\\r\\n    position: relative; /* I am the fallback */\\r\\n  \\r\\n    /* Give it everything you got! (use an auto prefixer...) */\\r\\n    position: -webkit-sticky;\\r\\n    position: sticky;\\r\\n    left: 0;\\r\\n    top: auto;\\r\\n    border-right: 1px solid #ddd;\\r\\n    color: #999;\\r\\n    text-align: right;\\r\\n    background-color: #f7f7f7;\\r\\n    padding-left: 10px;\\r\\n    padding-right: 10px;\\r\\n    font-size: 87.5%;\\r\\n  }\\r\\n  \\r\\n  .line-number-col-left {\\r\\n    color: #999;\\r\\n    padding-left: 10px;\\r\\n    padding-right: 10px;\\r\\n    text-align: right;\\r\\n    background-color: #f7f7f7;\\r\\n    font-size: 87.5%;\\r\\n  }\\r\\n  \\r\\n  .insert-row,\\r\\n  .insert-row > .line-number-col {\\r\\n    background-color: #dfd;\\r\\n    border-color: #b4e2b4;\\r\\n  }\\r\\n  \\r\\n  .delete-row,\\r\\n  .delete-row > .line-number-col {\\r\\n    background-color: #fee8e9;\\r\\n    border-color: #e9aeae;\\r\\n  }\\r\\n  \\r\\n  .empty-row {\\r\\n    background-color: #f7f7f7;\\r\\n    height: 24px;\\r\\n  }\\r\\n  \\r\\n  .td-table td {\\r\\n    border-top: 0;\\r\\n    padding-top: 0;\\r\\n    padding-bottom: 0;\\r\\n    white-space: nowrap;\\r\\n    max-width: 50%;\\r\\n  }\\r\\n  \\r\\n  pre {\\r\\n    margin-bottom: 0;\\r\\n  }\\r\\n  \\r\\n  td.content-col {\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    line-height: 24px;\\r\\n  }\\r\\n  \\r\\n  td.prefix-col {\\r\\n    padding-left: 10px;\\r\\n    padding-right: 10px;\\r\\n    line-height: 24px;\\r\\n  }\\r\\n  \\r\\n  .td-btn-group {\\r\\n    border-radius: 4px;\\r\\n  }\\r\\n  \\r\\n  .td-btn-group button {\\r\\n    background-color: rgba(23,162,184,.7); /* Green background */\\r\\n    border: 1px solid #17a2b8; /* Green border */\\r\\n    color: white; /* White text */\\r\\n    cursor: pointer; /* Pointer/hand icon */\\r\\n    float: left; /* Float the buttons side by side */\\r\\n  }\\r\\n  \\r\\n  .td-btn-group button:not(:last-child) {\\r\\n    border-right: none; /* Prevent double borders */\\r\\n  }\\r\\n  \\r\\n  .td-btn-group button:first-child {\\r\\n    -webkit-border-top-left-radius: 4px;\\r\\n    -webkit-border-bottom-left-radius: 4px;\\r\\n    -moz-border-radius-topleft: 4px;\\r\\n    -moz-border-radius-bottomleft: 4px;\\r\\n    border-top-left-radius: 4px;\\r\\n    border-bottom-left-radius: 4px;\\r\\n  }\\r\\n  \\r\\n  .td-btn-group button:last-child {\\r\\n    -webkit-border-top-right-radius: 4px;\\r\\n    -webkit-border-bottom-right-radius: 4px;\\r\\n    -moz-border-radius-topright: 4px;\\r\\n    -moz-border-radius-bottomright: 4px;\\r\\n    border-top-right-radius: 4px;\\r\\n    border-bottom-right-radius: 4px;\\r\\n  }\\r\\n  \\r\\n  /* Clear floats (clearfix hack) */\\r\\n  \\r\\n  .td-btn-group:after {\\r\\n    content: '';\\r\\n    clear: both;\\r\\n    display: table;\\r\\n  }\\r\\n  \\r\\n  /* Add a background color on hover */\\r\\n  \\r\\n  .td-btn-group button:hover,\\r\\n  .td-btn-group button.active {\\r\\n    background-color: #17a2b8;\\r\\n  }\\r\\n  \\r\\n  /* Customize the label (the container) */\\r\\n  \\r\\n  .td-checkbox-container {\\r\\n    display: block;\\r\\n    position: relative;\\r\\n    padding-left: 21px;\\r\\n    margin-bottom: 0;\\r\\n    cursor: pointer;\\r\\n    font-size: 16px;\\r\\n    line-height: 28px;\\r\\n    -webkit-user-select: none;\\r\\n    -moz-user-select: none;\\r\\n    -ms-user-select: none;\\r\\n    user-select: none;\\r\\n  }\\r\\n  \\r\\n  /* Hide the browser's default checkbox */\\r\\n  \\r\\n  .td-checkbox-container input {\\r\\n    position: absolute;\\r\\n    opacity: 0;\\r\\n    cursor: pointer;\\r\\n    height: 0;\\r\\n    width: 0;\\r\\n  }\\r\\n  \\r\\n  /* Create a custom checkbox */\\r\\n  \\r\\n  .checkmark {\\r\\n    position: absolute;\\r\\n    top: 7px;\\r\\n    left: 0;\\r\\n    height: 16px;\\r\\n    width: 16px;\\r\\n    background-color: #eee;\\r\\n  }\\r\\n  \\r\\n  /* On mouse-over, add a grey background color */\\r\\n  \\r\\n  .td-checkbox-container:hover input ~ .checkmark {\\r\\n    background-color: #ccc;\\r\\n  }\\r\\n  \\r\\n  /* When the checkbox is checked, add a blue background */\\r\\n  \\r\\n  .td-checkbox-container input:checked ~ .checkmark {\\r\\n    background-color: #17a2b8;\\r\\n  }\\r\\n  \\r\\n  /* Create the checkmark/indicator (hidden when not checked) */\\r\\n  \\r\\n  .checkmark:after {\\r\\n    content: \\\"\\\";\\r\\n    position: absolute;\\r\\n    display: none;\\r\\n  }\\r\\n  \\r\\n  /* Show the checkmark when checked */\\r\\n  \\r\\n  .td-checkbox-container input:checked ~ .checkmark:after {\\r\\n    display: block;\\r\\n  }\\r\\n  \\r\\n  /* Style the checkmark/indicator */\\r\\n  \\r\\n  .td-checkbox-container .checkmark:after {\\r\\n    left: 5px;\\r\\n    top: 3px;\\r\\n    width: 5px;\\r\\n    height: 10px;\\r\\n    border: solid white;\\r\\n    border-width: 0 3px 3px 0;\\r\\n    -webkit-transform: rotate(45deg);\\r\\n    transform: rotate(45deg);\\r\\n  }\\r\\n  \\r\\n  .insert-row > .highlight {\\r\\n    background-color: #acf2bd !important;\\r\\n  }\\r\\n  \\r\\n  .delete-row > .highlight {\\r\\n    background-color: #fdb8c0 !important;\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","import {\r\n    ChangeDetectorRef,\r\n    Component,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    EventEmitter,\r\n    ViewChildren,\r\n    QueryList,\r\n    AfterViewInit\r\n  } from '@angular/core';\r\n  import { DiffContent, DiffPart, DiffTableFormat, DiffTableFormatOption, DiffTableRowResult, DiffResults } from './ngx-text-diff.model';\r\n  import { NgxTextDiffService } from './ngx-text-diff.service';\r\n  import { Observable, Subscription } from 'rxjs';\r\n  import { ContainerDirective } from './ngx-text-diff-container.directive';\r\n  import { ScrollDispatcher, CdkScrollable } from '@angular/cdk/scrolling';\r\n  \r\n  @Component({\r\n    selector: 'td-ngx-text-diff',\r\n    templateUrl: './ngx-text-diff.component.html',\r\n    styleUrls: ['./ngx-text-diff.component.css'],\r\n  })\r\n  export class NgxTextDiffComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    private _hideMatchingLines = false;\r\n    @ViewChildren(ContainerDirective) containers: QueryList<ContainerDirective>;\r\n    @Input() format: DiffTableFormat = 'SideBySide';\r\n    @Input() left = '';\r\n    @Input() right = '';\r\n    @Input() diffContent: Observable<DiffContent>;\r\n    @Input() loading = false;\r\n    @Input() showToolbar = true;\r\n    @Input() showBtnToolbar = true;\r\n    @Input()\r\n    get hideMatchingLines() {\r\n      return this._hideMatchingLines;\r\n    }\r\n  \r\n    set hideMatchingLines(hide: boolean) {\r\n      this.hideMatchingLinesChanged(hide);\r\n    }\r\n    @Input() outerContainerClass: string;\r\n    @Input() outerContainerStyle: any;\r\n    @Input() toolbarClass: string;\r\n    @Input() toolbarStyle: any;\r\n    @Input() compareRowsClass: string;\r\n    @Input() compareRowsStyle: any;\r\n    @Input() synchronizeScrolling = true;\r\n    @Output() compareResults = new EventEmitter<DiffResults>();\r\n    subscriptions: Subscription[] = [];\r\n    tableRows: DiffTableRowResult[] = [];\r\n    filteredTableRows: DiffTableRowResult[] = [];\r\n    tableRowsLineByLine: DiffTableRowResult[] = [];\r\n    filteredTableRowsLineByLine: DiffTableRowResult[] = [];\r\n    diffsCount = 0;\r\n  \r\n    formatOptions: DiffTableFormatOption[] = [\r\n      {\r\n        id: 'side-by-side',\r\n        name: 'side-by-side',\r\n        label: 'Side by Side',\r\n        value: 'SideBySide',\r\n        icon: 'la-code',\r\n      },\r\n      {\r\n        id: 'line-by-line',\r\n        name: 'line-by-line',\r\n        label: 'Line by Line',\r\n        value: 'LineByLine',\r\n        icon: 'la-file-text',\r\n      },\r\n    ];\r\n  \r\n    constructor(private scrollService: ScrollDispatcher, private diff: NgxTextDiffService, private cd: ChangeDetectorRef) {}\r\n  \r\n    ngOnInit() {\r\n      this.loading = true;\r\n      if (this.diffContent) {\r\n        this.subscriptions.push(\r\n          this.diffContent.subscribe(content => {\r\n            this.loading = true;\r\n            this.left = content.leftContent;\r\n            this.right = content.rightContent;\r\n            this.renderDiffs()\r\n              .then(() => {\r\n                this.cd.detectChanges();\r\n                this.loading = false;\r\n              })\r\n              .catch(() => (this.loading = false));\r\n          })\r\n        );\r\n      }\r\n      this.renderDiffs()\r\n        .then(() => (this.loading = false))\r\n        .catch(e => (this.loading = false));\r\n    }\r\n  \r\n    ngAfterViewInit() {\r\n      this.initScrollListener();\r\n    }\r\n  \r\n    ngOnDestroy(): void {\r\n      if (this.subscriptions) {\r\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\r\n      }\r\n    }\r\n  \r\n    hideMatchingLinesChanged(value: boolean) {\r\n      this._hideMatchingLines = value;\r\n      if (this.hideMatchingLines) {\r\n        this.filteredTableRows = this.tableRows.filter(\r\n          row => (row.leftContent && row.leftContent.prefix === '-') || (row.rightContent && row.rightContent.prefix === '+')\r\n        );\r\n        this.filteredTableRowsLineByLine = this.tableRowsLineByLine.filter(\r\n          row => (row.leftContent && row.leftContent.prefix === '-') || (row.rightContent && row.rightContent.prefix === '+')\r\n        );\r\n      } else {\r\n        this.filteredTableRows = this.tableRows;\r\n        this.filteredTableRowsLineByLine = this.tableRowsLineByLine;\r\n      }\r\n    }\r\n  \r\n    setDiffTableFormat(format: DiffTableFormat) {\r\n      this.format = format;\r\n    }\r\n  \r\n    async renderDiffs() {\r\n      try {\r\n        this.diffsCount = 0;\r\n        this.tableRows = await this.diff.getDiffsByLines(this.left, this.right);\r\n        this.tableRowsLineByLine = this.tableRows.reduce((tableLineByLine: DiffTableRowResult[], row: DiffTableRowResult) => {\r\n          if (!tableLineByLine) {\r\n            tableLineByLine = [];\r\n          }\r\n          if (row.hasDiffs) {\r\n            if (row.leftContent) {\r\n              tableLineByLine.push({\r\n                leftContent: row.leftContent,\r\n                rightContent: null,\r\n                belongTo: row.belongTo,\r\n                hasDiffs: true,\r\n                numDiffs: row.numDiffs,\r\n              });\r\n            }\r\n            if (row.rightContent) {\r\n              tableLineByLine.push({\r\n                leftContent: null,\r\n                rightContent: row.rightContent,\r\n                belongTo: row.belongTo,\r\n                hasDiffs: true,\r\n                numDiffs: row.numDiffs,\r\n              });\r\n            }\r\n          } else {\r\n            tableLineByLine.push(row);\r\n          }\r\n  \r\n          return tableLineByLine;\r\n        }, []);\r\n        this.diffsCount = this.tableRows.filter(row => row.hasDiffs).length;\r\n        this.filteredTableRows = this.tableRows;\r\n        this.filteredTableRowsLineByLine = this.tableRowsLineByLine;\r\n        this.emitCompareResultsEvent();\r\n      } catch (e) {\r\n        throw e;\r\n      }\r\n    }\r\n  \r\n    emitCompareResultsEvent() {\r\n      const diffResults: DiffResults = {\r\n        hasDiff: this.diffsCount > 0,\r\n        diffsCount: this.diffsCount,\r\n        rowsWithDiff: this.tableRows\r\n          .filter(row => row.hasDiffs)\r\n          .map(row => ({\r\n            leftLineNumber: row.leftContent ? row.leftContent.lineNumber : null,\r\n            rightLineNumber: row.rightContent ? row.rightContent.lineNumber : null,\r\n            numDiffs: row.numDiffs,\r\n          })),\r\n      };\r\n  \r\n      this.compareResults.next(diffResults);\r\n    }\r\n  \r\n    trackTableRows(index, row: DiffTableRowResult) {\r\n      return row && row.leftContent ? row.leftContent.lineContent : row && row.rightContent ? row.rightContent.lineContent : undefined;\r\n    }\r\n  \r\n    trackDiffs(index, diff: DiffPart) {\r\n      return diff && diff.content ? diff.content : undefined;\r\n    }\r\n  \r\n    private initScrollListener() {\r\n      this.subscriptions.push(this.scrollService.scrolled().subscribe((scrollableEv: CdkScrollable) => {\r\n        if (scrollableEv && this.synchronizeScrolling) {\r\n          const scrollableId = scrollableEv.getElementRef().nativeElement.id;\r\n          const nonScrolledContainer: ContainerDirective = this.containers.find(container => container.id !== scrollableId);\r\n          if (nonScrolledContainer) {\r\n            nonScrolledContainer.element.scrollTo({\r\n              top: scrollableEv.measureScrollOffset('top'),\r\n              left: scrollableEv.measureScrollOffset('left'),\r\n            });\r\n          }\r\n        }\r\n      }));\r\n    }\r\n  }\r\n  ","import { NgModule } from '@angular/core';\r\nimport { NgxTextDiffComponent } from './ngx-text-diff.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { LoaderSpinnerComponent } from './loader-spinner/loader-spinner.component';\r\nimport { FormatLinePipe } from './format-line.pipe';\r\nimport { ContainerDirective } from './ngx-text-diff-container.directive';\r\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, ScrollDispatchModule],\r\n  declarations: [NgxTextDiffComponent, LoaderSpinnerComponent, FormatLinePipe, ContainerDirective],\r\n  exports: [NgxTextDiffComponent]\r\n})\r\nexport class NgxTextDiffModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Diff, DIFF_DELETE, DIFF_EQUAL, DIFF_INSERT, diff_match_patch } from 'diff-match-patch';\r\nimport { DiffLineResult, DiffPart, DiffTableRowResult } from './ngx-text-diff.model';\r\nimport { isEmpty, isNil } from './ngx-text-diff.utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgxTextDiffService {\r\n  diffParser: diff_match_patch;\r\n\r\n  constructor() {\r\n    this.initParser();\r\n  }\r\n\r\n  private initParser() {\r\n    this.diffParser = new diff_match_patch();\r\n  }\r\n\r\n  getDiffsByLines(left: string, right: string): Promise<DiffTableRowResult[]> {\r\n    return new Promise<DiffTableRowResult[]>((resolve, reject) => {\r\n      const a = this.diffParser.diff_linesToChars_(left, right);\r\n      const lineText1 = a.chars1;\r\n      const lineText2 = a.chars2;\r\n      const linesArray = a.lineArray;\r\n      const diffs: Diff[] = this.diffParser.diff_main(lineText1, lineText2, true);\r\n      this.diffParser.diff_charsToLines_(diffs, linesArray);\r\n      const rows: DiffTableRowResult[] = this.formatOutput(diffs);\r\n      if (!rows) {\r\n        reject('Error');\r\n      }\r\n\r\n      resolve(rows);\r\n    });\r\n  }\r\n\r\n  private formatOutput(diffs: Diff[]): DiffTableRowResult[] {\r\n    let lineLeft = 1;\r\n    let lineRight = 1;\r\n    return diffs.reduce((rows: DiffTableRowResult[], diff: Diff) => {\r\n      if (!rows) {\r\n        rows = [];\r\n      }\r\n      const diffType: number = diff[0];\r\n      const diffValue: string = diff[1];\r\n      let leftDiffRow: DiffTableRowResult = null;\r\n      let rightDiffRow: DiffTableRowResult = null;\r\n      let leftContent: DiffLineResult = null;\r\n      let rightContent: DiffLineResult = null;\r\n      let rowTemp: DiffTableRowResult = null;\r\n      switch (diffType) {\r\n        case DIFF_EQUAL: // 0\r\n          diffValue\r\n            .split('\\n')\r\n            .filter((value, index, array) => {\r\n              if (index === array.length - 1) {\r\n                return !isEmpty(value);\r\n              }\r\n              return true;\r\n            })\r\n            .forEach(line => {\r\n              leftContent = {\r\n                lineNumber: lineLeft,\r\n                lineContent: line,\r\n                lineDiffs: [],\r\n                prefix: ''\r\n              };\r\n              rightContent = {\r\n                lineNumber: lineRight,\r\n                lineContent: line,\r\n                lineDiffs: [],\r\n                prefix: ''\r\n              };\r\n              rowTemp = {\r\n                leftContent,\r\n                rightContent,\r\n                belongTo: 'both',\r\n                hasDiffs: false,\r\n                numDiffs: 0,\r\n              };\r\n              rows.push(rowTemp);\r\n              lineRight = lineRight + 1;\r\n              lineLeft = lineLeft + 1;\r\n            });\r\n          break;\r\n        case DIFF_DELETE: // -1\r\n          diffValue\r\n            .split('\\n')\r\n            .filter((value, index, array) => {\r\n              if (index === array.length - 1) {\r\n                return !isEmpty(value);\r\n              }\r\n              return true;\r\n            })\r\n            .forEach(line => {\r\n              rightDiffRow = rows.find(\r\n                row => !row.leftContent && row.rightContent && row.rightContent.lineNumber === lineLeft && row.rightContent.prefix !== ''\r\n              );\r\n              leftContent = {\r\n                lineNumber: lineLeft,\r\n                lineContent: line,\r\n                lineDiffs: [{ content: line, isDiff: true }],\r\n                prefix: '-'\r\n              };\r\n              if (rightDiffRow) {\r\n                rightDiffRow.leftContent = leftContent;\r\n                rightDiffRow.leftContent.lineDiffs = this.getDiffParts(\r\n                  rightDiffRow.leftContent.lineContent,\r\n                  rightDiffRow.rightContent.lineContent\r\n                );\r\n                rightDiffRow.rightContent.lineDiffs = this.getDiffParts(\r\n                  rightDiffRow.rightContent.lineContent,\r\n                  rightDiffRow.leftContent.lineContent\r\n                );\r\n                rightDiffRow.belongTo = 'both';\r\n                rightDiffRow.numDiffs = this.countDiffs(rightDiffRow);\r\n              } else {\r\n                rows.push({\r\n                  leftContent,\r\n                  rightContent: null,\r\n                  hasDiffs: true,\r\n                  belongTo: 'left',\r\n                  numDiffs: 1,\r\n                });\r\n              }\r\n              lineLeft = lineLeft + 1;\r\n            });\r\n          break;\r\n        case DIFF_INSERT: // 1\r\n          diffValue\r\n            .split('\\n')\r\n            .filter((value, index, array) => {\r\n              if (index === array.length - 1) {\r\n                return !isEmpty(value);\r\n              }\r\n              return true;\r\n            })\r\n            .forEach(line => {\r\n              leftDiffRow = rows.find(\r\n                row => row.leftContent && !row.rightContent && row.leftContent.lineNumber === lineRight && row.leftContent.prefix !== ''\r\n              );\r\n              rightContent = {\r\n                lineNumber: lineRight,\r\n                lineContent: line,\r\n                lineDiffs: [{ content: line, isDiff: true }],\r\n                prefix: '+'\r\n              };\r\n              if (leftDiffRow) {\r\n                leftDiffRow.rightContent = rightContent;\r\n                leftDiffRow.leftContent.lineDiffs = this.getDiffParts(\r\n                  leftDiffRow.leftContent.lineContent,\r\n                  leftDiffRow.rightContent.lineContent\r\n                );\r\n                leftDiffRow.rightContent.lineDiffs = this.getDiffParts(\r\n                  leftDiffRow.rightContent.lineContent,\r\n                  leftDiffRow.leftContent.lineContent\r\n                );\r\n                leftDiffRow.belongTo = 'both';\r\n                leftDiffRow.numDiffs = this.countDiffs(leftDiffRow);\r\n              } else {\r\n                rows.push({\r\n                  leftContent: null,\r\n                  rightContent,\r\n                  hasDiffs: true,\r\n                  belongTo: 'right',\r\n                  numDiffs: 1,\r\n                });\r\n              }\r\n              lineRight = lineRight + 1;\r\n            });\r\n          break;\r\n      }\r\n      return rows;\r\n    }, []);\r\n  }\r\n\r\n  private countDiffs(result: DiffTableRowResult): number {\r\n    let diffCount = 0;\r\n    if (result.leftContent) {\r\n      diffCount += result.leftContent.lineDiffs.filter(diff => diff.isDiff).length;\r\n    }\r\n    if (result.leftContent) {\r\n      diffCount += result.rightContent.lineDiffs.filter(diff => diff.isDiff).length;\r\n    }\r\n    return diffCount;\r\n  }\r\n\r\n  private getDiffParts(value: string, compareValue: string): DiffPart[] {\r\n    const diffParts: DiffPart[] = [];\r\n    let i = 0;\r\n    let j = 0;\r\n    let shared = '';\r\n    let diff = '';\r\n\r\n    while (i < value.length) {\r\n      if (value[i] === compareValue[j] && j < compareValue.length) {\r\n        if (diff !== '') {\r\n          diffParts.push({ content: diff, isDiff: true });\r\n          diff = '';\r\n        }\r\n        shared += value[i];\r\n      } else {\r\n        if (shared !== '') {\r\n          diffParts.push({ content: shared, isDiff: false });\r\n          shared = '';\r\n        }\r\n        diff += value[i];\r\n      }\r\n      i++;\r\n      j++;\r\n    }\r\n\r\n    if (diff !== '') {\r\n      diffParts.push({ content: diff, isDiff: true });\r\n    } else if (shared !== '') {\r\n      diffParts.push({ content: shared, isDiff: false });\r\n    }\r\n\r\n    return diffParts;\r\n  }\r\n}\r\n","export const isNil = val => val === undefined || val === null;\r\nexport const isEmpty = val => val == null || !(Object.keys(val) || val).length || (Object.keys(val) || val).length === 0;\r\n","export default \"footer.main-footer {\\n  position: fixed;\\n  bottom: 0;\\n  width: 100%;\\n  background: #2f333e;\\n  color: #fff;\\n  padding: 4px; }\\n\\nfooter.main-footer p {\\n  font-size: 16px;\\n  font-weight: 500;\\n  color: #ffffff;\\n  margin-bottom: 0px !important; }\\n\\nfooter.main-footer a {\\n  color: #fff; }\\n\\n.company_name {\\n  font-size: 25px;\\n  font-weight: 800; }\\n\\nheader.header {\\n  background: #fff;\\n  color: #666;\\n  position: relative;\\n  border-radius: 0;\\n  z-index: 10;\\n  width: 100%;\\n  padding: 10px;\\n  margin-bottom: 30px; }\\n\\nheader {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  margin-bottom: 15px; }\\n\\n.navbar-header .brand-logo img {\\n  width: 177px; }\\n\\n:ng-deep .td-table-wrapper {\\n  max-height: calc(100vh - 335px) !important; }\\n\\n.btn-primary {\\n  color: #fff;\\n  background-color: #f49322;\\n  border-color: #f98907; }\\n\\n.custom-file-label::after {\\n  color: #ffffff;\\n  background-color: #605f60; }\\n\\n.compare_table {\\n  padding-bottom: 25px; }\\n\\n.label label {\\n  padding: 0px 7px 0px 0px;\\n  font-weight: 500; }\\n\\n/* .page-title.reason {\\r\\n    border: 2px solid #000;\\r\\n    padding: 10px 20px;\\r\\n    margin-bottom: 4rem;\\r\\n} */\\n\\n.page-title.reason ::ng-deep .mat-form-field-appearance-legacy .mat-form-field-underline {\\n  height: 0px; }\\n\\n.page-title.reason ::ng-deep .mat-form-field-infix {\\n  border: 1px solid #ddd;\\n  width: 510px; }\\n\\n.submit-btn {\\n  margin-left: 10px; }\\n\\n.back.mat-icon.notranslate.material-icons.mat-icon-no-color {\\n  vertical-align: middle; }\\n\\n.page-title {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n  padding: 20px 0px; }\\n\\n.page-title h2 {\\n    font-size: 18px;\\n    margin: 0;\\n    font-weight: 500; }\\n\\n.page-title.reason h4 {\\n    margin-right: 10px;\\n    font-size: 21px; }\\n\\n.page-title.reason form {\\n    display: -webkit-box;\\n    display: flex; }\\n\\n.clock_all {\\n  font-size: 14px; }\\n\\n.clock_all .clock_top {\\n    margin: 5px auto; }\\n\\n.file-path {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n  justify-content: space-between;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  margin: 15px 0px; }\\n\\n.file-path p {\\n    margin: 0;\\n    font-size: 14px; }\\n\\n.file-path p span {\\n      padding: 0px 4px 0px 0px;\\n      font-weight: 500; }\\n\\n.file-path label {\\n    font-weight: 500; }\\n\\n.home-back {\\n  padding: 10px 0px; }\\n\\n.home-back a {\\n    display: -webkit-box;\\n    display: flex;\\n    -webkit-box-align: center;\\n            align-items: center;\\n    text-decoration: none;\\n    color: #000000;\\n    font-size: 14px; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Subscription } from 'rxjs';\n// import { Component, OnInit } from '@angular/core';\n// import { Observable, Subject } from 'rxjs';\n// import { DiffResults } from '../../../projects/ngx-text-diff/src/lib/ngx-text-diff.model';\n\n// export interface DiffContent {\n//   leftContent: string;\n//   rightContent: string;\n// }\n\n// @Component({\n//   selector: 'tda-home',\n//   templateUrl: './home.component.html',\n//   styleUrls: ['./home.component.css']\n// })\n// export class HomeComponent implements OnInit {\n//   submitted = false;\n//   content: DiffContent = {\n//     leftContent: '',\n//     rightContent: ''\n//   };\n\n//   options: any = {\n//     lineNumbers: true,\n//     mode: 'xml'\n//   };\n\n//   contentObservable: Subject<DiffContent> = new Subject<DiffContent>();\n//   contentObservable$: Observable<DiffContent> = this.contentObservable.asObservable();\n\n//   constructor() {}\n\n//   ngOnInit() {\n//     this.submitted = false;\n//     this.content.leftContent =\n//       '<card xmlns=\"http://businesscard.org\">\\n' +\n//       '   <name>John Doe</name>\\n' +\n//       '   <title>CEO, Widget Inc.</title>\\n' +\n//       '   <email>john.Moe@widget.com</email>\\n' +\n//       '   <cellphone>(202) 456-1414</cellphone>\\n' +\n//       '   <phone>(202) 456-1414</phone>\\n' +\n//       '   <logo url=\"widget.gif\"/>\\n' +\n//       ' </card>';\n//     this.content.rightContent =\n//       '<card xmlns=\"http://businesscard.org\">\\n' +\n//       '   <name>John Moe</name>\\n' +\n//       '   <title>CEO, Widget Inc.</title>\\n' +\n//       '   <email>john.Moe@widget.com</email>\\n' +\n//       '   <phone>(202) 456-1414</phone>\\n' +\n//       '   <address>Test</address>\\n' +\n//       '   <logo url=\"widget.gif\"/>\\n' +\n//       ' </card>';\n//   }\n\n//   submitComparison() {\n//     this.submitted = false;\n//     this.contentObservable.next(this.content);\n//     this.submitted = true;\n//   }\n\n//   handleChange(side: 'left' | 'right', value: string) {\n//     switch (side) {\n//       case 'left':\n//         this.content.leftContent = value;\n//         break;\n//       case 'right':\n//         this.content.rightContent = value;\n//         break;\n//       default:\n//         break;\n//     }\n//   }\n\n//   onCompareResults(diffResults: DiffResults) {\n//     console.log('diffResults', diffResults);\n//   }\n// }\nimport { Component, OnInit,Inject } from '@angular/core';\nimport { Observable, Subject, from } from 'rxjs';\n// import { DiffResults } from '../../../projects/ngx-text-diff/src/lib/ngx-text-diff.model';\nimport { DiffResults } from '../../../projects/ngx-text-diff/src/lib/ngx-text-diff.model';\n// import { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NavbarService} from '../Nav/navbar.service';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n// import { NavbarService} from '../../Nav/navbar.service';\n\nexport interface DiffContent {\n  leftContent: string;\n  rightContent: string;\n}\n\n@Component({\n  selector: 'tda-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  submitted = false;\n  filName: any = \"\";\n  filName1: any = \"\";\n  status: any;\n  content: DiffContent = {\n    leftContent: '',\n    rightContent: ''\n  };\n\n  options: any = {\n    lineNumbers: true,\n    mode: 'xml'\n  };\n\n  contentObservable: Subject<DiffContent> = new Subject<DiffContent>();\n  contentObservable$: Observable<DiffContent> = this.contentObservable.asObservable();\n  fileText: string | ArrayBuffer;\n  FileText;\n  filetext1;\n  result: any;\n  public show: boolean = false;\n  public buttonName: any = 'Compare';\n  login: FormGroup;\n  Compare: any;\n  // path:any;\n  machinesArray: any;\n  machineid: any;\n  fileName: any;\n  file_path: any;\n  fileName1: any;\n  // test: Object;\n  sample_test: any;\n  file: any;\n  file_Name: any;\n  file_name: any;\n  machine: any;\n  compare: any;\n  maxDate = new Date();\n  swal:any;\n  Text1: any;\n  me: any;\n  Text: any;\n  compareResults: string;\n  file2: any;\n  slave_file: string;\n  date= new Date().toString();\n  constructor(private nav:NavbarService,private route:Router,private fb: FormBuilder, private http: HttpClient,public dialog: MatDialog,) {\n\n    this.nav.show();\n\n    setInterval(() => {this.today = Date.now()}, 1);\n\n\n    this.login = this.fb.group({\n      // name:[\"\",Validators.required],\n      reason: [\"\", Validators.required],\n      // old_revision_no:[\"\",Validators.required],\n      // new_revision_no:[\"\",Validators.required],\n    })\n\n\n  }\n  today: number = Date.now();\n\n\n  keyPress(event: any) {\n    const pattern = /[0-9\\+\\-\\ ]/;\n    let inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode != 8 && !pattern.test(inputChar)) {\n    event.preventDefault();\n    }\n   }\n  \n  \n  // this.httpClient.post('http://192.168.1.160:3000/users/create',{user: this.user.value}).subscribe(result =>{\n    \n  ngOnInit() {\n\n     console.log(localStorage.getItem(\"tenant_id\"));\n     console.log(localStorage.getItem(\"user_id\"));\n    this.sample_test = localStorage.getItem(\"tenant_id\");\n    console.log(this.sample_test)\n    let headers = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + localStorage.getItem(\"token\")\n      })\n    }  \n\n    //headers.set(\"Authorization\", \"Bearer \" +localStorage.getItem(\"token\"));\n    this.http.get(\"http://192.168.0.237:4000/api/v1/machines?tenant_id=\" + this.sample_test, headers).subscribe(res => {\n      console.log(res);\n      // console.log(filName);\n      this.machinesArray = res;\n      this.onSelect(this.machinesArray[0].id);\n      localStorage.getItem(\"tenant_id\");\n      console.log(localStorage.getItem('tenant_id'),localStorage.getItem(\"user_id\"));\nconsole.log(localStorage.getItem(\"token\"))\n      // this.http.get(\"http://192.168.0.237:4000/api/v1/machines?tenant_id=' + $scope.tenant_id\",).subscribe(res=>{\n      //   console.log(res);\n\n\n    });\n  }\n\n  // openDialog(): void {\n  //   const dialogRef = this.dialog.open(Dialog, {\n  //     width: '500px',\n     \n  //   });\n\n  //   dialogRef.afterClosed().subscribe(result => {\n\n  // })}\n  \n  onSelect(machine_id) {\n    this.machineid = machine_id\n    console.log(this.machineid)\n    this.filName = \"\";\n    this.filName1 = \"\";\n    this.submitted = false;\n    this.compareResults = \"\";\n\n    this.login.reset();\n    this.Compare = false;\n    this.file_path = \"\";\n    this.file_name = \"\";\n    this.fileName1 = \"\";\n    this.filetext1 = \"\";\n    // this.me.FileText = \"\";\n\n    // CHANGE THE NAME OF THE BUTTON.\n    console.log(this.Compare)\n    if (this.Compare)\n      this.buttonName = \"Compare\";\n   \n    // this.ngOnInit();\n\n    // this.Compare = false;\n    console.log(this.Compare); \n    let headers = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + localStorage.getItem(\"token\")\n      })\n    }\n    \n// http://52.66.140.40\n    // console.log(machine_id)\n    // this.http.get(\"http:///52.66.140.40/api/v1/file_path?id=\" + machine_id, headers).subscribe(res => {\n      console.log(machine_id)\n       this.http.get(\"http://192.168.0.237:4000/api/v1/file_path?id=\" + machine_id, headers).subscribe(res => {\n      //console.log(res);\n      // alert(res.status);\n      // alert(res.file_path);\n      // alert(res['status'])\n\n      if (res['status'] != null) {\n        alert(res['status'])\n      }\n      this.file_path = res;\n\n    },\n      error => {\n        console.log(error)\n        this.file_path = error.error;\n      })\n  }\n\n  submitComparison() {\n    this.submitted = false;\n    this.contentObservable.next(this.content);\n    this.submitted = true;\n  }\n\n  handleChange(side: 'left' | 'right', value: string) {\n    switch (side) {\n      case 'left':\n        this.content.leftContent = value;\n        break;\n      case 'right':\n        this.content.rightContent = value;\n        break;\n      default:\n        break;\n    }\n  }\n\n  onCompareResults(diffResults: DiffResults) {\n    console.log('diffResults', diffResults);\n    // console.log(this.file.name)\n  }\n\n  fileUpload(event) {\n    var reader = new FileReader();\n    let file = event.target.files[0];\n    let file_name = file.name;\n    this.filName = file_name;\n    console.log(this.filName)\n    reader.readAsText(event.srcElement.files[0]);\n    var me = this;\n    reader.onload = function () {\n      me.FileText = reader.result;\n      console.log(me)\n      // me.content.leftContent = (reader.result).toString()\n      me.handleChange('left', me.FileText)\n    }\n    //this.handleChange('left',me.FileText)\n    this.Text = me.FileText;\n\n  }\n\n  fileUpload1(event) {\n    var reader = new FileReader();\n    console.log(event)\n    this.file2 = event.target.files[0];\n    console.log(this.file2);\n    let fileName = this.file2.name;\n    this.filName1 = fileName\n    reader.readAsText(event.srcElement.files[0]);\n    var me = this;\n    reader.onload = function () {\n      me.filetext1 = reader.result;\n      console.log(me)\n      //me.content.rightContent = (reader.result).toString()\n      me.handleChange('right', me.filetext1)\n    }\n    //this.handleChange('right',right)\n    this.Text1 = me.filetext1 \n  }\n  logintest(val) {\n    console.log(this.date)\n    console.log(this.login.value)\n    this.Compare = false;\n\n    console.log(this.Compare) \n    console.log(this.file2);\n    \n    var fd = new FormData();\n    fd.append('id', this.machineid);\n    // fd.append('user_id', this.sample_test.user_id);\n    fd.append('reason', this.login.value.reason);\n    // fd.append('user_name', this.login.value.name);\n    fd.append('slave_file',this.file2);\n    // fd.append('date',this.date);\n\n    fd.append('file_name', this.filName);\n    // fd.append('old_revision_no', this.login.value.old_revision_no);\n    // fd.append('new_revision_no', this.login.value.new_revision_no);\n    // let data = {\n    //   \"id\": this.machineid,\n    //   \"user_id\": this.sample_test.user_id,\n    //   \"reason\": this.login.value.reason,\n    //   \"file_name\": this.filName,\n    //   \"file_Name\": this.file2\n\n    // }\n    console.log(fd);\n    //  this.http.post('http:///192.168.0.237:4000/api/v1/compare_reason', fd, { headers: { Authorization: \"Bearer \" + localStorage.getItem(\"token\") } }).subscribe(res => {\n    //    console.log(res);\n       this.http.post(\"http://192.168.0.237:4000/api/v1/file_move\", fd, { headers: { Authorization: \"Bearer \" + localStorage.getItem(\"token\") } }).subscribe(resp => {\n      console.log(resp);\n      alert(resp['status'])\n      \n      this.ngOnInit();\n      \n      \n  })\n    this.submitted = false;\n    \n    this.login.reset();\n    this.filName = \"\";\n    this.Compare = false;\n    this.slave_file=\"\";\n    this.filName1 = \"\";\n    this.file_path = \"\";\n    this.file_name = \"\";\n    this.fileName1 = \"\";\n    this.filetext1 = \"\";\n    this.me.FileText = \"\";\n    this.compareResults = \"\";\n    this.machinesArray = \"\";\n\n    // 192.168.0.237:4030/api/v1/file_move?\n    \n  }\n  old(arg0: string, old: any) {\n    throw new Error(\"Method not implemented.\");\n  }\n  toggle() {\n    this.Compare = !this.Compare;\n\n    // CHANGE THE NAME OF THE BUTTON.\n    console.log(this.Compare)\n    if (this.Compare)\n      this.buttonName = \"Compare\";\n    else\n      this.buttonName = \"Compare\";\n  }\n  change(event){\n    this.date=event.value\n  }\n  logout()\n  {\n   \n        localStorage.clear();\n        this.route.navigateByUrl('');\n    \n  }\n}\n// @Component({\n//   selector: 'dialog-page',\n//   templateUrl: './dialog.component.html',\n// })\n// export class Dialog {\n//   login:FormGroup;\n//   reason:any;\n//   // machineid: any;\n//   constructor(private fb:FormBuilder,\n//     public dialogRef: MatDialogRef<Dialog>,\n//     @Inject(MAT_DIALOG_DATA) public data: any, private http: HttpClient) {\n  \n//       this.login=this.fb.group({\n//         changed:[\"\",Validators.required],\n//         old:[\"\",Validators.required],\n//         new:[\"\",Validators.required],\n//         reason:[\"\",Validators.required]\n       \n          \n\n//       })\n//     }\n\n   \n  \n\n//   loginform(val)\n//   {\n//     console.log(val)\n//     var fd = new FormData();\n//     fd.append('id', this.machineid);\n//     fd.append('file_name', this.filName);\n//     fd.append('slave_file', this.file2);\n\n//     console.log(fd);\n//     //  this.http.post('http:///192.168.0.237:4000/api/v1/compare_reason', fd, { headers: { Authorization: \"Bearer \" + localStorage.getItem(\"token\") } }).subscribe(res => {\n//     //    console.log(res);\n//        this.http.post(\"http:///192.168.0.237:4000/api/v1/file_move\", fd, { headers: { Authorization: \"Bearer \" + localStorage.getItem(\"token\") } }).subscribe(resp => {\n//       console.log(resp);\n//       alert(resp['status'])\n      \n      \n//   })\n//   }\n//   filName(arg0: string, filName: any) {\n//     throw new Error(\"Method not implemented.\");\n//   }\n//   machineid(arg0: string, machineid: any) {\n//     throw new Error(\"Method not implemented.\");\n//   }\n// }\n\n\n\n\n// Method : POST\n// url : http://183.82.250.137:4000/api/v1/compare_reason?\n// Parametrs :\n// {\n//   \"id\": \"40\",\n//   \"user_id\": \"56\",\n//   \"reason\": \"Comparing the master program and slave program\"\n// }\n\n\n\n// Method : GET\n// url : http://183.82.250.137:4000/api/v1/file_path?id=40","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home.component';\nimport { NgxTextDiffModule} from '../../../projects/ngx-text-diff/src/lib/ngx-text-diff.module';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatFormFieldModule} from '@angular/material/form-field';\nimport { MatInputModule} from '@angular/material/input';\nimport { MatButtonModule} from '@angular/material/button';\nimport { MatIconModule} from '@angular/material/icon';\nimport { MatCardModule} from '@angular/material/card'; \nimport { MatDialogModule} from '@angular/material/dialog';\nimport { MatSelectModule} from '@angular/material/select'; \nimport { MatDatepickerModule,MatNativeDateModule} from '@angular/material';\nimport { FormsModule,ReactiveFormsModule} from '@angular/forms';\n\nconst routes: Routes = [{ path: '', component: HomeComponent }];\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [RouterModule.forChild(routes),MatInputModule,MatButtonModule,MatIconModule,MatCardModule,\n    CommonModule,NgxTextDiffModule,HttpClientModule,MatFormFieldModule,MatDialogModule,MatSelectModule,\n    MatDatepickerModule,MatNativeDateModule,FormsModule,ReactiveFormsModule\n  ]\n})\nexport class HomeModule { }\n// import { NgxTextDiffModule } from '../../projects/ngx-text-diff/src/lib/ngx-text-diff.module';\n"],"sourceRoot":"webpack:///","file":"home-home-module-es5.js"}